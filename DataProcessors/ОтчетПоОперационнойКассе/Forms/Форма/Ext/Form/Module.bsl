
&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	Макет = Обработки.ОтчетПоОперационнойКассе.ПолучитьМакет("Макет");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТабличнойЧасти = Макет.ПолучитьОбласть("ШапкаТабличнойЧасти");
	ОбластьТелоТабличнойЧастиДень = Макет.ПолучитьОбласть("ТелоТабличнойЧастиДень");
	ОбластьТелоТабличнойЧасти = Макет.ПолучитьОбласть("ТелоТабличнойЧасти");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ТолькоПросмотр = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправленческийОстаткиИОбороты.СуммаНачальныйОстаток КАК НачальныйОстаток,
	|	УправленческийОстаткиИОбороты.СуммаКонечныйОстаток КАК КонечныйОстаток
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ОперационнаяКасса),
	|			,
	|			Подразделение = &Подразделение
	|				И Субконто2 = &Сотрудник) КАК УправленческийОстаткиИОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УправленческийОбороты.Регистратор КАК Документ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УправленческийОбороты.СуммаОборот, 0) > 0
	|			ТОГДА ЕСТЬNULL(УправленческийОбороты.СуммаОборот, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Приход,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УправленческийОбороты.СуммаОборотКт, 0) > 0
	|			ТОГДА ЕСТЬNULL(УправленческийОбороты.СуммаОборотКт, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Расход,
	|	УправленческийОбороты.Период КАК Период
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ОперационнаяКасса),
	|			,
	|			Подразделение = &Подразделение
	|				И Субконто2 = &Сотрудник,
	|			,
	|			) КАК УправленческийОбороты
	|ГДЕ
	|	УправленческийОбороты.Регистратор <> НЕОПРЕДЕЛЕНО
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ ПО
	|	Период";
	
	МассивЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаОстатки = МассивЗапросов[0].Выбрать();
	
	ОбластьШапка.Параметры.ДатаНачала = Формат(Период.ДатаНачала, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ДатаОкончания = Формат(Период.ДатаОкончания, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.Подразделение = Подразделение;
	ОбластьШапка.Параметры.Сотрудник = Сотрудник;
	
	ВыборкаОстатки.Следующий();
	ОбластьШапка.Параметры.НачальныйОстаток = ВыборкаОстатки.НачальныйОстаток;
	ОбластьПодвал.Параметры.КонечныйОстаток = ВыборкаОстатки.КонечныйОстаток;
	
	ТабДок.Вывести(ОбластьШапка);
	ТабДок.Вывести(ОбластьШапкаТабличнойЧасти);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДни = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДни.Следующий() Цикл
		
		ОбластьТелоТабличнойЧастиДень.Параметры.День = ВыборкаДни.Период;
		ТабДок.Вывести(ОбластьТелоТабличнойЧастиДень);
		
		ВыборкаДетальныеЗаписи = ВыборкаДни.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ОбластьТелоТабличнойЧасти.Параметры.Приход = ВыборкаДетальныеЗаписи.Приход;
			ОбластьТелоТабличнойЧасти.Параметры.Расход = ВыборкаДетальныеЗаписи.Расход;
			ОбластьТелоТабличнойЧасти.Параметры.Документ = ВыборкаДетальныеЗаписи.Документ;
			ОбластьТелоТабличнойЧасти.Параметры.ДокументСсылка = ВыборкаДетальныеЗаписи.Документ;
			ТабДок.Вывести(ОбластьТелоТабличнойЧасти);
			
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.Вывести(ОбластьПодвал);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Сотрудник = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
	Подразделение = Сотрудник.Подразделение;
	Период.Вариант = ВариантСтандартногоПериода.ЭтаНеделя;
	СформироватьНаСервере()
	
КонецПроцедуры
