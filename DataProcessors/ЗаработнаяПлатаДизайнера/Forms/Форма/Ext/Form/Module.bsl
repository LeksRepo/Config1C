
&НаКлиенте
Процедура МесяцВперед(Команда)
	
	ИзменитьПериод(1);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНазад(Команда)
	
	ИзменитьПериод(-1);
	
КонецПроцедуры

&НаКлиенте
Функция ИзменитьПериод(Направление)

	УстановленныйМесяц = Период.ДатаНачала;
	НовыйМесяц = ДобавитьМесяц(УстановленныйМесяц, Направление);
	Период.ДатаНачала = НачалоМесяца(НовыйМесяц);
	Период.ДатаОкончания = КонецМесяца(НовыйМесяц);
	ОбновитьДанныеНаСервере();

КонецФункции // ИзменитьПериод()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
	Период.ДатаОкончания = КонецМесяца(ТекущаяДата());
	//ИзменитьПериод(0);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ОбновитьДанныеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)

	ОбновитьДанныеНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ОбновитьДанныеНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Дизайнер) Тогда
		Дизайнер = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
	КонецЕсли;
	
	//ПараметрыДолжностей = РегистрыСведений.ПараметрыДолжностей.ПолучитьПоследнее(Период.ДатаНачала, Новый Структура("Подразделение", Дизайнер.Подразделение));
	ПолучитьЗначениеПоказателя();
	//КоличествоЗаключенныхДоговоров = ПолучитьЗначениеПоказателя(Дизайнер, Перечисления.ВидПоказателяСотрудника.КоличествоДоговоров, Период).Факт;

	//УщербОтПеределок = ПолучитьЗначениеПоказателя(Дизайнер, Перечисления.ВидПоказателяСотрудника.УщербОтПеределок, Период).Факт;
	//ЗаключеноДоговоров = ПолучитьЗначениеПоказателя(Дизайнер, Перечисления.ВидПоказателяСотрудника.СтоимостьДоговоров, Период);
	//ПланЗаключеноДоговоров = ЗаключеноДоговоров.План;
	//ФактЗаключеноДоговоров = ЗаключеноДоговоров.Факт;
	//ШтрафБонус = ЛексСервер.ПолучитьСуммуБонуса(ФактЗаключеноДоговоров, ПланЗаключеноДоговоров, ПараметрыДолжностей.ШтрафБонусДизайнеру);
	
	Если ЗначениеЗаполнено(ПланЗаключеноДоговоров) Тогда
		ПроцентВыполненияПлана = "" + Окр(ФактЗаключеноДоговоров / ПланЗаключеноДоговоров * 100, 2) + "%";
	КонецЕсли;
	
	//ПолученоДенегПоДоговорам = ПолучитьЗначениеПоказателя(Дизайнер, Перечисления.ВидПоказателяСотрудника.ВыручкаПоДоговорам, Период).Факт;
	//ОкладЗаМесяц = ПараметрыДолжностей.ОкладДизайнера;

	//ЗарплатаОтВыручки = ПараметрыДолжностей.ПроцентСОплатыДизайнер / 100 * ПолученоДенегПоДоговорам;

КонецФункции // ОбновитьДанныеНаСервере()

&НаСервере
Функция ПолучитьЗначениеПоказателя()

	Ответ = Новый Структура("План, Факт", 0, 0);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Дизайнер.Подразделение);
	Запрос.УстановитьПараметр("Сотрудник", Дизайнер);
	//Запрос.УстановитьПараметр("Показатель", Показатель);
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправленческийОбороты.СуммаОборот,
	|	УправленческийОбороты.Субконто2,
	|	УправленческийОбороты.Субконто1
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			,
	|			,
	|			Подразделение = &Подразделение
	|				И Субконто2 = &Сотрудник
	|				И ТИПЗНАЧЕНИЯ(Субконто1) = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСотрудников),
	|			,
	|			) КАК УправленческийОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеПоказателиДизайнеровОбороты.Дизайнер,
	|	ПлановыеПоказателиДизайнеровОбороты.Показатель КАК ПлановыйПоказатель,
	|	ПлановыеПоказателиДизайнеровОбороты.ЗначениеОборот
	|ИЗ
	|	РегистрНакопления.ПлановыеПоказателиДизайнеров.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Дизайнер = &Сотрудник
	|				И Подразделение = &Подразделение) КАК ПлановыеПоказателиДизайнеровОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализованныеИзделияОбороты.ВидИзделия,
	|	РеализованныеИзделияОбороты.КоличествоОборот КАК КоличествоКухонь,
	|	NULL КАК КоличествоНеКухонь
	|ИЗ
	|	РегистрНакопления.РеализованныеИзделия.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Дизайнер = &Сотрудник
	|				И Подразделение = &Подразделение
	|				И ВидИзделия = ЗНАЧЕНИЕ(Перечисление.ВидыИзделий.Кухня)) КАК РеализованныеИзделияОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	РеализованныеИзделияОбороты.КоличествоОборот
	|ИЗ
	|	РегистрНакопления.РеализованныеИзделия.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Дизайнер = &Сотрудник
	|				И Подразделение = &Подразделение
	|				И ВидИзделия <> ЗНАЧЕНИЕ(Перечисление.ВидыИзделий.Кухня)) КАК РеализованныеИзделияОбороты";
	
	ВыборкаПоПланам = Запрос.ВыполнитьПакет()[0].Выбрать();
	ВыборкаПоПоказателям = Запрос.ВыполнитьПакет()[1].Выбрать();
	Возврат Ответ;

КонецФункции // ПолучитьЗначениеПоказателя()