
&НаКлиенте
Процедура МесяцВперед(Команда)
	
	ИзменитьПериод(1);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНазад(Команда)
	
	ИзменитьПериод(-1);
	
КонецПроцедуры

&НаКлиенте
Функция ИзменитьПериод(Направление)

	УстановленныйМесяц = Период.ДатаНачала;
	НовыйМесяц = ДобавитьМесяц(УстановленныйМесяц, Направление);
	Период.ДатаНачала = НачалоМесяца(НовыйМесяц);
	Период.ДатаОкончания = КонецМесяца(НовыйМесяц);
	ОбновитьДанныеНаСервере();

КонецФункции // ИзменитьПериод()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
	Период.ДатаОкончания = КонецМесяца(ТекущаяДата());
	ОбновитьДанныеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дизайнер = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)

	ОбновитьДанныеНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ОбновитьДанныеНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	ВидыПараметровНачислений = Перечисления.ВидыПараметровНачислений;
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(ВидыПараметровНачислений.ВыплатаДизайнерамЗаКухню);
	МассивПараметров.Добавить(ВидыПараметровНачислений.ВыплатаДизайнерамЗаШкаф);
	МассивПараметров.Добавить(ВидыПараметровНачислений.ВыплатаДизайнерамЗаЗамеры);
	МассивПараметров.Добавить(ВидыПараметровНачислений.ВыплатаДизайнерамЗаПеревыполнениеПлана);
	ТаблицаПараметров = Документы.НачислениеЗаработнойПлаты.ПолучитьЗначениеПараметров(МассивПараметров, Справочники.Должности.ДизайнерКонсультант, Период.ДатаОкончания);
	
	НайденнаяСтрока = ТаблицаПараметров.Найти(ВидыПараметровНачислений.ВыплатаДизайнерамЗаКухню);
	НачислениеЗаКухню = НайденнаяСтрока.Значение;
	НайденнаяСтрока = ТаблицаПараметров.Найти(ВидыПараметровНачислений.ВыплатаДизайнерамЗаШкаф);
	НачислениеЗаШкаф = НайденнаяСтрока.Значение;
	НайденнаяСтрока = ТаблицаПараметров.Найти(ВидыПараметровНачислений.ВыплатаДизайнерамЗаЗамеры);
	НачислениеЗамерСверхПлана = НайденнаяСтрока.Значение;
	НайденнаяСтрока = ТаблицаПараметров.Найти(ВидыПараметровНачислений.ВыплатаДизайнерамЗаПеревыполнениеПлана);
	НадбавкаОтВыручки = НайденнаяСтрока.Значение;
	
	Зарплата = 0;
	
	СтруктураПоказателейДизайнера = Документы.НачислениеЗаработнойПлаты.ПолучитьПоказателиДизайнера(Период.ДатаНачала, Период.ДатаОкончания, Дизайнер, Дизайнер.Подразделение);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтатноеРасписаниеСрезПоследних.Оклад
		|ИЗ
		|	РегистрСведений.ДолжностиСотрудников.СрезПоследних(
		|			&ДатаНачала,
		|			Подразделение = &Подразделение
		|				И ФизЛицо = &Дизайнер
		|				И Должность = ЗНАЧЕНИЕ(Справочник.Должности.ДизайнерКонсультант)
		|				И Работает) КАК ДолжностиСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписание.СрезПоследних(
		|				&ДатаНачала,
		|				Подразделение = &Подразделение
		|					И Должность = ЗНАЧЕНИЕ(Справочник.Должности.ДизайнерКонсультант)) КАК ШтатноеРасписаниеСрезПоследних
		|		ПО ДолжностиСотрудниковСрезПоследних.Подразделение = ШтатноеРасписаниеСрезПоследних.Подразделение
		|			И ДолжностиСотрудниковСрезПоследних.Должность = ШтатноеРасписаниеСрезПоследних.Должность";

	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Дизайнер", Дизайнер);
	Запрос.УстановитьПараметр("Подразделение", Дизайнер.Подразделение);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ОкладЗаМесяц = ВыборкаДетальныеЗаписи.Оклад;
		
	КонецЦикла;
	
	
	ПланЗамеров = ?(СтруктураПоказателейДизайнера.Свойство("КоличествоПлановыхЗамеров") и ЗначениеЗаполнено(СтруктураПоказателейДизайнера.КоличествоПлановыхЗамеров), СтруктураПоказателейДизайнера.КоличествоПлановыхЗамеров, 0);
	ФактЗамеров = ?(СтруктураПоказателейДизайнера.Свойство("КоличествоФактическихЗамеров") и ЗначениеЗаполнено(СтруктураПоказателейДизайнера.КоличествоФактическихЗамеров), СтруктураПоказателейДизайнера.КоличествоФактическихЗамеров, 0);
	ПланПоВыручке = ?(СтруктураПоказателейДизайнера.Свойство("ПлановаяВыручкаПоДоговорам") и ЗначениеЗаполнено(СтруктураПоказателейДизайнера.ПлановаяВыручкаПоДоговорам), СтруктураПоказателейДизайнера.ПлановаяВыручкаПоДоговорам, 0);
	ПолученоДенегПоДоговорам = ?(СтруктураПоказателейДизайнера.Свойство("ФактическаяВыручкаПоДоговорам") и ЗначениеЗаполнено(СтруктураПоказателейДизайнера.ФактическаяВыручкаПоДоговорам), СтруктураПоказателейДизайнера.ФактическаяВыручкаПоДоговорам, 0);
	КоличествоКухонь = ?(СтруктураПоказателейДизайнера.Свойство("КоличествоКухонь") и ЗначениеЗаполнено(СтруктураПоказателейДизайнера.КоличествоКухонь), СтруктураПоказателейДизайнера.КоличествоКухонь, 0);
	КоличествоШкафов = ?(СтруктураПоказателейДизайнера.Свойство("КоличествоШкафов") и ЗначениеЗаполнено(СтруктураПоказателейДизайнера.КоличествоШкафов), СтруктураПоказателейДизайнера.КоличествоШкафов, 0);
	КоличествоЗаключенныхДоговоров = ?(СтруктураПоказателейДизайнера.Свойство("КоличествоФактическиЗаключенныхДоговоров") и ЗначениеЗаполнено(СтруктураПоказателейДизайнера.КоличествоФактическиЗаключенныхДоговоров), СтруктураПоказателейДизайнера.КоличествоФактическиЗаключенныхДоговоров, 0);
	ЭффективныхЗамеров = КоличествоЗаключенныхДоговоров;
	ОплачиваемыеЗамеры = Окр(КоличествоЗаключенныхДоговоров - ПланЗамеров, 0, РежимОкругления.Окр15как10);
	ОплатаЗаЗамерыЧисло = ОплачиваемыеЗамеры * НачислениеЗамерСверхПлана;
	ОплатаЗаЗамеры = "(" + ЭффективныхЗамеров + " - " + ПланЗамеров + ") * " + НачислениеЗамерСверхПлана + " = " + ОплатаЗаЗамерыЧисло;
	
	Если ОплачиваемыеЗамеры > 0 Тогда
		
		Зарплата = Зарплата + ОплатаЗаЗамерыЧисло;
		
	КонецЕсли;
	
	НачислениеЗаИзделия = КоличествоШкафов * НачислениеЗаШкаф + КоличествоКухонь * НачислениеЗаКухню;
	Зарплата = ?(КоличествоШкафов> 0 или КоличествоКухонь >0, Зарплата + НачислениеЗаИзделия, Зарплата);
	НадбавкаЗаВидИзделия = "" + КоличествоКухонь + " * " + НачислениеЗаКухню + " + " + КоличествоШкафов + " * " + НачислениеЗаШкаф + " = " + НачислениеЗаИзделия;
	ЗаПеревыполнениеПлана = ?(ПолученоДенегПоДоговорам - ПланПоВыручке > 0, НадбавкаОтВыручки, 0);
	Зарплата = Зарплата + ЗаПеревыполнениеПлана;
	Итого = "" + ОплатаЗаЗамерыЧисло + " + " + ЗаПеревыполнениеПлана + " + " + НачислениеЗаИзделия + " = " + Зарплата;
	
	Если Зарплата < ОкладЗаМесяц Тогда
		
		Объяснение = "Сумма сдельной з.п. меньше оклада. Будет начислена сумма оклада.";
		Зарплата = ОкладЗаМесяц;
		
	ИначеЕсли Зарплата > ОкладЗаМесяц Тогда
		
		Объяснение = "Сумма сдельной з.п. больше оклада. Будет начислена сумма сдельной з.п.";
		
	Иначе
		
		Объяснение = "Сумма сдельной з.п. равна окладу. Редкий случай :) Будет начислена сумма оклада.";
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьЗначениеПоказателя()

	Ответ = Новый Структура("План, Факт", 0, 0);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Дизайнер.Подразделение);
	Запрос.УстановитьПараметр("Сотрудник", Дизайнер);
	//Запрос.УстановитьПараметр("Показатель", Показатель);
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправленческийОбороты.СуммаОборот,
	|	УправленческийОбороты.Субконто2,
	|	УправленческийОбороты.Субконто1
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			,
	|			,
	|			Подразделение = &Подразделение
	|				И Субконто2 = &Сотрудник
	|				И ТИПЗНАЧЕНИЯ(Субконто1) = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСотрудников),
	|			,
	|			) КАК УправленческийОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеПоказателиДизайнеровОбороты.Дизайнер,
	|	ПлановыеПоказателиДизайнеровОбороты.Показатель КАК ПлановыйПоказатель,
	|	ПлановыеПоказателиДизайнеровОбороты.ЗначениеОборот
	|ИЗ
	|	РегистрНакопления.ПлановыеПоказателиДизайнеров.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Дизайнер = &Сотрудник
	|				И Подразделение = &Подразделение) КАК ПлановыеПоказателиДизайнеровОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализованныеИзделияОбороты.ВидИзделия,
	|	РеализованныеИзделияОбороты.КоличествоОборот КАК КоличествоКухонь,
	|	NULL КАК КоличествоНеКухонь
	|ИЗ
	|	РегистрНакопления.РеализованныеИзделия.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Дизайнер = &Сотрудник
	|				И Подразделение = &Подразделение
	|				И ВидИзделия = ЗНАЧЕНИЕ(Перечисление.ВидыИзделий.Кухня)) КАК РеализованныеИзделияОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	РеализованныеИзделияОбороты.КоличествоОборот
	|ИЗ
	|	РегистрНакопления.РеализованныеИзделия.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Дизайнер = &Сотрудник
	|				И Подразделение = &Подразделение
	|				И ВидИзделия <> ЗНАЧЕНИЕ(Перечисление.ВидыИзделий.Кухня)) КАК РеализованныеИзделияОбороты";
	
	ВыборкаПоПланам = Запрос.ВыполнитьПакет()[0].Выбрать();
	ВыборкаПоПоказателям = Запрос.ВыполнитьПакет()[1].Выбрать();
	Возврат Ответ;

КонецФункции // ПолучитьЗначениеПоказателя()