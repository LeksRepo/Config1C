
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьТЗ();
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПлан()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГрафикВстречИЗамеров.Период,
	|	ГрафикВстречИЗамеров.Сотрудник КАК Сотрудник,
	|	ГрафикВстречИЗамеров.Регистратор.АдресЗамера КАК АдресЗамера
	|ИЗ
	|	РегистрСведений.ГрафикВстречИЗамеров КАК ГрафикВстречИЗамеров
	|ГДЕ
	|	ГрафикВстречИЗамеров.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ГрафикВстречИЗамеров.Подразделение = &Подразделение
	|	И ГрафикВстречИЗамеров.Сотрудник В(&СписокЗамерщиков)";
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("СписокЗамерщиков", СписокЗамерщиков);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Период));

	Результат = Запрос.Выполнить();
	ТЗ = Результат.Выгрузить();
	
	СекундВЧасе = 60 * 60;
	МассивЗамерщиков = СписокЗамерщиков.ВыгрузитьЗначения();
	
	ЭтаФорма.План.Очистить();
	Для Час = 9 По 18 Цикл
		НоваяСтрока = ЭтаФорма.План.Добавить();
		ПериодВремя = Период + Час * СекундВЧасе;
		НоваяСтрока.Время = ПериодВремя;
		Для ы = 0 по МассивЗамерщиков.Количество()-1 Цикл
			
			Отбор = Новый Структура;
			Отбор.Вставить("Период", ПериодВремя);
			Отбор.Вставить("Сотрудник", МассивЗамерщиков[ы]);
			ПоискСтроки = ТЗ.НайтиСтроки(Отбор);
			
			Если ПоискСтроки.Количество() = 1 Тогда
				НоваяСтрока["Замерщик"+Число(ы+1)] = ПоискСтроки[0].АдресЗамера;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	// если понадобится время после 18:00
	// добавлять обработку сюда
	
КонецФункции // ЗаполнитьПлан()

&НаСервере
Процедура ИнициализироватьТЗ()
	
	ОчиститьРеквизиты();
	МассивДобавляемыхРеквизитов = Новый Массив;
	МассивЗамерщиков = СписокЗамерщиков.ВыгрузитьЗначения();
	
	// добавим новый реквизит обработки, таблица значения с именем "План"
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("План", Новый ОписаниеТипов("ТаблицаЗначений")));
	// добавим новую колонку для таблицы значения
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Время", Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Время)),"План" ,"Время"));
	
	// добавим колонки по количеству замерщиков
	Для ы = 1 По МассивЗамерщиков.Количество() Цикл
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Замерщик"+ы, Новый ОписаниеТипов("Строка"),"План"));
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	МассивДобавляемыхРеквизитов.Очистить();
	
	// добавляем элементы формы к созданным талице значения и колонкам
	ТаблицаФормы = Элементы.Добавить("План", Тип("ТаблицаФормы"));
	ТаблицаФормы.ПутьКДанным = "План";
	ТаблицаФормы.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	ТаблицаФормы.ТолькоПросмотр = Истина;
	
	ДобавитьКолонку("План", "Время", "Время");
	Для ы = 1 По МассивЗамерщиков.Количество() Цикл
		ДобавитьКолонку("План", "Замерщик"+ы, МассивЗамерщиков[ы-1]);
	КонецЦикла;
	
	ЗаполнитьПлан();
	
	ТаблицаФормы.УстановитьДействие("Выбор", "ПланВыбор");
	
КонецПроцедуры // ИнициализироватьТЗ()

&НаКлиенте
Процедура ПланВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	// вот так кривенько получаем значение ячейки по которой ткнули мышей
	ИмяКолонки = СтрЗаменить(Поле.Имя, "План", "");
	ЗначениеЯчейки = Элементы.План.ТекущиеДанные[ИмяКолонки];
	ПараметрыФормы = Новый Структура;
	
	Если ИмяКолонки = "Время" Тогда
		Возврат;
	КонецЕсли;
	
	// сотрудника находим ещё кривее
	// хотя не вижу ситуаций когда 
	// такой код будет давать сбой
	
	// только для ДЕВЯТИ замерщиков
	// можно сделать бесконечное количество,
	// но пока вроде незачем :)
	НомерКолонки = Число(Прав(Поле.Имя,1))-1;
	Замерщик = СписокЗамерщиков.Получить(НомерКолонки).Значение;
	ДатаЗамера = Период + Час(Элемент.ТекущиеДанные["Время"]) * 60 * 60;
	
	// если ткнули по заполненному полю,
	// тогда открыть существующий замер
	
	Если ТипЗнч(ЗначениеЯчейки) = Тип("Строка") Тогда
		
		Если ЗначениеЯчейки <> "" Тогда
			// замер уже есть
			// только теперь нужно его найти :)
			ВыбранныйЗамер = ПолучитьЗамер(ДатаЗамера, Подразделение, Замерщик);
			ПараметрыФормы.Вставить("Ключ", ВыбранныйЗамер);
		Иначе
			// замера ещё нет
			Заполнение = Новый Структура;
			Заполнение.Вставить("ОбработкаЗаписьНаЗамер", Истина);
			Заполнение.Вставить("Замерщик", Замерщик);
			Заполнение.Вставить("ДатаЗамера", ДатаЗамера);
			Заполнение.Вставить("Подразделение", Подразделение);
			ПараметрыФормы.Вставить("Основание", Заполнение);
		КонецЕсли;
		ОткрытьФорму("Документ.Замер.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры // ПланВыборЗначения()

&НаСервереБезКонтекста
Функция ПолучитьЗамер(Период, Подразделение, Замерщик)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Замерщик", Замерщик);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГрафикВстречИЗамеровСрезПоследних.Регистратор
	|ИЗ
	|	РегистрСведений.ГрафикВстречИЗамеров.СрезПоследних(
	|			&Период,
	|			Подразделение = &Подразделение
	|				И Сотрудник = &Замерщик) КАК ГрафикВстречИЗамеровСрезПоследних";
	Результат = Запрос.Выполнить();
	Если не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Регистратор;
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Очень-очень странно, не найден документ замера для Подразделения: "
			+Подразделение+" Замерщик: "+Замерщик+" Период: "+Период;
		Сообщение.Сообщить();
	КонецЕсли;

КонецФункции // ПолучитьЗамер()

&НаСервере
Процедура ОчиститьРеквизиты()
	ЭлементДляУдаления = Элементы.Найти("План");
	Если Не ЭлементДляУдаления = Неопределено Тогда
		Элементы.Удалить(ЭлементДляУдаления);
	
		УдаляемыеРеквизиты = Новый Массив();
		УдаляемыеРеквизиты.Добавить("План");
		ИзменитьРеквизиты(, УдаляемыеРеквизиты);
	КонецЕсли;
КонецПроцедуры // ОчиститьРеквизиты()

&НаСервере
Процедура ДобавитьКолонку(ИмяТаблицы, ИмяКолонки, ЗаголовокКолонки)
	НоваяКолонка = Элементы.Добавить(ИмяТаблицы + ИмяКолонки, Тип("ПолеФормы"), Элементы.План);
	НоваяКолонка.Заголовок = ЗаголовокКолонки;
	НоваяКолонка.ПутьКДанным = ИмяТаблицы + "." + ИмяКолонки;
	НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода;
	НоваяКолонка.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
КонецПроцедуры

&НаКлиенте
Процедура СписокЗамерщиковПриИзменении(Элемент)
	ИнициализироватьТЗ();
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ЗаполнитьЗамерщиков();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗамерщика(Команда)
	
	ФормаВыбора = ПолучитьФорму("Справочник.ФизическиеЛица.ФормаВыбора",, Элементы.СписокЗамерщиков);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗамерщиковОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если не ВыбранноеЗначение.Пустая() Тогда
		СтандартнаяОбработка = Ложь;
		СписокЗамерщиков.Добавить(ВыбранноеЗначение);
		ИнициализироватьТЗ();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ЗаполнитьПлан();
	ЗаполнитьЗамерщиков(); // вдруг выбрали другого замерщика, кого нет в списке
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗамерщиков(Подразделение, Период)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ФизическиеЛица.Ссылка КАК Ссылка
	|	ИЗ
	|		Справочник.ФизическиеЛица КАК ФизическиеЛица
	|	ГДЕ
	|		ФизическиеЛица.ОсновнаяДолжность = ЗНАЧЕНИЕ(Справочник.Должности.СтаршийДизайнер)
	|		И ФизическиеЛица.Подразделение = &Подразделение
	|		И ФизическиеЛица.Активность
	|		И НЕ ФизическиеЛица.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Замер.Замерщик
	|	ИЗ
	|		Документ.Замер КАК Замер
	|	ГДЕ
	|		Замер.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Замер.Подразделение = &Подразделение) КАК Т";
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Период));
	Результат = Запрос.Выполнить();
	Если не Результат.Пустой() Тогда
		Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	Иначе
		Возврат Новый Массив;
	КонецЕсли;
КонецФункции // ЗаполнитьЗамерщиков()

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ЗаполнитьЗамерщиков();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗамерщиков()

	МассивЗамерщиков = ПолучитьЗамерщиков(Подразделение, Период);
	СписокЗамерщиков.Очистить();
	Для каждого ы Из МассивЗамерщиков Цикл
		СписокЗамерщиков.Добавить(ы);
	КонецЦикла;
	
	ИнициализироватьТЗ();

КонецПроцедуры // ЗаполнитьЗамерщиков()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Период = ТекущаяДата();
	Элементы.Подразделение.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокПодразделений());
	ЗаполнитьЗамерщиков();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокПодразделений()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Подразделения.Ссылка
	|ИЗ
	|	Справочник.Подразделения КАК Подразделения
	|ГДЕ
	|	Подразделения.ВидПодразделения = ЗНАЧЕНИЕ(Перечисление.ВидыПодразделений.Розница)";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

КонецФункции // ПолучитьСписокПодразделений()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// Вставить содержимое обработчика.
КонецПроцедуры

