Процедура СоздатьЭлементыФормы()

	ПоказатьУправленческий = Ложь;

	Для каждого СтрокаРегистра Из Объект.Регистры Цикл

		Если СтрокаРегистра.Имя = "Управленческий" Тогда
			ПоказатьУправленческий = СтрокаРегистра.Отображение;
			Продолжить;
		КонецЕсли;
		
		// Создаем страницу для регистра в "правильном" месте между "предопределенными" закладками
		ИмяГруппы = "Группа" + СтрокаРегистра.Имя;
		ТекГруппа = Элементы.Найти(ИмяГруппы);
		Если ТекГруппа = Неопределено Тогда
			Если СтрокаРегистра.ТипРегистра = "РегистрБухгалтерии" Тогда
				ТекГруппа = Элементы.Вставить(
					ИмяГруппы,
					Тип("ГруппаФормы"),
					Элементы.ГруппаДвиженияРегистров);
			ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрНакопления" Тогда
				ТекГруппа = Элементы.Вставить(
					ИмяГруппы,
					Тип("ГруппаФормы"),
					Элементы.ГруппаДвиженияРегистров);
			ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрСведений" Тогда
				ТекГруппа = Элементы.Вставить(
					ИмяГруппы,
					Тип("ГруппаФормы"),
					Элементы.ГруппаДвиженияРегистров);
			Иначе
				Продолжить;
			КонецЕсли;
			ТекГруппа.Заголовок = СтрокаРегистра.Синоним;
		КонецЕсли;

		// Делаем страницу регистра невидимой, если она не нужна
		ТекГруппа.Видимость = СтрокаРегистра.Отображение;
		Если НЕ СтрокаРегистра.Отображение Тогда
			Продолжить;
		КонецЕсли;

		// На странице регистра создаем таблицу
		ИмяТаблицы = СтрокаРегистра.Имя;
		ТекТаблица = Элементы.Найти(ИмяТаблицы);
		Если ТекТаблица <> Неопределено Тогда
			Элементы.Удалить(ТекТаблица);
		КонецЕсли;
		ТекТаблица = Элементы.Добавить(ИмяТаблицы, Тип("ТаблицаФормы"), ТекГруппа);
		ТекТаблица.ПутьКДанным = СтрокаРегистра.Имя;

		ТекТаблица.ПутьКДаннымКартинкиСтроки = СтрокаРегистра.Имя + ".Активность";
		Если СтрокаРегистра.ТипРегистра = "РегистрБухгалтерии" Тогда
			ТекТаблица.КартинкаСтрок = БиблиотекаКартинок.АктивностьПоРБ;
		ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрНакопления" Тогда
			ТекТаблица.КартинкаСтрок = БиблиотекаКартинок.АктивностьПоРН;
			ТекТаблица.ПутьКДаннымКартинкиСтроки = СтрокаРегистра.Имя + ".КартинкаСтроки";
		ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрСведений" Тогда
			ТекТаблица.КартинкаСтрок = БиблиотекаКартинок.АктивностьПоРС;
		КонецЕсли;
			
		// Назначаем общий обработчик
		ТекТаблица.УстановитьДействие("ПриНачалеРедактирования", "ТаблицаРегистраПриНачалеРедактирования");
		
		// Определяем набор колонок для таблицы, соответствующих метаданным регистра
		Если СтрокаРегистра.ТипРегистра = "РегистрНакопления" Тогда
			НаборЗаписей = РегистрыНакопления[СтрокаРегистра.Имя].СоздатьНаборЗаписей();
		ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрСведений" Тогда
			НаборЗаписей = РегистрыСведений[СтрокаРегистра.Имя].СоздатьНаборЗаписей();
		ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрБухгалтерии" Тогда
			НаборЗаписей = РегистрыБухгалтерии[СтрокаРегистра.Имя].СоздатьНаборЗаписей();
		КонецЕсли;
		РеквизитыНабораЗаписей = НаборЗаписей.ВыгрузитьКолонки();

		// Некоторые колонки не надо показывать
		РеквизитыНабораЗаписей.Колонки.Удалить("Регистратор");
		РеквизитыНабораЗаписей.Колонки.Удалить("Активность");
		Если РеквизитыНабораЗаписей.Колонки.Найти("МоментВремени") <> Неопределено Тогда
			РеквизитыНабораЗаписей.Колонки.Удалить("МоментВремени");
		КонецЕсли;
		Если РеквизитыНабораЗаписей.Колонки.Найти("Организация") <> Неопределено Тогда
			РеквизитыНабораЗаписей.Колонки.Удалить("Организация");
		КонецЕсли;

		// Создаем колонки таблицы
		Для каждого КолонкаРеквизита Из РеквизитыНабораЗаписей.Колонки Цикл
			ИмяКолонки = СтрокаРегистра.Имя + КолонкаРеквизита.Имя;
			ТекКолонка = Элементы.Найти(ИмяКолонки);
			Если ТекКолонка = Неопределено Тогда
				ТекКолонка = Элементы.Добавить(ИмяКолонки, Тип("ПолеФормы"), ТекТаблица);
				
				Если КолонкаРеквизита.Имя = "ВидДвижения"
					И КолонкаРеквизита.ТипЗначения.Типы()[0] = Тип("ВидДвиженияНакопления") Тогда
					ТекКолонка.УстановитьДействие("ПриИзменении", "ВидДвиженияПриИзменении");
				КонецЕсли;
			КонецЕсли;
			ТекКолонка.ПутьКДанным = СтрокаРегистра.Имя + "." + КолонкаРеквизита.Имя;
			ТекКолонка.Вид = ВидПоляФормы.ПолеВвода;
		КонецЦикла;

	КонецЦикла;

	Элементы.ГруппаУправленческий.Видимость = ПоказатьУправленческий;

КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыФормы()

	НовыеРеквизиты        = Новый Массив;
	УдаляемыеРеквизиты    = Новый Массив;
	СуществующиеРеквизиты = ПолучитьРеквизиты();

	Для каждого СтрокаРегистра Из Объект.Регистры Цикл
		
		Если СтрокаРегистра.Имя = "Управленческий" Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого Реквизит Из СуществующиеРеквизиты Цикл
			Если Реквизит.Имя = СтрокаРегистра.Имя Тогда
				УдаляемыеРеквизиты.Добавить(СтрокаРегистра.Имя);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ТипРеквизита = Новый ОписаниеТипов(СтрокаРегистра.ТипРегистра + "НаборЗаписей." + СтрокаРегистра.Имя);
		
		НовыеРеквизиты.Добавить(Новый РеквизитФормы(СтрокаРегистра.Имя, ТипРеквизита, , , Истина));
		
		Если СтрокаРегистра.ТипРегистра = "РегистрНакопления" Тогда
			КартинкаСтроки = Новый РеквизитФормы("КартинкаСтроки", Новый ОписаниеТипов("Число"), СтрокаРегистра.Имя);
			НовыеРеквизиты.Добавить(КартинкаСтроки);
		КонецЕсли;
	КонецЦикла;
	
	ИзменитьРеквизиты(НовыеРеквизиты, УдаляемыеРеквизиты);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("ДокументСсылка") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДокументСсылка = Параметры.ДокументСсылка;
	
	Заголовок = "Движения документа: " + Строка(ДокументСсылка);
	
	МетаданныеДокумента = ДокументСсылка.Метаданные();
	
	ЗаполнитьСтруктуруШапкиДокумента(МетаданныеДокумента);
	
	ЗаполнитьТаблицуРегистров(МетаданныеДокумента);
	
	СоздатьРеквизитыФормы();
	ПрочитатьЗаписиРегистров();
	СоздатьЭлементыФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Управленческий

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ОпределитьНаличиеДвижений(МетаданныеДокумента = Неопределено)
	
	Если МетаданныеДокумента = Неопределено Тогда
		МетаданныеДокумента = ДокументСсылка.Метаданные();
	КонецЕсли;
	
	Если МетаданныеДокумента.Движения.Количество() = 0 Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	Для Каждого Движение ИЗ МетаданныеДокумента.Движения Цикл
		// в запросе получаем имена регистров, по которым есть хотя бы одно движение
		// например,
		// ВЫБРАТЬ Первые 1 «РегистрНакопления.ТоварыНаСкладах»
		// ИЗ РегистрНакопления.ТоварыНаСкладах
		// ГДЕ Регистратор = &Регистратор
		
		ТекстЗапроса = ТекстЗапроса + "
		|" + ?(ТекстЗапроса = "", "", "ОБЪЕДИНИТЬ ВСЕ ") + "
		|ВЫБРАТЬ ПЕРВЫЕ 1 """ + Движение.ПолноеИмя() +  """ КАК Имя ИЗ "
		+ Движение.ПолноеИмя() + " ГДЕ Регистратор = &Регистратор";
		
	КонецЦикла;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаЗапроса;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуРегистров(МетаданныеДокумента = Неопределено)
	
	Если МетаданныеДокумента = Неопределено Тогда
		МетаданныеДокумента = ДокументСсылка.Метаданные();
	КонецЕсли;
	
	ТаблицаДвижений = ОпределитьНаличиеДвижений(МетаданныеДокумента);
	ТаблицаДвижений.Индексы.Добавить("Имя");
	
	Объект.Регистры.Очистить();
	
	Для каждого МетаданныеРегистра Из МетаданныеДокумента.Движения Цикл
		
		Строка = Объект.Регистры.Добавить();
		Строка.Имя = МетаданныеРегистра.Имя;
		
		ПолноеИмя = МетаданныеРегистра.ПолноеИмя();
		
		ПозицияТочки = Найти(ПолноеИмя, ".");
		ТипРегистра = Лев(ПолноеИмя, ПозицияТочки - 1);
		Строка.ТипРегистра = ТипРегистра;
		Строка.Синоним = МетаданныеРегистра.Синоним;
		
		Строка.ЕстьДвижения = ТаблицаДвижений.Найти(ПолноеИмя, "Имя") <> Неопределено;
		Строка.Отображение = Строка.ЕстьДвижения;
		
	КонецЦикла;
	
	// Первым показывается регистр бухгалтерии, затем регистры накопления, затем - сведений
	Объект.Регистры.Сортировать("ТипРегистра, Синоним");
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЗаписиРегистров()
	
	Для Каждого СтрокаРегистра Из Объект.Регистры Цикл
		
		Если СтрокаРегистра.ТипРегистра = "РегистрНакопления" Тогда
			НаборЗаписей = РегистрыНакопления[СтрокаРегистра.Имя].СоздатьНаборЗаписей();
		ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрСведений" Тогда
			НаборЗаписей = РегистрыСведений[СтрокаРегистра.Имя].СоздатьНаборЗаписей();
		ИначеЕсли СтрокаРегистра.ТипРегистра = "РегистрБухгалтерии" Тогда
			НаборЗаписей = РегистрыБухгалтерии[СтрокаРегистра.Имя].СоздатьНаборЗаписей();
		КонецЕсли;
		
		НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
		
		Если СтрокаРегистра.ЕстьДвижения Тогда
			НаборЗаписей.Прочитать();
		КонецЕсли;
		
		ЗначениеВРеквизитФормы(НаборЗаписей, СтрокаРегистра.Имя);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруШапкиДокумента(МетаданныеДокумента = Неопределено)
	
	Если МетаданныеДокумента = Неопределено Тогда
		МетаданныеДокумента = ДокументСсылка.Метаданные();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Номер,
	|	Дата,
	|	Проведен,
	|	ПометкаУдаления";
	Для каждого РеквизитДокумента Из МетаданныеДокумента.Реквизиты Цикл
		ТекстЗапроса = ТекстЗапроса + ",
		|" + РеквизитДокумента.Имя;
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	Документ." + МетаданныеДокумента.Имя + " КАК Док
	|ГДЕ
	|	Ссылка = &ДокументСсылка";
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	ТаблицаШапки = Запрос.Выполнить().Выгрузить();
	СтруктураШапки = Новый Структура;
	Для каждого Колонка Из ТаблицаШапки.Колонки Цикл
		СтруктураШапки.Вставить(Колонка.Имя, ТаблицаШапки[0][Колонка.Имя]);
	КонецЦикла;
	
КонецПроцедуры
