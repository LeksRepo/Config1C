
&НаКлиенте
Процедура ЗаписатьИзменения(Команда)
	
	СтруктураНоменклатур = ПроверитьЗаполнениеНоменклатуры();
	
	Если СтруктураНоменклатур.НетОшибок Тогда
		
		ЗаписатьНаСервере();
		Модифицированность = Ложь;
		
		Оповестить("ЗаписаноСоответствие");
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	
	НаборЗаписей = РегистрыСведений.СоответствиеНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Номенклатура);
	НаборЗаписей.Отбор.Подразделение.Установить(Подразделение);
	НаборЗаписей.Записать();
	
	Для Каждого Строка Из ТаблицаСоответствий Цикл
		
		Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			
			ПодставляемаяНоменклатура = Строка.Номенклатура;
			НоменклатурнаяГруппа = ПодставляемаяНоменклатура.НоменклатурнаяГруппа;
			НаборЗаписей = РегистрыСведений.СоответствиеНоменклатуры.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Номенклатура.Установить(Номенклатура);
			НаборЗаписей.Отбор.НоменклатурнаяГруппа.Установить(НоменклатурнаяГруппа);
			НаборЗаписей.Отбор.Подразделение.Установить(Подразделение);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				НоваяЗапись = НаборЗаписей.Добавить();
			Иначе
				НоваяЗапись = НаборЗаписей[0];
			КонецЕсли;
			
			НоваяЗапись.Подразделение = Подразделение;
			НоваяЗапись.Номенклатура = Номенклатура;
			НоваяЗапись.ПодставляемаяНоменклатура = ПодставляемаяНоменклатура;
			НоваяЗапись.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
			
			НаборЗаписей.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеНоменклатуры()
	
	ЕстьОшибки = Ложь;
	
	СтруктураНоменклатурДляПроверки = Новый Структура;
	СтруктураНоменклатурДляПроверки.Вставить("НетОшибок", Истина);
	
	Ошибки = Неопределено;
	НомерСтроки = 0;
	Для каждого Строка Из ТаблицаСоответствий Цикл
		
		Если Не ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			
			Если НЕ (Строка.НоменклатурнаяГруппа = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.Кромка045_19")) Тогда
			
				НомерСтроки = ТаблицаСоответствий.Индекс(Строка);
				
				ПолеОшибки = "ТаблицаСоответствий[" + НомерСтроки  + "].Номенклатура";
				ТекстОшибки = "" + Строка.НоменклатурнаяГруппа + " обязательна для заполнения";
				
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "" + ПолеОшибки, ТекстОшибки);
				СтруктураНоменклатурДляПроверки.Вставить("НетОшибок", Ложь);
				
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, ЕстьОшибки);
	
	Возврат СтруктураНоменклатурДляПроверки;
	
КонецФункции // ПроверитьЗаполнение()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Подразделение")
		И Параметры.Свойство("Номенклатура") Тогда
		
		Подразделение = Параметры.Подразделение;
		Номенклатура = Параметры.Номенклатура;
		
		ПерезаполнитьТаблицу();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствийПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные.ОбязательноСоответствие Тогда
		
		// { Васильев Александр Леонидович [30.04.2015]
		// Сделать. Приличное сообщение.
		// } Васильев Александр Леонидович [30.04.2015]
		
		Сообщить("Этот элемент нельзя удалить");
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствийНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	НоваяНоменклатурнаяГруппа = ЛексСервер.ЗначениеРеквизитаОбъекта(ВыбранноеЗначение, "НоменклатурнаяГруппа");
	
	Если Элементы.ТаблицаСоответствий.ТекущиеДанные.ОбязательноСоответствие Тогда
		
		Если Элементы.ТаблицаСоответствий.ТекущиеДанные.НоменклатурнаяГруппа <> НоваяНоменклатурнаяГруппа Тогда
			
			// { Васильев Александр Леонидович [30.04.2015]
			// Сделать.
			// Приличное сообщение.
			// } Васильев Александр Леонидович [30.04.2015]
			
			СтандартнаяОбработка = Ложь;
			Сообщить("Номенклатурная группа не совпадает с выбранной");
			
		КонецЕсли;
		
	Иначе
		
		Элементы.ТаблицаСоответствий.ТекущиеДанные.НоменклатурнаяГруппа = НоваяНоменклатурнаяГруппа;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствийНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НомГруппа = Элементы.ТаблицаСоответствий.ТекущиеДанные.НоменклатурнаяГруппа;
	
	Если ЗначениеЗаполнено(НомГруппа) Тогда
		
		СтандартнаяОбработка = Ложь;
		ЗначениеОтбора = Новый Структура;
		ЗначениеОтбора.Вставить("НоменклатурнаяГруппа", НомГруппа);
		ЗначениеОтбора.Вставить("ЭтоГруппа", Ложь);
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Отбор", ЗначениеОтбора);
		
		Форма = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыОтбора, Элемент);
		Форма.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
		Форма.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ РазрешитьПерезаполнение() Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ПерезаполнитьТаблицу();
	
КонецПроцедуры

&НаСервере
Функция ПерезаполнитьТаблицу()
	
	// { Васильев Александр Леонидович [21.04.2015]
	// Костыль. Добавить проверку на подразделение
	// } Васильев Александр Леонидович [21.04.2015]
	
	ТаблицаСоответствий.Очистить();
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СправочникНоменклатура.Ссылка КАК Номенклатура,
		|	НоменклатурныеГруппы.Ссылка КАК НоменклатурнаяГруппа
		|ПОМЕСТИТЬ Предварительная
		|ИЗ
		|	Справочник.Номенклатура КАК СправочникНоменклатура,
		|	Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
		|ГДЕ
		|	СправочникНоменклатура.Ссылка = &Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Предварительная.Номенклатура,
		|	Предварительная.НоменклатурнаяГруппа,
		|	СоответствиеНоменклатуры.ПодставляемаяНоменклатура,
		|	Предварительная.НоменклатурнаяГруппа.ОбязательноСоответсвие КАК ОбязательноСоответсвие
		|ИЗ
		|	Предварительная КАК Предварительная
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатуры КАК СоответствиеНоменклатуры
		|		ПО Предварительная.Номенклатура = СоответствиеНоменклатуры.Номенклатура
		|			И Предварительная.НоменклатурнаяГруппа = СоответствиеНоменклатуры.НоменклатурнаяГруппа
		|			И (СоответствиеНоменклатуры.Подразделение = &Подразделение)
		|ГДЕ
		|	(Предварительная.НоменклатурнаяГруппа.ОбязательноСоответсвие
		|			ИЛИ СоответствиеНоменклатуры.ПодставляемаяНоменклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			НоваяСтрока = ТаблицаСоответствий.Добавить();
			НоваяСтрока.НоменклатурнаяГруппа = ВыборкаДетальныеЗаписи.НоменклатурнаяГруппа;
			НоваяСтрока.ОбязательноСоответствие = ВыборкаДетальныеЗаписи.ОбязательноСоответсвие;
			НоваяСтрока.Номенклатура = ВыборкаДетальныеЗаписи.ПодставляемаяНоменклатура;
			
		КонецЦикла;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоменклатурныеГруппы.Ссылка КАК НоменклатурнаяГруппа,
		|	НоменклатурныеГруппы.ОбязательноСоответсвие
		|ИЗ
		|	Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
		|ГДЕ
		|	НоменклатурныеГруппы.ОбязательноСоответсвие";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			НоваяСтрока = ТаблицаСоответствий.Добавить();
			НоваяСтрока.НоменклатурнаяГруппа = ВыборкаДетальныеЗаписи.НоменклатурнаяГруппа;
			НоваяСтрока.ОбязательноСоответствие = ВыборкаДетальныеЗаписи.ОбязательноСоответсвие;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ РазрешитьПерезаполнение() Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ПерезаполнитьТаблицу();
	
КонецПроцедуры

&НаКлиенте
Функция РазрешитьПерезаполнение()
	
	Ответ = Истина;
	
	Если Модифицированность И 
		Вопрос("Текущие настройки не будут сохранены." + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		
		Ответ = Ложь;
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции
