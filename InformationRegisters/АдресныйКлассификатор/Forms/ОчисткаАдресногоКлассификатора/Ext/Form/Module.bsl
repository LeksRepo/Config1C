
#Область ОбработчикиСобытийФормы

// Обработчик события "при создании на сервере" формы
// Заполняет таблицу по макету
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуПоМакетуАдресныхОбъектов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КоличествоВыбранных = КоличествоВыбранныхРегионов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события "выбор" элемента формы АдресныеОбъекты
// Инвертирует флаг выбора адресного объекта
//
&НаКлиенте
Процедура АдресныеОбъектыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Элемент.ТекущиеДанные.Пометка = Не Элемент.ТекущиеДанные.Пометка;
	КоличествоВыбранных = КоличествоВыбранныхРегионов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПометкаПриИзменении(Элемент)
	
	КоличествоВыбранных = КоличествоВыбранныхРегионов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события нажатия на кнопку командной панели
// элемента управления АдресныеОбъекты.
// Устанавливает флаг выбора всем адресным объектам в списке
//
&НаКлиенте
Процедура ВыделитьВсеВыполнить(Команда)
	
	УстановитьПометкиСпискаРегионов(Истина);
	
КонецПроцедуры

// Обработчик события нажатия на кнопку командной панели
// элемента управления АдресныеОбъекты.
// Снимает флаг выбора у всех адресных объектов в списке
//
&НаКлиенте
Процедура ОтменитьВыделитьВсеВыполнить(Команда)
	
	УстановитьПометкиСпискаРегионов(Ложь);
	
КонецПроцедуры

// Обработчик события нажатия на кнопку "Очистить"
// Проверяет корректность данных и вызывает диалог подтверждения
// очистки адресных сведений.
//
&НаКлиенте
Процедура ОчиститьВыполнить(Команда)
	
	ОчиститьСообщения();
	
	Если КоличествоВыделенныхАдресныхОбъектов() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Необходимо выбрать как минимум один адресный объект.'"), ,
					"АдресныеОбъекты");
		Возврат;
	КонецЕсли;
	
	// Список адресных объектов для очистки
	ВыбранныеОбъекты = Новый Массив;
	Для Каждого ЭлементАдресныйОбъект Из АдресныеОбъекты Цикл
		Если ЭлементАдресныйОбъект.Пометка Тогда
			ВыбранныеОбъекты.Добавить(Лев(ЭлементАдресныйОбъект.НаименованиеАдресногоОбъекта, 2));
		КонецЕсли;
	КонецЦикла;
	
	ТекстВопроса = НСтр("ru = 'Адресные сведения по выбранным объектам будут удалены. Удалить адресные сведения?'");
	
	Оповещение = Новый ОписаниеОповещения("ОчиститьВыполнитьЗавершение", ЭтотОбъект, Новый Структура);
	Оповещение.ДополнительныеПараметры.Вставить("ВыбранныеОбъекты", ВыбранныеОбъекты);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВыполнитьЗавершение(Знач РезультатВопроса, Знач ДополнительныеПараметры) Экспорт
	Если РезультатВопроса<>КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьАдресныеСведения(ДополнительныеПараметры.ВыбранныеОбъекты);
	
	Оповещение = Новый ОписаниеОповещения("ОчиститьВыполнитьЗавершениеПредупреждение", ЭтотОбъект, );
	ПоказатьПредупреждение(Оповещение, НСтр("ru='Адресные сведения успешно удалены.'"),,НСтр("ru='Удаление адресных сведений.'"));
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВыполнитьЗавершениеПредупреждение(Знач ДополнительныеПараметры) Экспорт
	Оповестить("Запись_АдресныйКлассификатор", Новый Структура("Событие", "Очистить"));
	Закрыть(Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Устанавливаем пометку только видимым элементам
//
&НаКлиенте
Процедура УстановитьПометкиСпискаРегионов(Знач Пометка)
	
	Для Каждого ЭлементАдресныйОбъект Из АдресныеОбъекты Цикл
		ИдентификаторСтроки = ЭлементАдресныйОбъект.ПолучитьИдентификатор();
		Если Элементы.АдресныеОбъекты.ДанныеСтроки(ИдентификаторСтроки) <> Неопределено Тогда
			// Строка видимая
			ЭлементАдресныйОбъект.Пометка = Пометка;
		КонецЕсли;
	КонецЦикла;
	
	КоличествоВыбранных = КоличествоВыбранныхРегионов();
КонецПроцедуры

&НаКлиенте
Функция КоличествоВыбранныхРегионов();
	
	Возврат АдресныеОбъекты.НайтиСтроки( Новый Структура("Пометка", Истина) ).Количество();
	
КонецФункции


// Заполняет переданную таблицу значений по значениям таблицы адресных объектов.
// Выбирается код, наименование и сокращение типа объекта.
//
&НаСервере
Процедура ЗаполнитьТаблицуПоМакетуАдресныхОбъектов()
	
	АдресныеОбъекты.Очистить();
	
	КлассификаторАдресныхОбъектовXML =
	   РегистрыСведений.АдресныйКлассификатор.ПолучитьМакет("КлассификаторАдресныхОбъектовРоссии").ПолучитьТекст();
	
	КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторАдресныхОбъектовXML).Данные;
	
	Для Каждого АдресныйОбъект Из КлассификаторТаблица Цикл
		
		Наименование = Лев(АдресныйОбъект.Code, 2)
		             + " - "
		             + АдресныйОбъект.Name
		             + " "
		             + АдресныйОбъект.Socr;
		
		НоваяСтрока = АдресныеОбъекты.Добавить();
		НоваяСтрока.Пометка             = Ложь;
		НоваяСтрока.НаименованиеАдресногоОбъекта = Наименование;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает количество помеченных адресных объектов
//
&НаКлиенте
Функция КоличествоВыделенныхАдресныхОбъектов()
	
	КоличествоВыделенныхАдресныхОбъектов = 0;
	
	Для Каждого ЭлементАдресныйОбъект Из АдресныеОбъекты Цикл
		Если ЭлементАдресныйОбъект.Пометка Тогда
			КоличествоВыделенныхАдресныхОбъектов = КоличествоВыделенныхАдресныхОбъектов + 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат КоличествоВыделенныхАдресныхОбъектов;
	
КонецФункции

// Удаляет адресные сведения по выбранным адресным объектам
//
&НаСервереБезКонтекста
Процедура ОчиститьАдресныеСведения(Знач ВыбранныеОбъекты)
	
	АдресныйКлассификатор.УдалитьАдресныеСведения(ВыбранныеОбъекты);
	АдресныйКлассификатор.ЗагрузитьАдресныеОбъектыПервогоУровня();
	
КонецПроцедуры

#КонецОбласти
