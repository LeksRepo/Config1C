
&НаКлиенте
Процедура Сохранить(Команда)

	ОповеститьОВыборе(ПолучитьСтруктуруОтверстий());	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ТаблицаОтверстий) Тогда
		ТаблицаОтверстий.Загрузить(ЗначениеИзСтрокиВнутр(Параметры.ТаблицаОтверстий));
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруОтверстий()
	
	СтруктураОтверстий = РеквизитФормыВЗначение("ТаблицаОтверстий");
	
	Возврат ЗначениеВСтрокуВнутр(СтруктураОтверстий);
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступность() 
	
	Если ЗначениеЗаполнено(ВидОтверстий) Тогда
		ОтверстияЦентр = ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодЕвровинт") ИЛИ ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержательАвто");
		ОтверстияЦентр78 = ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержатель") ИЛИ ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ОбратнаяПрисадка");
		МассивВидовОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
		ДоступноСмещениеОтступ = ЗначениеЗаполнено(МассивВидовОтверстий);
				
		МассивСторон = Новый Массив;
		МассивСторон.Добавить("Слева");
		МассивСторон.Добавить("Справа");
		МассивСторон.Добавить("Сверху");
		МассивСторон.Добавить("Снизу");
		МассивСторон.Добавить("Центр");
		
		Для Каждого Элемент Из МассивСторон Цикл
			
			МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("РасположениеОтверстия", Элемент));
			ВидОтверстийСоСтороны = Неопределено;
			Если ЗначениеЗаполнено(МассивОтверстий) Тогда
				ВидОтверстийСоСтороны = МассивОтверстий[0].ВидОтверстий;
			КонецЕсли;
			Если Элемент = "Центр"  Тогда
					Элементы["КоличествоОтверстий" + Элемент].Доступность = ОтверстияЦентр78 ИЛИ (НЕ ЗначениеЗаполнено(МассивОтверстий) И ОтверстияЦентр ИЛИ ВидОтверстийСоСтороны = ВидОтверстий);
			Иначе
				Если ДоступноСмещениеОтступ И (ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПазыПетель")) Тогда
					ПоложениеВидимости = МассивВидовОтверстий[0].РасположениеОтверстия;
					Элементы["КоличествоОтверстий" + Элемент].Доступность = (НЕ ЗначениеЗаполнено(МассивОтверстий) ИЛИ ВидОтверстийСоСтороны = ВидОтверстий) И НЕ ОтверстияЦентр78 И ВидОтверстий <> ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержательАвто") И ПоложениеВидимости = Элемент;
				Иначе
					Элементы["КоличествоОтверстий" + Элемент].Доступность = (НЕ ЗначениеЗаполнено(МассивОтверстий) ИЛИ ВидОтверстийСоСтороны = ВидОтверстий) И (НЕ ОтверстияЦентр78 И ВидОтверстий <> ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержательАвто"));	
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
				
		ДоступностьВысотаПервойВторойЛинии = ЗначениеЗаполнено(КоличествоОтверстийЦентр) И (ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодЕвровинт") ИЛИ ОтверстияЦентр78);
		Элементы.ВысотаОтверстийВторойЛинии.Доступность = ДоступностьВысотаПервойВторойЛинии;
		Элементы.ВысотаОтверстийПервойЛинии.Доступность = ДоступностьВысотаПервойВторойЛинии;
		
		Элементы.Смещение.Доступность = ДоступноСмещениеОтступ;
		Элементы.Отступ.Доступность = ДоступноСмещениеОтступ;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПазыПетель");
	Для Каждого Строка Из ТаблицаОтверстий Цикл
		ЭтаФорма["ВидОтверстия" + Строка.РасположениеОтверстия] = Строка.ВидОтверстий;	
	КонецЦикла;
	ВидОтверстийПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОтверстийПриИзменении(Элемент = Неопределено)
	
	КоличествоОтверстийСверху = 0;
	КоличествоОтверстийСлева = 0;
	КоличествоОтверстийСнизу = 0;
	КоличествоОтверстийСправа = 0;
	КоличествоОтверстийЦентр = 0;
	Смещение = 0; 
	ВысотаОтверстийПервойЛинии = 0; 
	ВысотаОтверстийВторойЛинии = 0; 
	Отступ = "0";
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
	Если МассивОтверстий.Количество() > 0 Тогда
	Для Каждого Строка Из МассивОтверстий Цикл	
		Если Строка.РасположениеОтверстия = "Центр7" ИЛИ Строка.РасположениеОтверстия = "Центр8" Тогда
			РасположениеОтверстия = "Центр";
		Иначе
			РасположениеОтверстия = Строка.РасположениеОтверстия;
		КонецЕсли;	
		ЭтаФорма["КоличествоОтверстий" + РасположениеОтверстия] = Строка.Количество;
	КонецЦикла;	
		Смещение = МассивОтверстий[0].Смещение;
		Отступ = МассивОтверстий[0].Отступ;
		ВысотаОтверстийПервойЛинии = МассивОтверстий[0].ВысотаПервойЛинии;
		ВысотаОтверстийВторойЛинии = МассивОтверстий[0].ВысотаВторойЛинии;
	КонецЕсли;
		
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийСверхуПриИзменении(Элемент)
	КоличествоОтверстийПриИзменении("Сверху", КоличествоОтверстийСверху);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийЦентрПриИзменении(Элемент)
	Если ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержатель") Тогда
		РасположениеОтверстия = "Центр7";
	ИначеЕсли ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ОбратнаяПрисадка") Тогда
		РасположениеОтверстия = "Центр8";
	Иначе
		РасположениеОтверстия = "Центр";
	КонецЕсли;
	КоличествоОтверстийПриИзменении(РасположениеОтверстия, КоличествоОтверстийЦентр);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийСлеваПриИзменении(Элемент)
	КоличествоОтверстийПриИзменении("Слева", КоличествоОтверстийСлева);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийСправаПриИзменении(Элемент)
	КоличествоОтверстийПриИзменении("Справа", КоличествоОтверстийСправа);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийСнизуПриИзменении(Элемент)
	КоличествоОтверстийПриИзменении("Снизу", КоличествоОтверстийСнизу);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийПриИзменении(РасположениеОтверстия, Количество)
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("РасположениеОтверстия", РасположениеОтверстия));
	Если МассивОтверстий.Количество() > 0 Тогда
		Если МассивОтверстий[0].Количество <> Количество И Количество > 0 Тогда
			МассивОтверстий[0].Количество = Количество;	
			ЭтаФорма["ВидОтверстия" + РасположениеОтверстия] = ВидОтверстий;
		ИначеЕсли МассивОтверстий[0].Количество <> Количество И Количество = 0 Тогда
			ТаблицаОтверстий.Удалить(МассивОтверстий[0]);	
			ЭтаФорма["ВидОтверстия" + РасположениеОтверстия] = Неопределено;
		КонецЕсли;
	ИначеЕсли Количество <> 0 Тогда
		НоваяСтрока = ТаблицаОтверстий.Добавить();
		НоваяСтрока.ВидОтверстий = ВидОтверстий;
		НоваяСтрока.Количество = Количество;
		НоваяСтрока.РасположениеОтверстия = РасположениеОтверстия;
		ЭтаФорма["ВидОтверстия" + РасположениеОтверстия] = ВидОтверстий;
		Смещение = 100;
		НоваяСтрока.Смещение = Смещение;
	КонецЕсли;
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура СмещениеПриИзменении(Элемент)
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
	Для Каждого Строка Из МассивОтверстий Цикл
		Строка.Смещение = Смещение;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтступПриИзменении(Элемент)
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
	Для Каждого Строка Из МассивОтверстий Цикл
		Строка.Отступ = Отступ;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВысотаОтверстийПервойВторойЛинииПриИзменении(Элемент)
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
	Для Каждого Строка Из МассивОтверстий Цикл
		Строка.ВысотаПервойЛинии = ВысотаОтверстийПервойЛинии;
		Строка.ВысотаВторойЛинии = ВысотаОтверстийВторойЛинии;
	КонецЦикла;
КонецПроцедуры

