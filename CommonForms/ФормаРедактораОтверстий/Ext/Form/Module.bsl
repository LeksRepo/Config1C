
&НаКлиенте
Процедура Сохранить(Команда)
	
	Если Обновлять Тогда
		ОповеститьФорму();
		Закрыть();
	Иначе
		ОповеститьОВыборе(ПолучитьСтруктуруОтверстий());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьФорму()
	
	Если Обновлять Тогда
		Оповестить("СтруктураОтверстий",ПолучитьСтруктуруОтверстий());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ТаблицаОтверстий.Очистить();
	ВидОтверстийПриИзменении();
	
	
	ВидОтверстияСверху = Неопределено;
	ВидОтверстияСлева = Неопределено;
	ВидОтверстияСнизу = Неопределено;
	ВидОтверстияСправа = Неопределено;
	ВидОтверстияЦентр = Неопределено;
	ВидОтверстияЦентр7 = Неопределено;
	ВидОтверстияЦентр8 = Неопределено;
	
	ОбновитьКоличествоВсехОтверстий();
	
	ОповеститьФорму();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоВсехОтверстий()

	ТекущийВид = ВидОтверстий;
	
	ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.Европаз");
	ОбновитьКоличествоОтверстий();
	
	ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПазыПетель");
	ОбновитьКоличествоОтверстий();
	
	ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ОбратнаяПрисадка");
	ОбновитьКоличествоОтверстий();
	
	ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ТорцеваяПрисадка");
	ОбновитьКоличествоОтверстий();
	
	ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодСтяжки");
	ОбновитьКоличествоОтверстий();
	
	ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодЕвровинт");
	ОбновитьКоличествоОтверстий();
	
	ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержатель");
	ОбновитьКоличествоОтверстий();
	
	ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержательАвто");
	ОбновитьКоличествоОтверстий();
	
	ВидОтверстий = ТекущийВид;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоОтверстий()
	
	 МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
	 Количество = 0;
	 
	 Если МассивОтверстий.Количество() > 0 Тогда
		  Для Каждого Строка Из МассивОтверстий Цикл	
			  
			 Количество = Количество + Строка.Количество; 
			  
		  КонецЦикла;
	 КонецЕсли;
	  
	 Название = "";
	 
	 Если ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.Европаз") Тогда
		  Название = "Европаз";
	 ИначеЕсли ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПазыПетель") Тогда
	      Название = "ПазыПетель";
	 ИначеЕсли ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ОбратнаяПрисадка") Тогда
	      Название = "ОбратнаяПрисадка";
	 ИначеЕсли ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ТорцеваяПрисадка") Тогда
	      Название = "ТорцеваяПрисадка";
	 ИначеЕсли ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодСтяжки") Тогда
	      Название = "ПрисадкаПодСтяжки";
	 ИначеЕсли ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодЕвровинт") Тогда
	      Название = "ПрисадкаПодЕвровинт";
	 ИначеЕсли ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержатель") Тогда
	      Название = "ПрисадкаПодПолкодержатель";
	 ИначеЕсли ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержательАвто") Тогда
	      Название = "ПрисадкаПодПолкодержательАвто";
	 КонецЕсли;
	 
	 Если Количество = 0 Тогда
		  
		  Элементы["Вид"+Название].ЦветТекста = Новый Цвет(0,0,0);
		  Элементы["Вид"+Название].Шрифт = Новый Шрифт(,, Ложь);
		  ЭтаФорма["КоличествоОтверстий"+Название] = "";
		  
	 Иначе
		 
		  Элементы["Вид"+Название].ЦветТекста = WebЦвета.ЗеленыйЛес;
		  Элементы["Вид"+Название].Шрифт = Новый Шрифт(,, Истина);
		  ЭтаФорма["КоличествоОтверстий"+Название] = Количество;
		 
	 КонецЕсли;
		  
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Обновлять") Тогда
		Обновлять = Параметры.Обновлять;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ТаблицаОтверстий) Тогда
		ТаблицаОтверстий.Загрузить(ЗначениеИзСтрокиВнутр(Параметры.ТаблицаОтверстий));
	КонецЕсли;
	
	Элементы.ГруппаОтступыПетель.Доступность = Ложь;
	Элементы.Смещение.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруОтверстий()
	
	СтруктураОтверстий = РеквизитФормыВЗначение("ТаблицаОтверстий");
	
	Возврат ЗначениеВСтрокуВнутр(СтруктураОтверстий);
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступность() 
	
	Если ЗначениеЗаполнено(ВидОтверстий) Тогда
		
		ОтверстияЦентр = ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодЕвровинт") ИЛИ ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержательАвто");
		ОтверстияЦентр78 = ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержатель") ИЛИ ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ОбратнаяПрисадка");
		МассивВидовОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
		ДоступноСмещениеОтступ = ЗначениеЗаполнено(МассивВидовОтверстий);
		
		
		МассивСторон = Новый Массив;
		МассивСторон.Добавить("Слева");
		МассивСторон.Добавить("Справа");
		МассивСторон.Добавить("Сверху");
		МассивСторон.Добавить("Снизу");
		МассивСторон.Добавить("Центр");
		
		Для Каждого Элемент Из МассивСторон Цикл
			
			МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("РасположениеОтверстия", Элемент));
			ВидОтверстийСоСтороны = Неопределено;
			Если ЗначениеЗаполнено(МассивОтверстий) Тогда
				ВидОтверстийСоСтороны = МассивОтверстий[0].ВидОтверстий;
			КонецЕсли;
			Если Элемент = "Центр"  Тогда
					Элементы["КоличествоОтверстий" + Элемент].Доступность = ОтверстияЦентр78 ИЛИ (НЕ ЗначениеЗаполнено(МассивОтверстий) И ОтверстияЦентр ИЛИ ВидОтверстийСоСтороны = ВидОтверстий);
			Иначе
				Если ДоступноСмещениеОтступ И (ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПазыПетель")) Тогда
					ПоложениеВидимости = МассивВидовОтверстий[0].РасположениеОтверстия;
					Элементы["КоличествоОтверстий" + Элемент].Доступность = (НЕ ЗначениеЗаполнено(МассивОтверстий) ИЛИ ВидОтверстийСоСтороны = ВидОтверстий) И НЕ ОтверстияЦентр78 И ВидОтверстий <> ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержательАвто") И ПоложениеВидимости = Элемент;
				Иначе
					Элементы["КоличествоОтверстий" + Элемент].Доступность = (НЕ ЗначениеЗаполнено(МассивОтверстий) ИЛИ ВидОтверстийСоСтороны = ВидОтверстий) И (НЕ ОтверстияЦентр78 И ВидОтверстий <> ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержательАвто"));	
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Элементы.ГруппаОтступыПетель.Доступность = ?(ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПазыПетель"), Истина, Ложь);
		
		ДоступностьВысотаПервойВторойЛинии = ЗначениеЗаполнено(КоличествоОтверстийЦентр) И (ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодЕвровинт") ИЛИ ОтверстияЦентр78);
		Элементы.ВысотаОтверстийВторойЛинии.Доступность = ДоступностьВысотаПервойВторойЛинии;
		Элементы.ВысотаОтверстийПервойЛинии.Доступность = ДоступностьВысотаПервойВторойЛинии;
		
		Элементы.Смещение.Доступность = ДоступноСмещениеОтступ;
		Элементы.Отступ.Доступность = ДоступноСмещениеОтступ;
		
		Если ВидОтверстий = ВидПазыПетель Тогда
			
			Элементы.Смещение.Доступность = Ложь;
			Элементы.Отступ.Доступность = Ложь;
			 
			Если КоличествоОтверстийСлева > 0 ИЛИ КоличествоОтверстийСправа > 0 Тогда
				Элементы.ОтступСлева.Заголовок = "Сверху";
				Элементы.ОтступСправа.Заголовок = "Снизу";
			ИначеЕсли КоличествоОтверстийСверху > 0 ИЛИ КоличествоОтверстийСнизу > 0 Тогда
				Элементы.ОтступСлева.Заголовок = "Слева";
				Элементы.ОтступСправа.Заголовок = "Справа";	
			КонецЕсли;
	
	 	КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВидЕвропаз = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.Европаз");
	ВидОтверстий = ВидЕвропаз;
	
	Для Каждого Строка Из ТаблицаОтверстий Цикл
		ЭтаФорма["ВидОтверстия" + Строка.РасположениеОтверстия] = Строка.ВидОтверстий;	
	КонецЦикла;
	
	ВидОтверстийПриИзменении();
	ОбновитьКоличествоВсехОтверстий();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОтверстийПриИзменении(Элемент = Неопределено)
	
	КоличествоОтверстийСверху = 0;
	КоличествоОтверстийСлева = 0;
	КоличествоОтверстийСнизу = 0;
	КоличествоОтверстийСправа = 0;
	КоличествоОтверстийЦентр = 0;
	ВысотаОтверстийПервойЛинии = 0; 
	ВысотаОтверстийВторойЛинии = 0; 
	Отступ = "0";
	Смещение = 0; 
	ОтступСлева = 0;
	ОтступСправа = 0;
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
	Если МассивОтверстий.Количество() > 0 Тогда
		Для Каждого Строка Из МассивОтверстий Цикл	
			Если Строка.РасположениеОтверстия = "Центр7" ИЛИ Строка.РасположениеОтверстия = "Центр8" Тогда
				РасположениеОтверстия = "Центр";
			Иначе
				РасположениеОтверстия = Строка.РасположениеОтверстия;
			КонецЕсли;	
			ЭтаФорма["КоличествоОтверстий" + РасположениеОтверстия] = Строка.Количество;
		КонецЦикла;	
		
		Смещение = МассивОтверстий[0].Смещение;
		Отступ = МассивОтверстий[0].Отступ;
		
		ОтступСлева = МассивОтверстий[0].ОтступСлева;
		ОтступСправа = МассивОтверстий[0].ОтступСправа;
		
		ВысотаОтверстийПервойЛинии = МассивОтверстий[0].ВысотаПервойЛинии;
		ВысотаОтверстийВторойЛинии = МассивОтверстий[0].ВысотаВторойЛинии;
	
	КонецЕсли;
		
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьПереключатели()
	
	ВидЕвропаз = Неопределено;
	ВидПазыПетель = Неопределено;
	ВидОбратнаяПрисадка = Неопределено;
	ВидТорцеваяПрисадка = Неопределено;
	ВидПрисадкаПодСтяжки = Неопределено;
	ВидПрисадкаПодЕвровинт = Неопределено;
	ВидПрисадкаПодПолкодержатель = Неопределено;
	ВидПрисадкаПодПолкодержательАвто = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийСверхуПриИзменении(Элемент)
	КоличествоОтверстийПриИзменении("Сверху", КоличествоОтверстийСверху);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийЦентрПриИзменении(Элемент)
	Если ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержатель") Тогда
		РасположениеОтверстия = "Центр7";
	ИначеЕсли ВидОтверстий = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ОбратнаяПрисадка") Тогда
		РасположениеОтверстия = "Центр8";
	Иначе
		РасположениеОтверстия = "Центр";
	КонецЕсли;
	КоличествоОтверстийПриИзменении(РасположениеОтверстия, КоличествоОтверстийЦентр);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийСлеваПриИзменении(Элемент)
	КоличествоОтверстийПриИзменении("Слева", КоличествоОтверстийСлева);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийСправаПриИзменении(Элемент)
	КоличествоОтверстийПриИзменении("Справа", КоличествоОтверстийСправа);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийСнизуПриИзменении(Элемент)
	КоличествоОтверстийПриИзменении("Снизу", КоличествоОтверстийСнизу);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОтверстийПриИзменении(РасположениеОтверстия, Количество)
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("РасположениеОтверстия", РасположениеОтверстия));
	
	Если МассивОтверстий.Количество() > 0 Тогда
		Если МассивОтверстий[0].Количество <> Количество И Количество > 0 Тогда
			МассивОтверстий[0].Количество = Количество;	
			ЭтаФорма["ВидОтверстия" + РасположениеОтверстия] = ВидОтверстий;
		ИначеЕсли МассивОтверстий[0].Количество <> Количество И Количество = 0 Тогда
			ТаблицаОтверстий.Удалить(МассивОтверстий[0]);	
			ЭтаФорма["ВидОтверстия" + РасположениеОтверстия] = Неопределено;
		КонецЕсли;
	ИначеЕсли Количество <> 0 Тогда
		
		ЭтаФорма["ВидОтверстия" + РасположениеОтверстия] = ВидОтверстий;
		
		НоваяСтрока = ТаблицаОтверстий.Добавить();
		НоваяСтрока.ВидОтверстий = ВидОтверстий;
		НоваяСтрока.Количество = Количество;
		НоваяСтрока.РасположениеОтверстия = РасположениеОтверстия;
		НоваяСтрока.ОтступСлева = ОтступСлева;
		НоваяСтрока.ОтступСправа = ОтступСправа;
		
		Смещение = 100;
		НоваяСтрока.Смещение = Смещение;
		
	КонецЕсли;
	
	Если ВидОтверстий = ВидПазыПетель И Количество > 0 Тогда
		
		Если РасположениеОтверстия = "Слева" ИЛИ РасположениеОтверстия = "Справа" Тогда
			Элементы.ОтступСлева.Заголовок = "Сверху";
			Элементы.ОтступСправа.Заголовок = "Снизу";
		Иначе
			Элементы.ОтступСлева.Заголовок = "Слева";
			Элементы.ОтступСправа.Заголовок = "Справа";	
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьКоличествоОтверстий();
	УстановитьДоступность();
	ОповеститьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура СмещениеПриИзменении(Элемент)
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
	Для Каждого Строка Из МассивОтверстий Цикл
		Строка.Смещение = Смещение;
	КонецЦикла;
	
	ОповеститьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтступПриИзменении(Элемент)
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
	Для Каждого Строка Из МассивОтверстий Цикл
		Строка.Отступ = Отступ;
	КонецЦикла;
	
	ОповеститьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ВысотаОтверстийПервойВторойЛинииПриИзменении(Элемент)
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
	Для Каждого Строка Из МассивОтверстий Цикл
		Строка.ВысотаПервойЛинии = ВысотаОтверстийПервойЛинии;
		Строка.ВысотаВторойЛинии = ВысотаОтверстийВторойЛинии;
	КонецЦикла;
	
	ОповеститьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЕвропазПриИзменении(Элемент)
	
	СброситьПереключатели();
	
	ВидЕвропаз = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.Европаз");
	ВидОтверстий = ВидЕвропаз;
	
	ВидОтверстийПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПазыПетельПриИзменении(Элемент)
	
	СброситьПереключатели();
	
	ВидПазыПетель = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПазыПетель");
	ВидОтверстий = ВидПазыПетель;
	
	ВидОтверстийПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОбратнаяПрисадкаПриИзменении(Элемент)
	СброситьПереключатели();
	
	ВидОбратнаяПрисадка = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ОбратнаяПрисадка");
	ВидОтверстий = ВидОбратнаяПрисадка;
	
	ВидОтверстийПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВидТорцеваяПрисадкаПриИзменении(Элемент)
	СброситьПереключатели();
	
	ВидТорцеваяПрисадка = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ТорцеваяПрисадка");
	ВидОтверстий = ВидТорцеваяПрисадка;
	
	ВидОтверстийПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВидПрисадкаПодСтяжкиПриИзменении(Элемент)
	СброситьПереключатели();
	
	ВидПрисадкаПодСтяжки = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодСтяжки");
	ВидОтверстий = ВидПрисадкаПодСтяжки;
	
	ВидОтверстийПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВидПрисадкаПодЕвровинтПриИзменении(Элемент)
	СброситьПереключатели();
	
	ВидПрисадкаПодЕвровинт = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодЕвровинт");
	ВидОтверстий = ВидПрисадкаПодЕвровинт;
	
	ВидОтверстийПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВидПрисадкаПодПолкодержательПриИзменении(Элемент)
	СброситьПереключатели();
	
	ВидПрисадкаПодПолкодержатель = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержатель");
	ВидОтверстий = ВидПрисадкаПодПолкодержатель;
	
	ВидОтверстийПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВидПрисадкаПодПолкодержательАвтоПриИзменении(Элемент)
	СброситьПереключатели();
	
	ВидПрисадкаПодПолкодержательАвто = ПредопределенноеЗначение("Перечисление.ВидыОтверстий.ПрисадкаПодПолкодержательАвто");
	ВидОтверстий = ВидПрисадкаПодПолкодержательАвто;
	
	ВидОтверстийПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОтступСлеваПриИзменении(Элемент)
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
	Для Каждого Строка Из МассивОтверстий Цикл
		Строка.ОтступСлева = ОтступСлева;
		Строка.Смещение = ОтступСлева;
		Смещение = ОтступСлева; 
	КонецЦикла;
	
	ОповеститьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтступСправаПриИзменении(Элемент)
	
	МассивОтверстий = ТаблицаОтверстий.НайтиСтроки(Новый Структура("ВидОтверстий", ВидОтверстий));
	Для Каждого Строка Из МассивОтверстий Цикл
		Строка.ОтступСправа = ОтступСправа;
	КонецЦикла;
	
	ОповеститьФорму();
	
КонецПроцедуры



