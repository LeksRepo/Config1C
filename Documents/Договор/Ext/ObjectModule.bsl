
#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

Функция ПроверитьШкафКупе()
	
	НовыйСтатус = Перечисления.СтатусыСпецификации.Рассчитывается;
	
	Если Спецификация.Изделие = Справочники.Изделия.ШкафКупеПоКаталогу Тогда
		
		НовыйСтатус = Перечисления.СтатусыСпецификации.Размещен;
		
		Для Каждого Стр ИЗ Спецификация.СписокИзделийПоКаталогу Цикл
			
			Если НЕ Стр.Изделие.ПроверенИнженером И НЕ Стр.Изделие.Предопределенный Тогда
				
				НовыйСтатус = Перечисления.СтатусыСпецификации.Рассчитывается;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат НовыйСтатус;
	
КонецФункции

Функция УстановитьАктивностьЗамера(НовыйСтатус)
	
	ЗамерСсылка = Спецификация.ДокументОснование;
	Если ТипЗнч(ЗамерСсылка) = Тип("ДокументСсылка.Замер") Тогда
		
		НаборЗаписей = РегистрыСведений.АктивностьЗамеров.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Замер.Установить(ЗамерСсылка);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() <> 1 Тогда
			Запись = НаборЗаписей.Добавить()
		Иначе
			Запись = НаборЗаписей[0];
		КонецЕсли;
		
		Запись.Замер = ЗамерСсылка;
		Запись.Статус = Ложь;
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецФункции

Функция НачислитьЗарплатуДизайнеру()
	
	Движение = Движения.Управленческий.Добавить();
	Движение.Период = Дата;
	Движение.Подразделение = Подразделение;
	Движение.Сумма = ЗарплатаДизайнера;
	Движение.Содержание = "Зарплата дизайнера " + Спецификация;
	
	Движение.СчетДт = ПланыСчетов.Управленческий.Расходы;
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] = Справочники.СтатьиДоходовРасходов.РасходыЗарплатаДизайнерам;
	Движение.СчетКт = ПланыСчетов.Управленческий.ВзаиморасчетыССотрудниками;
	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.ФизическиеЛица] = Автор.ФизическоеЛицо;
	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.ВидыНачисленийУдержаний] = Справочники.ВидыНачисленийУдержаний.ДизайнеруЗаДоговор;
	
КонецФункции // НачислитьЗарплатуДизайнеру()

#КонецОбласти

#Область ДВИЖЕНИЯ

Функция ДвиженияПродажиФакт()
	
	Проводка = Движения.ПродажиФакт.Добавить();
	
	Проводка.Период = Дата;
	Проводка.Подразделение = Подразделение;
	Проводка.ВидПродажи = Перечисления.ВидыПродаж.Договоры;
	Проводка.Сотрудник = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Автор, "ФизическоеЛицо");
	Проводка.Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Спецификация, "Контрагент");
	Проводка.Офис = Офис;
	Проводка.Сумма = СуммаДокумента;
	Проводка.Количество = 1;
	
КонецФункции

#КонецОбласти

#Область ОБРАБОТЧИКИ_СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Перем Ошибки;
	
	Если НЕ Спецификация.Проведен Тогда
		
		ОбъектСпецификация = Спецификация.ПолучитьОбъект();
		НачатьТранзакцию();
		
		НовыйСтатус = ПроверитьШкафКупе();
		
		Попытка
			
			Документы.Спецификация.УстановитьСтатусСпецификации(Спецификация, НовыйСтатус);
			ОбъектСпецификация.Записать(РежимЗаписиДокумента.Проведение);
			
		Исключение
		КонецПопытки;
		
		ЗафиксироватьТранзакцию();
		
		Если НЕ ОбъектСпецификация.Проведен Тогда
			
			ТекстСообщения = "Ошибка размещения %1. Заключение договора невозможно";
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Спецификация);
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Спецификация, ТекстСообщения);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ДвиженияПродажиФакт();
	
	НачислитьЗарплатуДизайнеру();
	ЛексСервер.СформироватьПоказателиСотрудников(Движения, Ссылка);
	УстановитьАктивностьЗамера(Ложь);
	
	Движения.Управленческий.Записывать = Истина;
	Движения.ПродажиФакт.Записывать = Истина;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// { Васильев Александр Леонидович [29.06.2014]
	// Часть проверок оставляем здесь,
	// а не переносим в ОбработкуПроверкиЗаполнения,
	// чтобы даже не сохранялись в базе совсем клинические случаи,
	// вроде нескольких договоров к одной спецификации.
	// } Васильев Александр Леонидович [29.06.2014]
	
	ДатыЗапретаИзменения.ПроверитьДатуЗапретаИзмененияПередЗаписьюДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	ДоговорСсылка = Документы.Спецификация.ПолучитьДоговор(Спецификация);
	
	Если ЗначениеЗаполнено(ДоговорСсылка) И Ссылка <> ДоговорСсылка Тогда
		Отказ= Истина;
		ТекстСообщения = "К " + Спецификация + " уже введен " + ДоговорСсылка;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДоговорСсылка);
	КонецЕсли;
	
	Если Ссылка.Пустая() И НЕ Документы.Договор.РазрешеноВвестиДоговор(Спецификация) Тогда
		Отказ = Истина;
		ТекстСообщения = "Для изделия вида " + Спецификация.Изделие + " запрещено вводить договор.";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДоговорСсылка);
	КонецЕсли;
	
	// Установка реквизитов
	Если НЕ Отказ Тогда
		
		Если Спецификация.ПакетУслуг = Перечисления.ПакетыУслуг.ДоставкаДоКлиентаИМонтаж Тогда
			
			ДатаУстановитьНеПозднее = Спецификация.ДатаМонтажа + 30 * 24 * 3600;
			
		КонецЕсли;
		
		Если НЕ Спецификация.Контрагент.ЮридическоеЛицо Тогда
			
			Организация = Подразделение.ОрганизацияДляФизЛиц;
			
		Иначе
			
			Организация = Подразделение.ОрганизацияДляЮрЛиц;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения)
		И ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Спецификация") Тогда
		
		ПакетУслуг = ДанныеЗаполнения.ПакетУслуг;
		АдресМонтажа = ДанныеЗаполнения.АдресМонтажа;
		
		Если (ПакетУслуг = Перечисления.ПакетыУслуг.ДоставкаДоКлиентаИМонтаж ИЛИ ПакетУслуг = Перечисления.ПакетыУслуг.ДоставкаДоКлиента) И АдресМонтажа = "Введите адрес" Тогда
			
			Отказ = Истина;
			ТекстСообщения = "Укажите адрес";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДанныеЗаполнения, , , Отказ);
			
		КонецЕсли;
		
		Спецификация = ДанныеЗаполнения;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		ЗарплатаДизайнера = ДанныеЗаполнения.ЗарплатаДизайнера;
		СуммаДокументаБезСкидки = ДанныеЗаполнения.СуммаДокумента;
		Офис = ДанныеЗаполнения.Офис;
		Подразделение = ДанныеЗаполнения.Подразделение;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	УстановитьАктивностьЗамера(Истина);
	
	// Изменение статуса спецификации
	Если Документы.Спецификация.ПолучитьСтатусСпецификации(Спецификация) = Перечисления.СтатусыСпецификации.Рассчитывается Тогда
		Документы.Спецификация.УстановитьСтатусСпецификации(Спецификация, Перечисления.СтатусыСпецификации.Сохранен);
		СпецификацияОбъект = Спецификация.ПолучитьОбъект();
		СпецификацияОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Перем Ошибки;
	
	Для каждого Строка Из Спецификация.СписокМатериаловПодЗаказ Цикл
		
		Если Строка.Цена = 0 ИЛИ Строка.Поставщик.Пустая() Тогда
			ТекстСообщения = "%1 установите цену и поставщика для материала 'Под заказ'";
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Спецификация);
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстСообщения);
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ Спецификация.Контрагент.ЮридическоеЛицо Тогда
		
		СуммаАванса = Документы.Договор.ПолучитьСуммуАванса(Ссылка, Дата);
		
		Если ВидОплаты.ПолнаяПредоплата Тогда
			
			Если СуммаАванса < СуммаДокумента Тогда
				
				ТекстОшибки = "Примите полную предоплату к договору (%1 руб.)";
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, СуммаДокумента);
				
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.СуммаДокумента", ТекстОшибки);
				
			КонецЕсли;
			
		Иначе
			
			Если ЗначениеЗаполнено(ВидОплаты) Тогда
				ПроцентПервогоВзноса = ВидОплаты.ПроцентПервогоВзноса;
			Иначе
				ПроцентПервогоВзноса = ЛексСервер.ПолучитьНастройкуПодразделения(Подразделение, Перечисления.ВидыНастроекПодразделений.ПроцентПервогоВзноса, Дата);
			КонецЕсли;
			
			Если ПроцентПервогоВзноса = Неопределено Тогда
				ПроцентПервогоВзноса = 0;
			КонецЕсли;
			
			СуммаПервогоВзноса = СуммаДокумента * ПроцентПервогоВзноса / 100 ;
			
			Если СуммаАванса < СуммаПервогоВзноса Тогда
				
				ТекстОшибки = "Примите предоплату. Более %1%% от суммы договора (%2 руб.)";
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ПроцентПервогоВзноса, СуммаПервогоВзноса);
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.СуммаДокумента", ТекстОшибки);
				
			КонецЕсли;
			
			Если НЕ (ЗначениеЗаполнено(Спецификация.Контрагент.ПаспортНомер)
				И ЗначениеЗаполнено(Спецификация.Контрагент.ПаспортКемВыдан)
				И ЗначениеЗаполнено(Спецификация.Контрагент.ПаспортДатаВыдачи)) Тогда
				
				ТекстОшибки = "Заполните паспортные данные у контрагента: " + Спецификация.Контрагент;
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.Спецификация", ТекстОшибки);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

#КонецОбласти

