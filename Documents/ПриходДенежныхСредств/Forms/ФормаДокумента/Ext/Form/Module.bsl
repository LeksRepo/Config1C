
&НаСервере
Функция ОбновитьСчетаИСубконто()
	
	СтруктураСчетов = БухгалтерскийУчетСервер.ПолучитьСчетаПоВидуОперации(Объект.ВидОперации);
	Объект.СчетДт = СтруктураСчетов.СчетДт;
	Объект.СчетКт = СтруктураСчетов.СчетКт;
	
	Если Объект.ВидОперации = Перечисления.ВидыОпераций.ВозвратОтПодотчетногоЛица Тогда
		
		Объект.Субконто1Дт = Справочники.СтатьиДвиженияДенежныхСредств.ПеремещениеДенежныхСредств;
		Объект.Субконто1Кт = Справочники.СтатьиДвиженияДенежныхСредств.ПеремещениеДенежныхСредств;
		
	КонецЕсли;
	
	ДоступностьЭлементов();
	
КонецФункции

&НаСервере
Функция ДоступностьЭлементов()
	
	ЛексВызовСервера.ОбновитьДоступностьЭлементов(Элементы, Объект.ВидОперации);
	
	ЛексВызовСервера.ЗаполнитьТипыСубконто(Элементы, "Дт", Объект);
	ЛексВызовСервера.ЗаполнитьТипыСубконто(Элементы, "Кт", Объект);
	
	Элементы.ГруппаБонусСуммы.Видимость = (Объект.СчетДт = ПланыСчетов.Управленческий.ОперационнаяКасса);
	ДоступностьСуммБонуса();
	
КонецФункции

&НаСервере
Функция ДоступностьСуммБонуса()
	
	Элементы.ГруппаИтоговаяСуммаБонус.Видимость = Объект.НачислятьБонусЗаОплатуНаличными;
	
КонецФункции

&НаСервере
Функция ПересчитатьИтоговуюСумму()
	
	ИтоговаяСумма = Объект.СуммаДокумента + Объект.БонусЗаОплатуНаличными;
	
КонецФункции

#Область СОБЫТИЯ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Свойство("Остаток") Тогда
		Объект.СуммаДокумента = Параметры.Остаток;
	КонецЕсли;
	
	ДоступностьЭлементов();
	ПересчитатьИтоговуюСумму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СОБЫТИЯ_ЭЛЕМЕНТОВ

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	ВидОперацииПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ВидОперацииПриИзмененииНаСервере()
	
	ОбновитьСчетаИСубконто();
	
КонецФункции

&НаКлиенте
Процедура СчетДтПриИзменении(Элемент)
	
	СчетДтПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Функция СчетДтПриИзмененииНаСервере()
	
	ЛексВызовСервера.ЗаполнитьТипыСубконто(Элементы, "Дт", Объект);
	
КонецФункции

&НаКлиенте
Процедура СчетКтПриИзменении(Элемент)
	
	СчетКтПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Функция СчетКтПриИзмененииНаСервере()
	
	ЛексВызовСервера.ЗаполнитьТипыСубконто(Элементы, "Кт", Объект);
	
КонецФункции

&НаКлиенте
Процедура Субконто2ДтНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТипСубконто = ТипЗнч(Объект.Субконто2Дт);
	
	Если ТипСубконто = Тип("СправочникСсылка.Счета")
		ИЛИ ТипСубконто = Тип("СправочникСсылка.Кассы") Тогда
		
		СтандартнаяОбработка = Ложь;
		ЛексКлиент.ВыборСчетаКассы("Субконто2Дт", Объект);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = ЛексКлиент.ПредупредитьОПовторномПроведении(Объект)
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДокументаПриИзменении(Элемент)
	
	ПересчитатьБонусЗаОплатуНаличными();
	ПересчитатьИтоговуюСумму();
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ПересчитатьБонусЗаОплатуНаличными()
	
	Если Объект.НачислятьБонусЗаОплатуНаличными
		И Объект.СчетДт = ПредопределенноеЗначение("ПланСчетов.Управленческий.ОперационнаяКасса") Тогда
		Объект.БонусЗаОплатуНаличными = ЛексСервер.РассчитатьБонусЗаОплатуНаличными(Объект.Подразделение, Объект.Дата, Объект.СуммаДокумента);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ИтоговаяСуммаПриИзменении(Элемент)
	
	Если Объект.СчетДт = ПредопределенноеЗначение("ПланСчетов.Управленческий.ОперационнаяКасса") Тогда
		
		ПроцентБонуса = ЛексСервер.ПолучитьПроцентБонусаЗаОплатуНаличными(Объект.Подразделение, Объект.Дата);
		
		Если ЗначениеЗаполнено(ПроцентБонуса) Тогда
			Объект.СуммаДокумента = ЛексКлиентСервер.ПолучитьСуммуБезБонуса(ИтоговаяСумма, ПроцентБонуса);
			ПересчитатьБонусЗаОплатуНаличными();
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачислятьБонусЗаОплатуНаличнымиПриИзменении(Элемент)
	
	Если Объект.НачислятьБонусЗаОплатуНаличными Тогда
		
		ПересчитатьБонусЗаОплатуНаличными();
		
	Иначе
		
		Объект.БонусЗаОплатуНаличными = 0;
		ИтоговаяСумма = 0;
		
	КонецЕсли;
	
	ПересчитатьИтоговуюСумму();
	ДоступностьСуммБонуса();
	
КонецПроцедуры
