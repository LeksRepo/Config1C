
Процедура ОбработкаПроведения(Отказ, Режим)
	
	БухгалтерскийУчетСервер.ПроведениеДенежныхСредств(Ссылка, Движения);
	
	Если СчетДт = ПланыСчетов.Управленческий.ВзаиморасчетыСПокупателями Тогда
		
		ТипСубконто2 = ТипЗнч(Субконто2Дт);
		
		Если ТипСубконто2 = Тип("ДокументСсылка.Договор")
			ИЛИ ТипСубконто2 = Тип("ДокументСсылка.ДополнительноеСоглашение")
			ИЛИ ТипСубконто2 = Тип("ДокументСсылка.Спецификация") Тогда
			ДвиженияПоказатели();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДвиженияПоказатели()
	
	ТипСубконто2 = ТипЗнч(Субконто2Дт);
	
	Если ТипСубконто2 = Тип("ДокументСсылка.Договор") Тогда
		ФизЛицо = Субконто2Дт.Автор.ФизическоеЛицо;
		ДобавитьПоказательСотруднику(ФизЛицо, Перечисления.ВидыПоказателейСотрудников.Выручка, Сумма, Субконто2Дт);
	ИначеЕсли ТипСубконто2 = Тип("ДокументСсылка.ДополнительноеСоглашение") Тогда
		ФизЛицо = Субконто2Дт.Договор.Автор.ФизическоеЛицо;
		ДобавитьПоказательСотруднику(ФизЛицо, Перечисления.ВидыПоказателейСотрудников.Выручка, Сумма, Субконто2Дт);
	ИначеЕсли ТипСубконто2 = Тип("ДокументСсылка.Спецификация") Тогда
		ФизЛицо = Субконто2Дт.Автор.ФизическоеЛицо;
		ДобавитьПоказательСотруднику(ФизЛицо, Перечисления.ВидыПоказателейСотрудников.Выручка, Сумма, Субконто2Дт);
		ДобавитьПоказательСотруднику(ФизЛицо, Перечисления.ВидыПоказателейСотрудников.ВыручкаЗаДетали, Сумма, Субконто2Дт);
	ИначеЕсли ТипСубконто2 = Тип("ДокументСсылка.РеализацияМатериалов") Тогда
		ФизЛицо = Субконто2Дт.Автор.ФизическоеЛицо;
		ДобавитьПоказательСотруднику(ФизЛицо, Перечисления.ВидыПоказателейСотрудников.ВыручкаЗаМатериалы, Сумма, Субконто2Дт);
	КонецЕсли;
	
КонецПроцедуры

Функция ДобавитьПоказательСотруднику(ФизЛицо, ВидПоказателя, Значение, Основание)
	
	Проводка = Движения.Управленческий.Добавить();
	Проводка.Период = Дата;
	Проводка.Подразделение = Подразделение;
	Проводка.Содержание = "К документу " + Основание;
	Проводка.СчетКт = ПланыСчетов.Управленческий.ПоказателиСотрудника;
	Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.ВидыПоказателейСотрудников] = ВидПоказателя;
	Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.ФизическиеЛица] = ФизЛицо;
	Проводка.Сумма = Значение;
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДатыЗапретаИзменения.ПроверитьДатуЗапретаИзмененияПередЗаписьюДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	ЛексСервер.УстановитьОрганизацию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	КоличествоДт = СчетДт.ВидыСубконто.Количество();
	КоличествоКт = СчетКт.ВидыСубконто.Количество();
	Для Счетчик = 1 По КоличествоДт Цикл
		Если НЕ (СчетДт.ВидыСубконто[Счетчик - 1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ДокументВзаиморасчетов
			ИЛИ СчетДт.ВидыСубконто[Счетчик - 1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ВидыНачисленийУдержаний) Тогда
			ПроверяемыеРеквизиты.Добавить("Субконто" + Счетчик+"Дт");
		КонецЕсли;
		
	КонецЦикла;
	Для Счетчик = 1 По КоличествоКт Цикл
		Если НЕ (СчетКт.ВидыСубконто[Счетчик - 1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ДокументВзаиморасчетов
			ИЛИ СчетКт.ВидыСубконто[Счетчик - 1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ВидыНачисленийУдержаний) Тогда
			ПроверяемыеРеквизиты.Добавить("Субконто" + Счетчик + "Кт");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		
		Подразделение = ДанныеЗаполнения.Подразделение;
		Комментарий = ДанныеЗаполнения.Комментарий;
		ВидОперации = Перечисления.ВидыОпераций.ВыдачаПодотчетномуЛицу;
		СчетДт = ПланыСчетов.Управленческий.Подотчет;
		СчетКт = ПланыСчетов.Управленческий.Касса;
		Субконто1Дт = Справочники.СтатьиДвиженияДенежныхСредств.ПеремещениеДенежныхСредств;
		Субконто1Кт = Справочники.СтатьиДвиженияДенежныхСредств.ПеремещениеДенежныхСредств;
		Субконто2Дт = ДанныеЗаполнения.ФизЛицо;
		
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеМатериаловУслуг") Тогда
		
		Остаток = ПолучитьОстатокПоСчету(ДанныеЗаполнения);
		
		Подразделение = ДанныеЗаполнения.Подразделение;
		Комментарий = ДанныеЗаполнения.Комментарий;
		ВидОперации = Перечисления.ВидыОпераций.ОплатаПоставщику;
		СчетДт = ПланыСчетов.Управленческий.ВзаиморасчетыСПоставщиками;
		СчетКт = ПланыСчетов.Управленческий.РасчетныйСчет;
		Субконто1Дт = ДанныеЗаполнения.Контрагент;
		Сумма = Остаток;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОстатокПоСчету(Документ)
	
	Остаток = 0;
	Счет = ПланыСчетов.Управленческий.ВзаиморасчетыСПоставщиками;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("Подразделение", Документ.Подразделение);
	Запрос.УстановитьПараметр("Контрагент", Документ.Контрагент);
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправленческийОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Остатки(
	|			&Период,
	|			Счет = &Счет,
	|			,
	|			Подразделение = &Подразделение
	|				И Субконто1 = &Контрагент) КАК УправленческийОстатки";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Если Выборка.СуммаОстаток < 0 Тогда
			Остаток = -Выборка.СуммаОстаток;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Остаток;
	
КонецФункции
