
Процедура ПечатьПеремещениеМатериалов(ТабДок, Ссылка) Экспорт

	ФормСтрока = "Л = ru_RU; ДП = Истина";
	ПарПредмета="рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 0";
	
	Макет = Документы.ПеремещениеМатериалов.ПолучитьМакет("ПечатьПеремещениеМатериалов");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеремещениеМатериалов.Ссылка,
	|	ПеремещениеМатериалов.Автор,
	|	ПеремещениеМатериалов.Дата,
	|	ПеремещениеМатериалов.Номер,
	|	ПеремещениеМатериалов.Подразделение,
	|	ПеремещениеМатериалов.ПодразделениеПолучатель,
	|	ПеремещениеМатериалов.Склад,
	|	ПеремещениеМатериалов.СкладПолучатель,
	|	ПеремещениеМатериалов.СуммаДокумента,
	|	ПеремещениеМатериалов.МатериалыОтгружено.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		ЕдиницаХранения,
	|		Коэффициент,
	|		Цена,
	|		Сумма
	|	),
	|	ПеремещениеМатериалов.Склад.МОЛ,
	|	ПеремещениеМатериалов.СкладПолучатель.МОЛ,
	|	ВЫБОР
	|		КОГДА ПеремещениеМатериалов.Подразделение = ПеремещениеМатериалов.ПодразделениеПолучатель
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РазныеПодразделения
	|ИЗ
	|	Документ.ПеремещениеМатериалов КАК ПеремещениеМатериалов
	|ГДЕ
	|	ПеремещениеМатериалов.Проведен
	|	И ПеремещениеМатериалов.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьМатериалыОтгруженоШапка = Макет.ПолучитьОбласть("МатериалыОтгруженоШапка");
	ОбластьМатериалыОтгружено = Макет.ПолучитьОбласть("МатериалыОтгружено");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		СуммаМатериалов = 0;
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьМатериалыОтгруженоШапка);
		
		Если Выборка.РазныеПодразделения Тогда
			ВыборкаМатериалыОтгружено = Выборка.МатериалыОтгружено.Выбрать();
			Пока ВыборкаМатериалыОтгружено.Следующий() Цикл
				ОбластьМатериалыОтгружено.Параметры.Заполнить(ВыборкаМатериалыОтгружено);
				ОбластьМатериалыОтгружено.Параметры.Сумма = ВыборкаМатериалыОтгружено.Сумма;
				ТабДок.Вывести(ОбластьМатериалыОтгружено, ВыборкаМатериалыОтгружено.Уровень());
				СуммаМатериалов = ВыборкаМатериалыОтгружено.Сумма + СуммаМатериалов;
			КонецЦикла;
		Иначе 
			ТаблицаМатериалов = СформироватьТаблицуМатерилов(Выборка.Ссылка);
			Для каждого Стр Из ТаблицаМатериалов Цикл
				ОбластьМатериалыОтгружено.Параметры.Заполнить(Стр);
				ТабДок.Вывести(ОбластьМатериалыОтгружено);
			КонецЦикла;
			СуммаМатериалов = ТаблицаМатериалов.Итог("Сумма");
		КонецЕсли;
		
		Подвал.Параметры.СуммаМатериалов = СуммаМатериалов;
		Подвал.Параметры.СуммаМатериаловПрописью = ЧислоПрописью(СуммаМатериалов, ФормСтрока, ПарПредмета);
		
		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьТаблицуМатерилов(ДокСсылка)

	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номенклатура");
	ТЗ.Колонки.Добавить("Цена");

	ТЧДокумент = ДокСсылка.МатериалыОтгружено.Выгрузить();

	Проводки = РегистрыНакопления.МатериалыНаСкладах.ВыбратьПоРегистратору(ДокСсылка);
	Пока Проводки.Следующий() Цикл
		Если Проводки.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
			НоваяСтрока = ТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Проводки);
			НоваяСтрока.Цена = Проводки.Стоимость / (Проводки.Количество * Проводки.ЕдиницаХранения.Коэффициент);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТЧСтрока Из ТЧДокумент Цикл
		ЦенаСписания = ТЗ.Найти(ТЧСтрока.Номенклатура).Цена;
		ТЧСтрока.Цена = ЦенаСписания;
		ТЧСтрока.Сумма = ЦенаСписания * ТЧСтрока.Количество * ТЧСтрока.Коэффициент;
	КонецЦикла;
	
	Возврат ТЧДокумент;

КонецФункции // СформироватьТаблицуМатерилов()