
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ДатыЗапретаИзменения.ПроверитьДатуЗапретаИзмененияПередЗаписьюДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	СформироватьДвиженияУправленческий();
КонецПроцедуры

Функция СформироватьДвиженияУправленческий()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеСредстваСрезПоследних.ОсновноеСредство,
	|	ОсновныеСредстваСрезПоследних.СрокАмортизации,
	|	ОсновныеСредстваСрезПоследних.Стоимость,
	|	УправленческийОстатки.СуммаОстаток
	|ИЗ
	|	РегистрСведений.ОсновныеСредства.СрезПоследних КАК ОсновныеСредстваСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки КАК УправленческийОстатки
	|		ПО ОсновныеСредстваСрезПоследних.ОсновноеСредство = УправленческийОстатки.Субконто1
	|ГДЕ
	|	ОсновныеСредстваСрезПоследних.НачислятьАмортизацию";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.СуммаОстаток > 0 Тогда
			
			Проводка = Движения.Управленческий.Добавить();
			Проводка.Период = Дата;
			Проводка.Подразделение = Подразделение;
			Проводка.Сумма = Окр(МИН(Выборка.Стоимость / Выборка.СрокАмортизации, Выборка.СуммаОстаток), 2);
			Проводка.СчетДт = ПланыСчетов.Управленческий.Расходы;
			Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] = Справочники.СтатьиДоходовРасходов.АмортизацияОС; 
			Проводка.СчетКт = ПланыСчетов.Управленческий.АмортизацияОС;		
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.ОсновныеСредства] = Выборка.ОсновноеСредство;
			
		КонецЕсли;
		
		
	КонецЦикла;
	Движения.Управленческий.Записывать = Истина;
КонецФункции // СформироватьДвиженияУправленческий()


//Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
//	
//	Дата = КонецМесяца(Дата);
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст =
//	"ВЫБРАТЬ
//	|	НачислениеАмортизации.Ссылка
//	|ИЗ
//	|	Документ.НачислениеАмортизации КАК НачислениеАмортизации
//	|ГДЕ
//	|	НачислениеАмортизации.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца";
//	
//	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
//	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата));
//	
//	Результат = Запрос.Выполнить();
//	
//	Если НЕ Результат.Пустой() Тогда
//		Выборка = Результат.Выбрать();
//		Пока Выборка.Следующий() Цикл
//			Если Выборка.Ссылка <> Ссылка Тогда
//				С = Новый СообщениеПользователю;
//				С.Текст = "За " 
//				+ Формат(Дата, "ДФ=ММММ")
//				+ " уже есть документ "
//				+ Выборка.Ссылка;
//				С.Сообщить();
//				Отказ = Истина;
//			КонецЕсли;
//		КонецЦикла;
//	КонецЕсли;
//	
//КонецПроцедуры

//Процедура ОбработкаПроведения(Отказ, РежимПроведения)
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст =
//	"ВЫБРАТЬ
//	|	ОсновныеСредстваОстатки.Подразделение КАК Подразделение,
//	|	ОсновныеСредстваОстатки.СуммаОстаток КАК СуммаОстаток,
//	|	ОсновныеСредстваОстатки.ОсновноеСредство,
//	|	ЕСТЬNULL(СостояниеОССрезПоследних.СрокАмортизации, 0) КАК СрокАмортизации,
//	|	ЕСТЬNULL(СостояниеОССрезПоследних.ПервоначальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость
//	|ИЗ
//	|	РегистрНакопления.ОсновныеСредства.Остатки(&МоментВремени, ) КАК ОсновныеСредстваОстатки
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПоследних(
//	|				&МоментВремени,
//	|				ПринятоКУчету
//	|					И НачислятьАмортизацию) КАК СостояниеОССрезПоследних
//	|		ПО (СостояниеОССрезПоследних.ОсновноеСредство = ОсновныеСредстваОстатки.ОсновноеСредство)
//	|ГДЕ
//	|	ЕСТЬNULL(СостояниеОССрезПоследних.ПервоначальнаяСтоимость, 0) <> 0
//	|ИТОГИ ПО
//	|	Подразделение";
//	
//	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
//	
//	ВыборкаПодразделения = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
//	
//	Пока ВыборкаПодразделения.Следующий() Цикл
//		
//		АмортизацияПоПодразделению = 0;		
//		Выборка = ВыборкаПодразделения.Выбрать();
//		
//		Пока Выборка.Следующий() Цикл
//			
//			Если Выборка.СуммаОстаток > 0 Тогда
//				НачислитьАмортизацию = Окр(МИН(Выборка.ПервоначальнаяСтоимость / Выборка.СрокАмортизации, Выборка.СуммаОстаток), 2);
//				Проводки = Движения.ОсновныеСредства.ДобавитьРасход();
//				Проводки.Период = Дата;
//				Проводки.ОсновноеСредство = Выборка.ОсновноеСредство;
//				Проводки.Подразделение = Выборка.Подразделение;
//				Проводки.Сумма = НачислитьАмортизацию;
//				
//				АмортизацияПоПодразделению = НачислитьАмортизацию + АмортизацияПоПодразделению;
//				
//			КонецЕсли;
//			
//		КонецЦикла;
//		
//		Проводки = Движения.ОборотыПоСтатьям.Добавить();
//		Проводки.Период = Дата;
//		Проводки.Подразделение = ВыборкаПодразделения.Подразделение;
//		Проводки.Факт = АмортизацияПоПодразделению;
//		Проводки.Статья = Справочники.Статьи.ОсновныеСредства;
//		
//	КонецЦикла;
//	
//	Движения.ОсновныеСредства.Записывать = Истина;
//	Движения.ОборотыПоСтатьям.Записывать = Истина;
//	
//КонецПроцедуры

//Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
//	
//	Дата = КонецМесяца(ТекущаяДата());
//	
//КонецПроцедуры