
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Управленческий.Записывать = Истина;
	
	Для Каждого Строка Из СписокДоговоров Цикл
		
		СоздаватьСлужебку = ЛексСервер.ПолучитьНастройкуПодразделения(Строка.Договор.Подразделение, Перечисления.ВидыНастроекПодразделений.СлужебнаяЗапискаПослеОбзвона);
		
		ОценкиСоздаватьСлужебнуюЗаписку = Новый Массив;
		ОценкиСоздаватьСлужебнуюЗаписку.Добавить(Перечисления.Оценки.Претензия);
		ОценкиСоздаватьСлужебнуюЗаписку.Добавить(Перечисления.Оценки.ВзбешенныйЗаказчик);
		
		Если ОценкиСоздаватьСлужебнуюЗаписку.Найти(Строка.ОбщаяОценка) <> Неопределено
			И ЗначениеЗаполнено(СоздаватьСлужебку) И СоздаватьСлужебку Тогда
			
			// { Васильев Александр Леонидович [24.09.2014]
			// Совсем не корректный способ.
			// Во-первых в транзакции, а во-вторых
			// вполне возможна служебка созданная
			// без обзвона по договору, тогда не добавится.
			// } Васильев Александр Леонидович [24.09.2014]
			
			Если НЕ ЗначениеЗаполнено(Документы.СлужебнаяЗаписка.НайтиПоРеквизиту("Документ", Строка.Договор)) Тогда
				
				Замерщик = ОпределитьЗамерщика(Строка.Договор);
				Тема = "Претензия к %1 (%2) Замерщик: %3";
				Тема = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Тема, Строка.Договор, Строка.Адрес, Замерщик);
				
				НовыйДокумент = Документы.СлужебнаяЗаписка.СоздатьДокумент();
				НовыйДокумент.ВидСлужебнойЗаписки = Перечисления.ВидыСлужебнойЗаписки.ПретензияЗаявление;
				НовыйДокумент.Адресат = Константы.ГенеральныйДиректор.Получить();
				НовыйДокумент.Тема = Тема;
				НовыйДокумент.Документ = Строка.Договор;
				НовыйДокумент.Дата = ТекущаяДата();
				НовыйДокумент.Автор = Автор;
				НовыйДокумент.Проблема = СформироватьТекстОтвета(Строка.ОбщийКомментарий,НовыйДокумент);
				НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьТекстОтвета(Текст, Док)
	
	Адресат = Док.Адресат.ФизическоеЛицо;
	АвторФизЛицо = Док.Автор.ФизическоеЛицо;
	
	АдресатСтрока = Адресат.Фамилия + " " +Лев(Адресат.Имя,1)+"."+Лев(Адресат.Отчество,1)+".";
	АвторСтрока = АвторФизЛицо.Фамилия + " " +Лев(АвторФизЛицо.Имя,1)+"."+Лев(АвторФизЛицо.Отчество,1)+".";
	
	ФормТекст = "";
	ФормТекст = ФормТекст + "☺B☺" + "Адресат:" + "☺B☺ ";
	ФормТекст = ФормТекст + "☺A☺" + АдресатСтрока + "☺A☺" + Символы.ПС + Символы.ПС;
	ФормТекст = ФормТекст + "☺B☺" + "________________________" + "☺B☺";
	
	ФормТекст = ФормТекст + Символы.ПС + Символы.ПС;
	ФормТекст = ФормТекст + "☺C☺" + АвторСтрока + "☺C☺ ";
	ФормТекст = ФормТекст + "☺B☺" + Формат(ТекущаяДата(), "ДФ=d.MM.yy") + " в " + Формат(ТекущаяДата(), "ДФ=H:mm") + "☺B☺"+ Символы.ПС;
	ФормТекст = ФормТекст + Текст + Символы.ПС;
	ФормТекст = ФормТекст + "☺B☺" + "________________________" + "☺B☺";
	
	Возврат ФормТекст;
	
КонецФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Перем Ошибки;
	
	Текст = "Укажите оценку";
	Для Каждого Строка Из СписокДоговоров Цикл
		
		Индекс = Строка.НомерСтроки - 1;
		НомерСтроки = Строка.НомерСтроки;
		
		Если (НЕ ЗначениеЗаполнено(Строка.ОценкаЗамер) И ЗначениеЗаполнено(Строка.КомментарийЗамер)) Тогда
			Поле = "СписокДоговоров[" + Индекс + "].ОценкаЗамер";
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Поле, Текст);
		КонецЕсли;
		
		Если (НЕ ЗначениеЗаполнено(Строка.ОценкаДизайн) И ЗначениеЗаполнено(Строка.КомментарийДизайн)) Тогда
			Поле = "СписокДоговоров[" + Индекс + "].ОценкаДизайн";
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Поле, Текст);
		КонецЕсли;
		
		Если (НЕ ЗначениеЗаполнено(Строка.ОценкаДоставка) И ЗначениеЗаполнено(Строка.КомментарийДоставка)) Тогда
			Поле = "СписокДоговоров[" + Индекс + "].ОценкаДоставка";
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Поле, Текст);
		КонецЕсли;
		
		Если (НЕ ЗначениеЗаполнено(Строка.ОценкаМонтаж) И ЗначениеЗаполнено(Строка.КомментарийМонтаж)) Тогда
			Поле = "СписокДоговоров[" + Индекс + "].ОценкаМонтаж";
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Поле, Текст);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДатыЗапретаИзменения.ПроверитьДатуЗапретаИзмененияПередЗаписьюДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Функция ОпределитьЗамерщика(Договор)
	
	ЗамерДокумента = Договор.Спецификация.ДокументОснование;
	
	Если ТипЗнч(ЗамерДокумента) = Тип("ДокументСсылка.Замер") Тогда
		
		Возврат ЗамерДокумента.Замерщик;
		
	КонецЕсли;
	
КонецФункции
