
Процедура ВыполнитьСписаниеСоСклада(Отказ)
	
	ОбщаяСебестоимость = 0;
	ЗатратныйСчет = ЛексСервер.ПолучитьЗатратныйСчетПодразделения(Подразделение);
	ПВХСтатья = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР;
	ПВХСклады = ПланыВидовХарактеристик.ВидыСубконто.Склады;
	ПВХНоменклатура = ПланыВидовХарактеристик.ВидыСубконто.Номенклатура;
	
	РасходнаяСтатья = Справочники.СтатьиДоходовРасходов.РасходСписаниеМатериалов;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписаниеМатериаловСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(СписаниеМатериаловСписокНоменклатуры.НомерСтроки) КАК НомерСтроки,
	|	СУММА(СписаниеМатериаловСписокНоменклатуры.Количество) КАК Количество
	|ПОМЕСТИТЬ тчДок
	|ИЗ
	|	Документ.СписаниеМатериалов.СписокНоменклатуры КАК СписаниеМатериаловСписокНоменклатуры
	|ГДЕ
	|	СписаниеМатериаловСписокНоменклатуры.Ссылка = &Ссылка
	|	И СписаниеМатериаловСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеМатериаловСписокНоменклатуры.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";
	
	Результат = Запрос.Выполнить();
	
	//Блокировка = Новый БлокировкаДанных;
	//ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Управленческий");
	//ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	//ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	//ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	//ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	//Блокировка.Заблокировать();
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	тчДок.Номенклатура,
	|	тчДок.НомерСтроки,
	|	тчДок.Количество,
	|	ЕСТЬNULL(УправленческийОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(УправленческийОстатки.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	тчДок КАК тчДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
	|				&МоментВремени,
	|				Счет = &Счет,
	|				&ВидыСубконто,
	|				Подразделение = &Подразделение
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							ТЧДок.Номенклатура
	|						ИЗ
	|							ТЧДок)
	|					И Субконто2 = &Склад) КАК УправленческийОстатки
	|		ПО тчДок.Номенклатура = УправленческийОстатки.Субконто1";
	
	Если Подразделение.ВидПодразделения = Перечисления.ВидыПодразделений.Логистик Тогда
		Счет = ПланыСчетов.Управленческий.МатериалыНаСкладе;
		ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Склады);
		Запрос.УстановитьПараметр("Склад", Склад);
	Иначе
		Счет = ПланыСчетов.Управленческий.ОсновноеПроизводство;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Субконто2 = &Склад", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Счет", Счет);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Количество > Выборка.КоличествоОстаток Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Недостаточно свободного материла '%1'. Из требуемых %2 есть только %3", Выборка.Номенклатура, Выборка.Количество, Выборка.КоличествоОстаток);
			Поле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("СписокНоменклатуры[%1].Количество", Выборка.НомерСтроки - 1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле);
			Отказ = Истина;
			Продолжить;
			
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			Если Выборка.Количество <> 0 Тогда
				Себестоимость = Выборка.Количество / Выборка.КоличествоОстаток * Выборка.СуммаОстаток;
			Иначе
				Себестоимость = 0;
			КонецЕсли;
			
			Проводка = Движения.Управленческий.Добавить();
			Проводка.Подразделение = Подразделение;
			Проводка.Период = Дата;
			Проводка.Сумма = Себестоимость;
			
			Проводка.СчетДт = ЗатратныйСчет;
			Проводка.СубконтоДт[ПВХСтатья] = РасходнаяСтатья;
			
			Проводка.СчетКт = Счет;
			Проводка.СубконтоКт[ПВХНоменклатура] = Выборка.Номенклатура;
			Проводка.СубконтоКт[ПВХСклады] = Склад;
			Проводка.КоличествоКт = Выборка.Количество;
			
			ОбщаяСебестоимость = ОбщаяСебестоимость + Себестоимость;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДокумента = ОбщаяСебестоимость;
	Записать(РежимЗаписиДокумента.Запись);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.Управленческий.Записать();
	
	ВыполнитьСписаниеСоСклада(Отказ);
	
	Если НЕ Отказ Тогда
		Движения.Управленческий.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИнвентаризацияМатериалов") Тогда
		
		Для каждого Строка Из ДанныеЗаполнения.СписокНоменклатуры Цикл
			Если Строка.Отклонение > 0 Тогда
				НоваяСтрока = СписокНоменклатуры.Добавить();
				НоваяСтрока.Номенклатура = Строка.Номенклатура;
				НоваяСтрока.Количество = Строка.Отклонение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Подразделение.ВидПодразделения = Перечисления.ВидыПодразделений.Производство Тогда
		
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Склад"));
		
	КонецЕсли;
	
КонецПроцедуры
