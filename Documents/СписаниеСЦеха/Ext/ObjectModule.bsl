
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Управленческий.Очистить();
	Движения.Управленческий.Записать();
	
	Для Каждого Строка из СписокНоменклатуры Цикл
		
		Проводки = Движения.Управленческий.Добавить();
		Проводки.Период = Дата;
		Проводки.Подразделение = Подразделение;
		
		Если Строка.Количество < 0 Тогда
			
			Проводки.КоличествоДт = - Строка.Количество;
			
			Проводки.СчетДт = ПланыСчетов.Управленческий.ОсновноеПроизводство;
			Проводки.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Строка.Номенклатура;
			
			Проводки.СчетКт = ПланыСчетов.Управленческий.Доходы;
			Проводки.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] = Справочники.СтатьиДоходовРасходов.ОприходованиеМатериалов;
			
		Иначе
			
			Проводки.КоличествоКт = Строка.Количество;
			
			Проводки.СчетКт = ПланыСчетов.Управленческий.ОсновноеПроизводство;
			Проводки.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Строка.Номенклатура;
			
			Проводки.СчетДт = ПланыСчетов.Управленческий.Доходы;
			Проводки.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] = Справочники.СтатьиДоходовРасходов.ОприходованиеМатериалов;
			
		КонецЕсли;
		
	КонецЦикла;;
	
	Если НЕ Отказ Тогда
		
		Движения.Управленческий.Записывать = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
		ДатыЗапретаИзменения.ПроверитьДатуЗапретаИзмененияПередЗаписьюДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры
