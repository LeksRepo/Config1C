
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,
	
	ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчет") Тогда
		ПодготовитьПечатнуюФорму("АвансовыйОтчет", "Авансовый отчет", "Документ.АвансовыйОтчет.АвансовыйОтчет",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриходныйОрдер") Тогда
		ПодготовитьПечатнуюФорму("ПриходныйОрдер", "Приходный ордер", "Документ.АвансовыйОтчет.ПриходныйОрдер",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

Процедура ПодготовитьПечатнуюФорму(Знач ИмяМакета, ПредставлениеМакета, ПолныйПутьКМакету = "", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, ИмяМакета);
	Если НужноПечататьМакет Тогда
		Если ИмяМакета = "АвансовыйОтчет" Тогда
			ТабДок = ПечатьКассовыйОрдер(МассивОбъектов, ОбъектыПечати);
		КонецЕсли;
		
		Если ИмяМакета = "ПриходныйОрдер" Тогда
			ТабДок = ПриходныйОрдер(МассивОбъектов, ОбъектыПечати);
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета,
		ПредставлениеМакета, ТабДок,, ПолныйПутьКМакету);
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьКассовыйОрдер(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_АвансовыйОтчет";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АвансовыйОтчет.Подразделение КАК ПредставлениеПодразделения,
	|	АвансовыйОтчет.СуммаДокумента КАК Израсходовано,
	|	АвансовыйОтчет.ФизЛицо КАК ПредставлениеПодотчетногоЛица,
	|	АвансовыйОтчет.Подразделение.Организация КАК ПредставлениеОрганизации,
	|	АвансовыйОтчет.Дата КАК ДатаДокумента,
	|	АвансовыйОтчет.СписокПлатежей.(
	|		НомерСтроки,
	|		Сумма КАК ПоОтчету,
	|		СчетУчета КАК ДебетСубСчета,
	|		СтатьяДДС КАК НаименованиеРасхода
	|	),
	|	АвансовыйОтчет.Ссылка,
	|	АвансовыйОтчет.Номер КАК НомерДокумента,
	|	АвансовыйОтчет.ФизЛицо.ВЛице КАК ПредставлениеПодотчетногоЛицаОт,
	|	АвансовыйОтчет.СписокНоменклатуры.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Сумма КАК ПоОтчету
	|	)
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Проведен
	|	И АвансовыйОтчет.Ссылка В(&Ссылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Макет = Документы.АвансовыйОтчет.ПолучитьМакет("АвансовыйОтчет");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Титул = Макет.ПолучитьОбласть("Титул");
	Строка = Макет.ПолучитьОбласть("Строка");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ФормСтрока = "Л = ru_RU; ДП = Истина";
		ПарПредмета = "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
		СуммаОтчетаПрописью = ЧислоПрописью(Выборка.Израсходовано, ФормСтрока, ПарПредмета);
		ИзрасходованоРуб = Цел(Выборка.Израсходовано);
		ИзрасходованоКоп = Формат((Выборка.Израсходовано - ИзрасходованоРуб) * 100, "ЧЦ=2; ЧН=00; ЧВН=");
		Титул.Параметры.Заполнить(Выборка);
		Титул.Параметры.СуммаОтчетаПрописью 	= СуммаОтчетаПрописью;
		Титул.Параметры.ИзрасходованоРуб = ИзрасходованоРуб;
		Титул.Параметры.ИзрасходованоКоп = ИзрасходованоКоп;
		ТабДок.Вывести(Титул);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
		// ОБОРОТНАЯ СТОРОНА
		ТабДок.Вывести(Шапка);
		
		// Выводим табличные части
		
		ТЗ = Выборка.СписокПлатежей.Выгрузить();
		Для Каждого Стр Из ТЗ Цикл
			Строка.Параметры.Заполнить(Стр);
			Строка.Параметры.ДокументДата = Выборка.ДатаДокумента;
			Строка.Параметры.ДокументНомер = Выборка.НомерДокумента;
			ТабДок.Вывести(Строка);
		КонецЦикла;
		
		ТЗНоменклатура = Выборка.СписокНоменклатуры.Выгрузить();
		Для Каждого СтрокаНоменклатуры Из ТЗНоменклатура Цикл
			Строка.Параметры.Заполнить(СтрокаНоменклатуры);
			Строка.Параметры.ДебетСубСчета = ПланыСчетов.Управленческий.МатериалыНаСкладе;
			Строка.Параметры.НаименованиеРасхода = СтрокаНоменклатуры.Номенклатура.СтатьяДвиженияДенежныхСредств;
			Строка.Параметры.ДокументДата = Выборка.ДатаДокумента;
			Строка.Параметры.ДокументНомер = Выборка.НомерДокумента;
			ТабДок.Вывести(Строка);
		КонецЦикла;
		
		Подвал.Параметры.ИтогоПоОтчету = Выборка.Израсходовано;
		Подвал.Параметры.ПредставлениеПодотчетногоЛица = Выборка.ПредставлениеПодотчетногоЛица;
		ТабДок.Вывести(Подвал);
		
		ВставлятьРазделительСтраниц = Истина;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, 
		НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ЛексСервер.ПолучитьПредставлениеДокумента(Данные, Представление, СтандартнаяОбработка);
	
КонецПроцедуры

Функция ПриходныйОрдер(МассивОбъектов, ОбъектыПечати) Экспорт	
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ПриходныйОрдер";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Очистить();
	
	Макет = Документы.АвансовыйОтчет.ПолучитьМакет("ПриходныйОрдер");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСписокПлатежейШапка = Макет.ПолучитьОбласть("СписокПлатежейШапка");
	ОбластьСписокПлатежей = Макет.ПолучитьОбласть("СписокПлатежей");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	ИтогПлатежей = Макет.ПолучитьОбласть("ИтогПлатежей");
	ОбластьРазделитель = Макет.ПолучитьОбласть("Разделитель");
	
    Для Каждого Документ Из МассивОбъектов Цикл
		
		Макет = Документы.АвансовыйОтчет.ПолучитьМакет("ПриходныйОрдер");
		
		СтруктураРеквизитов = ЛексСервер.ЗначенияРеквизитовОбъекта(Документ, "Дата, Подразделение, Склад");
		ДатаДокумента = СтруктураРеквизитов.Дата;
		
		Запрос = Новый Запрос;
		Запрос.Параметры.Вставить("Закуп", Документ.ДокументОснование);
		Запрос.Параметры.Вставить("АвансОтчет", Документ);
		Запрос.Параметры.Вставить("ДатаДокумента", ДатаДокумента);
		Запрос.Параметры.Вставить("Подразделение", СтруктураРеквизитов.Подразделение);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	АвансовыйОтчетСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	АвансовыйОтчетСписокНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	АвансовыйОтчетСписокНоменклатуры.Количество,
		|	АвансовыйОтчетСписокНоменклатуры.Цена,
		|	АвансовыйОтчетСписокНоменклатуры.Сумма
		|ПОМЕСТИТЬ СпНоменклатуры
		|ИЗ
		|	Документ.АвансовыйОтчет.СписокНоменклатуры КАК АвансовыйОтчетСписокНоменклатуры
		|ГДЕ
		|	АвансовыйОтчетСписокНоменклатуры.Ссылка = &АвансОтчет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпНоменклатуры.Номенклатура КАК Номенклатура,
		|	СпНоменклатуры.ЕдиницаИзмерения,
		|	СпНоменклатуры.Количество,
		|	СпНоменклатуры.Цена,
		|	СпНоменклатуры.Сумма,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(СпНоменклатуры.Номенклатура КАК Справочник.Номенклатура).Базовый
		|				ТОГДА ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная
		|			ИНАЧЕ ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная * СпНоменклатуры.Номенклатура.КоэффициентБазовых
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПлановаяЦена,
		|	ВЫБОР
		|		КОГДА НЕ СпНоменклатуры.Номенклатура.МатериалЗаказчика
		|				И СпНоменклатуры.Номенклатура.ВидНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
		|			ТОГДА СпНоменклатуры.Сумма - ЕСТЬNULL(ВЫРАЗИТЬ(ВЫБОР
		|							КОГДА ВЫРАЗИТЬ(СпНоменклатуры.Номенклатура КАК Справочник.Номенклатура).Базовый
		|								ТОГДА ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная
		|							ИНАЧЕ ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная * СпНоменклатуры.Номенклатура.КоэффициентБазовых
		|						КОНЕЦ КАК ЧИСЛО(15, 2)), 0) * СпНоменклатуры.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Отклонение
		|ПОМЕСТИТЬ Аванс
		|ИЗ
		|	СпНоменклатуры КАК СпНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыПоПодразделениям.СрезПоследних(&ДатаДокумента, Подразделение = &Подразделение) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО (ВЫБОР
		|				КОГДА СпНоменклатуры.Номенклатура.Базовый
		|					ТОГДА СпНоменклатуры.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|				ИНАЧЕ СпНоменклатуры.Номенклатура.БазоваяНоменклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|			КОНЕЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокНоменклатуры.Номенклатура,
		|	СписокНоменклатуры.РучнойВвод КАК Количество,
		|	СписокНоменклатуры.ЕдиницаИзмерения
		|ПОМЕСТИТЬ Список
		|ИЗ
		|	Документ.ОперативныйЗакуп.СписокНоменклатуры КАК СписокНоменклатуры
		|ГДЕ
		|	СписокНоменклатуры.Ссылка = &Закуп
		|	И СписокНоменклатуры.РучнойВвод > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СписокНоменклатурыПодЗаказ.Номенклатура,
		|	СписокНоменклатурыПодЗаказ.РучнойВвод,
		|	СписокНоменклатурыПодЗаказ.ЕдиницаИзмерения
		|ИЗ
		|	Документ.ОперативныйЗакуп.СписокНоменклатурыПодЗаказ КАК СписокНоменклатурыПодЗаказ
		|ГДЕ
		|	СписокНоменклатурыПодЗаказ.Ссылка = &Закуп
		|	И СписокНоменклатурыПодЗаказ.РучнойВвод > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Список.Номенклатура,
		|	СУММА(Список.Количество) КАК Количество,
		|	Список.ЕдиницаИзмерения,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(Список.Номенклатура КАК Справочник.Номенклатура).Базовый
		|				ТОГДА ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная
		|			ИНАЧЕ ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная * Список.Номенклатура.КоэффициентБазовых
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ПлановаяЦена
		|ПОМЕСТИТЬ Закуп
		|ИЗ
		|	Список КАК Список
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыПоПодразделениям.СрезПоследних(&ДатаДокумента, Подразделение = &Подразделение) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО (ВЫБОР
		|				КОГДА Список.Номенклатура.Базовый
		|					ТОГДА Список.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|				ИНАЧЕ Список.Номенклатура.БазоваяНоменклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|			КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	Список.Номенклатура,
		|	Список.ЕдиницаИзмерения,
		|	ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(Список.Номенклатура КАК Справочник.Номенклатура).Базовый
		|				ТОГДА ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная
		|			ИНАЧЕ ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная * Список.Номенклатура.КоэффициентБазовых
		|		КОНЕЦ КАК ЧИСЛО(15, 2))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Закуп.Номенклатура ЕСТЬ NULL 
		|			ТОГДА Аванс.Номенклатура
		|		ИНАЧЕ Закуп.Номенклатура
		|	КОНЕЦ КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА Закуп.ЕдиницаИзмерения ЕСТЬ NULL 
		|			ТОГДА Аванс.ЕдиницаИзмерения
		|		ИНАЧЕ Закуп.ЕдиницаИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(Закуп.Количество, 0) КАК ОпЗакуп,
		|	ЕСТЬNULL(Аванс.Количество, 0) КАК Куплено,
		|	ЕСТЬNULL(Аванс.Количество, 0) - ЕСТЬNULL(Закуп.Количество, 0) КАК Отклонение,
		|	ВЫБОР
		|		КОГДА Закуп.ПлановаяЦена ЕСТЬ NULL 
		|			ТОГДА Аванс.ПлановаяЦена
		|		ИНАЧЕ Закуп.ПлановаяЦена
		|	КОНЕЦ КАК ПлановаяЦена,
		|	ВЫБОР
		|		КОГДА Аванс.Цена ЕСТЬ NULL 
		|			ТОГДА Закуп.ПлановаяЦена
		|		ИНАЧЕ Аванс.Цена
		|	КОНЕЦ КАК Цена
		|ПОМЕСТИТЬ ПолныйНабор
		|ИЗ
		|	Закуп КАК Закуп
		|		ПОЛНОЕ СОЕДИНЕНИЕ Аванс КАК Аванс
		|		ПО Закуп.Номенклатура = Аванс.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПолныйНабор.Номенклатура,
		|	ПолныйНабор.ЕдиницаИзмерения,
		|	ПолныйНабор.ОпЗакуп,
		|	ПолныйНабор.Куплено,
		|	ПолныйНабор.Отклонение,
		|	ПолныйНабор.ПлановаяЦена,
		|	ПолныйНабор.Цена,
		|	ВЫРАЗИТЬ(ПолныйНабор.Куплено * ПолныйНабор.Цена КАК ЧИСЛО(15, 2)) КАК Сумма,
		|	ВЫРАЗИТЬ(ПолныйНабор.Куплено * ПолныйНабор.Цена - ПолныйНабор.Куплено * ПолныйНабор.ПлановаяЦена КАК ЧИСЛО(15, 2)) КАК Перерасход
		|ИЗ
		|	ПолныйНабор КАК ПолныйНабор";
		
		Таблица = Запрос.Выполнить().Выгрузить();
		
		Если Таблица.Количество() > 0 Тогда
		
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Документ);
			ТабДок.Вывести(Шапка);
			ТабДок.Вывести(ОбластьРазделитель);
			ТабДок.Вывести(ОбластьСписокПлатежейШапка);
			
			СуммаПерерасход = 0;
			НомерСтроки = 1;
			
			Для Каждого Строка Из Таблица Цикл
				
				ОбластьСписокПлатежей.Параметры.Заполнить(Строка);
				ОбластьСписокПлатежей.Параметры.НомерСтроки = НомерСтроки;
				СуммаПерерасход = СуммаПерерасход + Строка.Перерасход;
						
				ТабДок.Вывести(ОбластьСписокПлатежей);
				НомерСтроки = НомерСтроки + 1;
					
			КонецЦикла;
			
			ИтогПлатежей.Параметры.Сумма = Окр(Документ.СуммаДокумента, 2);  
			ИтогПлатежей.Параметры.Отклонение = Окр(СуммаПерерасход, 2);
			ТабДок.Вывести(ИтогПлатежей);
			
			ТабДок.Вывести(ОбластьРазделитель);
			ТабДок.Вывести(Подвал);
			
		КонецЕсли;
	
	КонецЦикла;
	
Возврат ТабДок;
	
КонецФункции