////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция СформироватьОстаткиСклад(Запрос)
	
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	втСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	втСписокНоменклатуры.КоличествоФакт,
	|	ЕСТЬNULL(УправленческийОстатки.КоличествоОстаток, 0) КАК КоличествоУчетное,
	|	ЕСТЬNULL(УправленческийОстатки.СуммаОстаток, 0) КАК СтоимостьУчетная
	|ПОМЕСТИТЬ втОстаткиНоменклатуры
	|ИЗ
	|	втСписокНоменклатуры КАК втСписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
	|				&Период,
	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.МатериалыНаСкладе),
	|				,
	|				Подразделение = &Подразделение
	|					И Субконто1 = &Склад
	|					И Субконто2 В
	|						(ВЫБРАТЬ
	|							т.Номенклатура
	|						ИЗ
	|							втСписокНоменклатуры КАК т)) КАК УправленческийОстатки
	|		ПО втСписокНоменклатуры.Номенклатура = УправленческийОстатки.Субконто2
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Функция СформироватьОстаткиЦех(Запрос)
	
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	втСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	втСписокНоменклатуры.КоличествоФакт,
	|	ЕСТЬNULL(УправленческийОстатки.КоличествоОстаток, 0) КАК КоличествоУчетное,
	|	ЕСТЬNULL(УправленческийОстатки.СуммаОстаток, 0) КАК СтоимостьУчетная
	|ПОМЕСТИТЬ втОстаткиНоменклатуры
	|ИЗ
	|	втСписокНоменклатуры КАК втСписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
	|				&Период,
	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ОсновноеПроизводство),
	|				,
	|				Подразделение = &Подразделение
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							т.Номенклатура
	|						ИЗ
	|							втСписокНоменклатуры КАК т)) КАК УправленческийОстатки
	|		ПО втСписокНоменклатуры.Номенклатура = УправленческийОстатки.Субконто1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Функция ЗапросПоНоменклатуреСклад()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("ГруппаНоменклатуры", ГруппаНоменклатуры);
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправленческийОстатки.Субконто2 КАК Номенклатура
	|	0 КАК КоличествоФакт
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Остатки(
	|			&Период,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.МатериалыНаСкладе),
	|			,
	|			Подразделение = &Подразделение
	|				И Субконто1 = &Склад
	|				И ВЫБОР
	|					КОГДА &ГруппаНоменклатуры = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Субконто2 В ИЕРАРХИИ (&ГруппаНоменклатуры)
	|				КОНЕЦ) КАК УправленческийОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	УправленческийОстатки.Субконто2.Родитель.Наименование,
	|	УправленческийОстатки.Субконто2.Наименование";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Функция ЗапросПоНоменклатуреЦех()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("ГруппаНоменклатуры", ГруппаНоменклатуры);
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправленческийОстатки.Субконто1 КАК Номенклатура,
	|	0 КАК КоличествоФакт
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Остатки(
	|			&Период,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ОсновноеПроизводство),
	|			,
	|			Подразделение = &Подразделение
	|				И ВЫБОР
	|					КОГДА &ГруппаНоменклатуры = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Субконто1 В ИЕРАРХИИ (&ГруппаНоменклатуры)
	|				КОНЕЦ) КАК УправленческийОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	УправленческийОстатки.Субконто1.Родитель.Наименование,
	|	УправленческийОстатки.Субконто1.Наименование";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаКлиенте
Функция ЗаполнитьСписокНоменклатуры()
	
	Если рфПерезаполнение Тогда
		ТекстВопроса = "Учетные данные будут перезаполнены.";
	Иначе
		ТекстВопроса = "Табличная часть будет очищена.";
	КонецЕсли;
	
	Если Объект.СписокНоменклатуры.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос(ТекстВопроса + Символы.ВК + "Продолжить?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСписокНоменклатурыОстатками();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокНоменклатурыОстатками()
	
	Если НЕ рфПерезаполнение Тогда
		
		Объект.СписокНоменклатуры.Очистить();
		
		Если Объект.ИнвентаризацияПоЦеху Тогда
			тзНоменклатура = ЗапросПоНоменклатуреЦех();
		Иначе
			тзНоменклатура = ЗапросПоНоменклатуреСклад();
		КонецЕсли;
		
	Иначе
		
		тзНоменклатура = Объект.СписокНоменклатуры.Выгрузить();
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокНоменклатуры", тзНоменклатура);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокНоменклатуры.Номенклатура,
	|	СписокНоменклатуры.КоличествоФакт
	|ПОМЕСТИТЬ тзСписокНоменклатуры
	|ИЗ
	|	&СписокНоменклатуры КАК СписокНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(втСписокНоменклатуры.КоличествоФакт) КАК КоличествоФакт
	|ПОМЕСТИТЬ втСписокНоменклатуры
	|ИЗ
	|	тзСписокНоменклатуры КАК втСписокНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	втСписокНоменклатуры.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";
	
	Запрос.Выполнить();
	
	Если Объект.ИнвентаризацияПоЦеху Тогда
		тзОстаткиНоменклатуры = СформироватьОстаткиЦех(Запрос);
	Иначе
		тзОстаткиНоменклатуры = СформироватьОстаткиСклад(Запрос);
	КонецЕсли;
	
	Запрос.Текст =
	
		"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(тзОстаткиНоменклатуры.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	тзОстаткиНоменклатуры.КоличествоФакт,
	|	тзОстаткиНоменклатуры.КоличествоУчетное,
	|	тзОстаткиНоменклатуры.СтоимостьУчетная,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная, 0) КАК ЦенаБазоваяПоПрайсу,
	|	ВЫБОР
	|		КОГДА тзОстаткиНоменклатуры.КоличествоУчетное <> 0
	|			ТОГДА тзОстаткиНоменклатуры.СтоимостьУчетная / тзОстаткиНоменклатуры.КоличествоУчетное
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЦенаСебестоимость,
	|	тзОстаткиНоменклатуры.КоличествоФакт - тзОстаткиНоменклатуры.КоличествоУчетное КАК Отклонение
	|ПОМЕСТИТЬ втНоменклатураЦены
	| ;
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(тзОстаткиНоменклатуры.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	тзОстаткиНоменклатуры.КоличествоФакт,
	|	тзОстаткиНоменклатуры.КоличествоУчетное,
	|	тзОстаткиНоменклатуры.СтоимостьУчетная,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная, 0) КАК ЦенаБазоваяПоПрайсу,
	|	ВЫБОР
	|		КОГДА тзОстаткиНоменклатуры.КоличествоУчетное <> 0
	|			ТОГДА тзОстаткиНоменклатуры.СтоимостьУчетная / тзОстаткиНоменклатуры.КоличествоУчетное
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЦенаСебестоимость,
	|	тзОстаткиНоменклатуры.КоличествоФакт - тзОстаткиНоменклатуры.КоличествоУчетное КАК Отклонение
	|ПОМЕСТИТЬ втНоменклатураЦены
	|ИЗ
	|	&тзОстаткиНоменклатуры КАК тзОстаткиНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&Период,
	|				Регион = &Регион
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							т.Номенклатура
	|						ИЗ
	|							втОстаткиНоменклатуры КАК т)) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО тзОстаткиНоменклатуры.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатураЦены.Номенклатура,
	|	втНоменклатураЦены.КоличествоФакт,
	|	втНоменклатураЦены.КоличествоУчетное,
	|	втНоменклатураЦены.СтоимостьУчетная,
	|	втНоменклатураЦены.ЦенаБазоваяПоПрайсу,
	|	втНоменклатураЦены.ЦенаСебестоимость,
	|	втНоменклатураЦены.Отклонение,
	|	ВЫБОР
	|		КОГДА втНоменклатураЦены.ЦенаСебестоимость = 0
	|			ТОГДА втНоменклатураЦены.ЦенаБазоваяПоПрайсу * ВЫБОР
	|					КОГДА втНоменклатураЦены.Номенклатура.Базовый
	|						ТОГДА 1
	|					ИНАЧЕ втНоменклатураЦены.Номенклатура.КоэффициентБазовых
	|				КОНЕЦ
	|		ИНАЧЕ втНоменклатураЦены.ЦенаСебестоимость
	|	КОНЕЦ КАК Цена
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	втНоменклатураЦены КАК втНоменклатураЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатура.Номенклатура,
	|	втНоменклатура.КоличествоФакт,
	|	втНоменклатура.КоличествоУчетное,
	|	ВЫБОР
	|		КОГДА втНоменклатура.СтоимостьУчетная = 0
	|			ТОГДА втНоменклатура.КоличествоУчетное * втНоменклатура.Цена
	|		ИНАЧЕ втНоменклатура.СтоимостьУчетная
	|	КОНЕЦ КАК СтоимостьУчетная,
	|	втНоменклатура.Отклонение,
	|	втНоменклатура.Цена,
	|	втНоменклатура.КоличествоФакт * втНоменклатура.Цена КАК СтоимостьФакт
	|ИЗ
	|	втНоменклатура КАК втНоменклатура";
	
	Объект.СписокНоменклатуры.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

&НаКлиенте
Функция ОбновитьДоступностьЭлементов()
	
	Элементы.Склад.Доступность = НЕ Объект.ИнвентаризацияПоЦеху;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ПерезаполнитьУчетныеДанные(Команда)
	
	ГруппаНоменклатуры = Неопределено;
	рфПерезаполнение = Истина;
	ЗаполнитьСписокНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОстаткамиПоСкладу(Команда)
	
	ГруппаНоменклатуры = Неопределено;
	рфПерезаполнение = Ложь;
	ЗаполнитьСписокНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФактическиеДанныеУчетными(Команда)
	
	Для каждого ы Из Объект.СписокНоменклатуры Цикл
		
		Ы.КоличествоФакт = Ы.КоличествоУчетное;
		Ы.Отклонение = 0;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьУчетнымиДаннымиГруппой(Команда)
	
	ГруппаНоменклатуры = ОткрытьФормуМодально("Справочник.Номенклатура.ФормаВыбораГруппы");
	Если ЗначениеЗаполнено(ГруппаНоменклатуры) Тогда
		рфПерезаполнение = Ложь;
		ЗаполнитьСписокНоменклатуры();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ПоЦехуПриИзменении(Элемент)
	
	ОбновитьДоступностьЭлементов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ СПИСОК НОМЕНКЛАТУРЫ

&НаКлиенте
Процедура СписокНоменклатурыКоличествоФактПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокНоменклатуры.ТекущиеДанные;
	ТекущиеДанные.Отклонение = ТекущиеДанные.КоличествоФакт - ТекущиеДанные.КоличествоУчетное;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры
