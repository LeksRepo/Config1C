
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// { Васильев Александр Леонидович [13.09.2013]
	// здесь или в акте выполнения договора удерживать зарплату?
	// } Васильев Александр Леонидович [13.09.2013]
	
	СчетЗП = ПланыСчетов.Управленческий.ВзаиморасчетыССотрудниками;
	ПВХФизическиеЛица = ПланыВидовХарактеристик.ВидыСубконто.ФизическиеЛица;
	ПВХСтатьи = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР;
	
	Для каждого Строка Из Удержания Цикл
		
		Если Строка.Сумма <> 0 Тогда
			
			Подразделение = Строка.Сотрудник.Подразделение;
			ЛексСервер.ПолучитьЗатратныйСчетПодразделения(Подразделение);
			
			Проводка = Движения.Управленческий.Добавить();
			Проводка.Период = Дата;
			Проводка.Подразделение = Подразделение;
			Проводка.Сумма = Строка.Сумма;
			
			Проводка.СчетДт = СчетЗП;
			Проводка.СубконтоДт[ПВХФизическиеЛица] = Строка.Сотрудник;
			
			Проводка.СчетКт = ЛексСервер.ПолучитьЗатратныйСчетПодразделения(Подразделение);
			Проводка.СубконтоКт[ПВХСтатьи] = Справочники.СтатьиДоходовРасходов.ДоходыЗаПеределкиИУдержанияОтСотрудников;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого Строка Из Начисления Цикл
		
		Если Строка.Сумма <> 0 Тогда
			
			Подразделение = Строка.Сотрудник.Подразделение;
			ЛексСервер.ПолучитьЗатратныйСчетПодразделения(Подразделение);
			
			Проводка = Движения.Управленческий.Добавить();
			Проводка.Период = Дата;
			Проводка.Подразделение = Подразделение;
			Проводка.Сумма = Строка.Сумма;
			
			Проводка.СчетКт = СчетЗП;
			Проводка.СубконтоКт[ПВХФизическиеЛица] = Строка.Сотрудник;
			
			Проводка.СчетДт = ЛексСервер.ПолучитьЗатратныйСчетПодразделения(Подразделение);
			Проводка.СубконтоДт[ПВХСтатьи] = Справочники.СтатьиДоходовРасходов.ПрочиеРасходыНаПерсонал;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// { Васильев Александр Леонидович [13.09.2013]
	// вынести начисление в функцию
	// } Васильев Александр Леонидович [13.09.2013]
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Монтаж") Тогда
		Монтаж = ДанныеЗаполнения;
		Подразделение = ДанныеЗаполнения.Подразделение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ВсегоНачислений = Начисления.Итог("Сумма");
	ВсегоУдержаний = Удержания.Итог("Сумма");
	Если ВсегоНачислений <> ВсегоУдержаний Тогда
		Отказ = Истина;
		ТекстСообщения = "Сумма удержаний и начислений должна быть одинаковой";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект);
	КонецЕсли;
	
	ДлинаКомментарий = СтрДлина(Комментарий);
	ТекстСообщения = "";
	Если ДлинаКомментарий < 10 Тогда
		ТекстСообщения = "Ваша причина не убедительна";
	ИначеЕсли ДлинаКомментарий < 50 Тогда
		ТекстСообщения = "Введите причину посолиднее";
	КонецЕсли;
	
КонецПроцедуры

