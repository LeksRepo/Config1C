
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	РазличныеПодразделения = Подразделение <> ПодразделениеПолучатель;
	
	СчетДт = ?(ТипЗнч(СчетПолучателя) = Тип("СправочникСсылка.Кассы"), ПланыСчетов.Управленческий.Касса, ПланыСчетов.Управленческий.РасчетныйСчет);
	СчетКт = ?(ТипЗнч(Счет) = Тип("СправочникСсылка.Кассы"), ПланыСчетов.Управленческий.Касса, ПланыСчетов.Управленческий.РасчетныйСчет);
	
	Если РазличныеПодразделения Тогда
		Если ПередачаПрибыли Тогда
			СформироватьДвижениеПередачаПрибыли(СчетДт, СчетКт);
		Иначе
			СформироватьДвижениеДенегВРазныхПодразделенях(СчетДт, СчетКт);
		КонецЕсли;
	Иначе
		СформироватьДвижениеДенегВОдномПодразделении(СчетДт, СчетКт);
	КонецЕсли;
	
	Движения.Управленческий.Записывать = Истина;
	
КонецПроцедуры

Функция СформироватьДвижениеДенегВОдномПодразделении(СчетДт, СчетКт)
	
	Проводки = СоздатьПроводку(Подразделение);
	
	Проводки.СчетКт = СчетКт;
	Проводки.СубконтоКт[СчетКт.ВидыСубконто[1].ВидСубконто] = Счет;
	Проводки.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДДС] = СтатьяДДС;
	
	Проводки.СчетДт = СчетДт;
	Проводки.СубконтоДт[СчетДт.ВидыСубконто[1].ВидСубконто] = СчетПолучателя;
	Проводки.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДДС] = СтатьяДДСПолучателя;
	
КонецФункции

Функция СформироватьДвижениеДенегВРазныхПодразделенях(СчетДт, СчетКт);
	
	Проводки = СоздатьПроводку(Подразделение);
	
	Проводки.СчетКт = СчетКт;
	Проводки.СубконтоКт[СчетКт.ВидыСубконто[1].ВидСубконто] = Счет;
	Проводки.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДДС] = СтатьяДДС;
	
	Проводки.СчетДт = ПланыСчетов.Управленческий.ВзаиморасчетыСПодразделениями;
	Проводки.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Подразделения] = ПодразделениеПолучатель;
	
	Проводки = СоздатьПроводку(ПодразделениеПолучатель);
	
	Проводки.СчетДт = СчетДт;
	Проводки.СубконтоДт[СчетДт.ВидыСубконто[1].ВидСубконто] = СчетПолучателя;
	Проводки.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДДС] = СтатьяДДСПолучателя;
	
	Проводки.СчетКт = ПланыСчетов.Управленческий.ВзаиморасчетыСПодразделениями;
	Проводки.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Подразделения] = Подразделение;
	
КонецФункции

Функция СформироватьДвижениеПередачаПрибыли(СчетДт, СчетКт);
	
	Проводки = СоздатьПроводку(Подразделение);
	
	Проводки.СчетКт = СчетКт;
	Проводки.СубконтоКт[СчетКт.ВидыСубконто[1].ВидСубконто] = Счет;
	Проводки.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДДС] = СтатьяДДС;
	
	Проводки.СчетДт = ПланыСчетов.Управленческий.Расходы;
	Проводки.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] = Справочники.СтатьиДоходовРасходов.РасходыНаСопровождениеТехнологии;
	
	Проводки = СоздатьПроводку(ПодразделениеПолучатель);
	
	Проводки.СчетДт = СчетДт;
	Проводки.СубконтоДт[СчетДт.ВидыСубконто[1].ВидСубконто] = СчетПолучателя;
	Проводки.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДДС] = СтатьяДДСПолучателя;
	
	Проводки.СчетКт = ПланыСчетов.Управленческий.Доходы;
	Проводки.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] =Справочники.СтатьиДоходовРасходов.ДоходыОтСопровожденияТехнологии;
	
КонецФункции

Функция СоздатьПроводку(фПодразделение)
		
	Проводки = Движения.Управленческий.Добавить();
	Проводки.Подразделение = фПодразделение;
	Проводки.Период = Дата;
	Проводки.Сумма = Сумма;
	
	Возврат Проводки;
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДатыЗапретаИзменения.ПроверитьДатуЗапретаИзмененияПередЗаписьюДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	ПередачаПрибыли = ПередачаПрибыли И ПодразделениеПолучатель.ВидПодразделения = Перечисления.ВидыПодразделений.Управление;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ПередачаПрибыли = Ложь;
	
КонецПроцедуры
