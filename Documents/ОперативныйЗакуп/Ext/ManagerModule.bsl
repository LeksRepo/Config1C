
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка) Экспорт
	
	ЛексСервер.ПолучитьПредставлениеДокумента(Данные, Представление, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПечатьОперативныйЗакуп(ТабДок, Ссылка) Экспорт
	
	ФормСтрока = "Л = ru_RU; ДП = Истина";
	ПарПредмета="рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 0";
	
	Макет = Документы.ОперативныйЗакуп.ПолучитьМакет("ПечатьОперативныйЗакуп");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСписокНоменклатурыШапка = Макет.ПолучитьОбласть("СписокНоменклатурыШапка");
	ОбластьСписокНоменклатуры = Макет.ПолучитьОбласть("СписокНоменклатуры");
	ОбластьКонтрагент = Макет.ПолучитьОбласть("Контрагент");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	ПодЗаказЗаголовок = Макет.ПолучитьОбласть("ПодЗаказЗаголовок");
	ПодЗаказШапка = Макет.ПолучитьОбласть("ПодЗаказШапка");
	ПодЗаказСтрока = Макет.ПолучитьОбласть("ПодЗаказСтрока");
	ПодЗаказЗаголовокВнеГрупп = Макет.ПолучитьОбласть("ПодЗаказЗаголовокВнеГрупп");
	
	ТабДок.Очистить();
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСправа = 1;
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСнизу = 5;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Ссылка.Ссылка КАК Ссылка,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Ссылка.Автор,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Ссылка.Дата,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Ссылка.Подразделение,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Ссылка.СуммаДокумента,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Ссылка.Коментарий,
	|	ВЫБОР
	|		КОГДА ОперативныйЗакупСписокНоменклатурыПодЗаказ.Поставщик ЕСТЬ NULL 
	|				ИЛИ ОперативныйЗакупСписокНоменклатурыПодЗаказ.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ""Не Указан""
	|		ИНАЧЕ ОперативныйЗакупСписокНоменклатурыПодЗаказ.Поставщик
	|	КОНЕЦ КАК Поставщик,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Номенклатура,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Количество,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.ЕдиницаИзмерения,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Стоимость,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.НомерСтроки,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Ссылка.Номер,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.КоличествоСрочно,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.СтоимостьСрочно,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Спецификация КАК Спецификация,
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Комментарий,
	|	ВЫБОР
	|		КОГДА ОперативныйЗакупСписокНоменклатурыПодЗаказ.ЗакупОптом
	|			ТОГДА ""Да""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЗакупОптом,
	|	ВЫБОР
	|		КОГДА ОперативныйЗакупСписокНоменклатурыПодЗаказ.Количество <> 0
	|			ТОГДА ОперативныйЗакупСписокНоменклатурыПодЗаказ.Стоимость / ОперативныйЗакупСписокНоменклатурыПодЗаказ.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПлановаяЦена
	|ИЗ
	|	Документ.ОперативныйЗакуп.СписокНоменклатурыПодЗаказ КАК ОперативныйЗакупСписокНоменклатурыПодЗаказ
	|ГДЕ
	|	ОперативныйЗакупСписокНоменклатурыПодЗаказ.Ссылка В(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Поставщик,
	|	Спецификация";
	
	ТЗПодЗаказ = Запрос.Выполнить().Выгрузить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОперативныйЗакупСписокНоменклатуры.Ссылка.Ссылка КАК Ссылка,
	|	ОперативныйЗакупСписокНоменклатуры.Ссылка.Автор,
	|	ОперативныйЗакупСписокНоменклатуры.Ссылка.Дата,
	|	ОперативныйЗакупСписокНоменклатуры.Ссылка.Подразделение,
	|	ОперативныйЗакупСписокНоменклатуры.Ссылка.СуммаДокумента,
	|	ОперативныйЗакупСписокНоменклатуры.Ссылка.Коментарий,
	|	ВЫБОР
	|		КОГДА ОперативныйЗакупСписокНоменклатуры.Поставщик ЕСТЬ NULL 
	|				ИЛИ ОперативныйЗакупСписокНоменклатуры.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ""Не Указан""
	|		ИНАЧЕ ОперативныйЗакупСписокНоменклатуры.Поставщик
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ОперативныйЗакупСписокНоменклатуры.Поставщик ЕСТЬ NULL 
	|				ИЛИ ОперативныйЗакупСписокНоменклатуры.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПустойПоставщик,
	|	ОперативныйЗакупСписокНоменклатуры.Номенклатура,
	|	ОперативныйЗакупСписокНоменклатуры.Количество,
	|	ОперативныйЗакупСписокНоменклатуры.ЕдиницаИзмерения,
	|	ОперативныйЗакупСписокНоменклатуры.Стоимость,
	|	ОперативныйЗакупСписокНоменклатуры.НомерСтроки,
	|	ОперативныйЗакупСписокНоменклатуры.Ссылка.Номер,
	|	ОперативныйЗакупСписокНоменклатуры.КоличествоСрочно,
	|	ОперативныйЗакупСписокНоменклатуры.СтоимостьСрочно,
	|	ВЫБОР
	|		КОГДА ОперативныйЗакупСписокНоменклатуры.ЗакупОптом
	|			ТОГДА ""Да""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЗакупОптом,
	|	ВЫБОР
	|		КОГДА ОперативныйЗакупСписокНоменклатуры.Количество <> 0
	|			ТОГДА ОперативныйЗакупСписокНоменклатуры.Стоимость / ОперативныйЗакупСписокНоменклатуры.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПлановаяЦена
	|ИЗ
	|	Документ.ОперативныйЗакуп.СписокНоменклатуры КАК ОперативныйЗакупСписокНоменклатуры
	|ГДЕ
	|	ОперативныйЗакупСписокНоменклатуры.Ссылка В(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПустойПоставщик,
	|	Поставщик.Наименование
	|ИТОГИ ПО
	|	Ссылка,
	|	Поставщик";
	
	ВыборкаПоПоставщикам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НомерСтроки = 1;
	
	Пока ВыборкаПоПоставщикам.Следующий() Цикл
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(ВыборкаПоПоставщикам);
		ТабДок.Вывести(Шапка);
		
		ВыборкаПоставщик = ВыборкаПоПоставщикам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоставщик.Следующий() Цикл

			ОбластьКонтрагент.Параметры.Заполнить(ВыборкаПоставщик);
	
			ВыборкаДетальныеЗаписи = ВыборкаПоставщик.Выбрать();
			
			ПерваяЗапись = Истина;
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				ОбластьСписокНоменклатуры.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
				ОбластьСписокНоменклатуры.Параметры.НомерСтроки = НомерСтроки;
				
				Если ПерваяЗапись Тогда
					
					ПерваяЗапись = Ложь;
										
					ДляПроверкиВывода = Новый Массив;
					ДляПроверкиВывода.Добавить(ОбластьКонтрагент); 
					ДляПроверкиВывода.Добавить(ОбластьСписокНоменклатурыШапка);
					ДляПроверкиВывода.Добавить(ОбластьСписокНоменклатуры);
					
					Пока НЕ ТабДок.ПроверитьВывод(ДляПроверкиВывода) Цикл
						ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
					КонецЦикла;
					
					ТабДок.Вывести(ОбластьКонтрагент);
					ТабДок.Вывести(ОбластьСписокНоменклатурыШапка);
					
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьСписокНоменклатуры);
				
				НомерСтроки = НомерСтроки +1;
				
			КонецЦикла;
			
			ПерваяЗапись = Истина;
			Сч = 0;
			
			Пока Сч < ТЗПодЗаказ.Количество() Цикл
				
				Строка = ТЗПодЗаказ[Сч];
				
				Если ВыборкаПоставщик.Поставщик = Строка.Поставщик Тогда
					
					Если ПерваяЗапись Тогда

						ТабДок.Вывести(ПодЗаказЗаголовок);
						ТабДок.Вывести(ПодЗаказШапка);
						ПерваяЗапись = Ложь;
						
					КонецЕсли;
										
					ПодЗаказСтрока.Параметры.Заполнить(Строка);
					ПодЗаказСтрока.Параметры.НомерСтроки = НомерСтроки;
					ПодЗаказСтрока.Параметры.Спецификация = Формат(Строка.Спецификация, "ЧВН=; ЧГ=0");
					ТабДок.Вывести(ПодЗаказСтрока);
					
					НомерСтроки = НомерСтроки + 1;
					
					ТЗПодЗаказ.Удалить(Строка);
					
				Иначе
					
					Сч = Сч + 1;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Пока ТЗПодЗаказ.Количество() > 0 Цикл
		
		    Поставщик = ТЗПодЗаказ[0].Поставщик;
			Сч = 0;
			ПерваяЗапись = Истина;
			
			ОбластьКонтрагент.Параметры.Поставщик = Поставщик;
			
			Пока Сч < ТЗПодЗаказ.Количество() Цикл
				
				Строка = ТЗПодЗаказ[Сч];
				
				Если Поставщик = Строка.Поставщик Тогда
					
					ПодЗаказСтрока.Параметры.Заполнить(Строка);
					ПодЗаказСтрока.Параметры.НомерСтроки = НомерСтроки;
					ПодЗаказСтрока.Параметры.Спецификация = Формат(Строка.Спецификация, "ЧВН=; ЧГ=0");
					
					Если ПерваяЗапись Тогда
						
						ПерваяЗапись = Ложь;
						
						ДляПроверкиВывода = Новый Массив;
						ДляПроверкиВывода.Добавить(ОбластьКонтрагент); 
						ДляПроверкиВывода.Добавить(ПодЗаказЗаголовокВнеГрупп);
						ДляПроверкиВывода.Добавить(ПодЗаказШапка);
						ДляПроверкиВывода.Добавить(ПодЗаказСтрока);
						
						Пока НЕ ТабДок.ПроверитьВывод(ДляПроверкиВывода) Цикл
							ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
						КонецЦикла;
						
						ТабДок.Вывести(ОбластьКонтрагент);
						ТабДок.Вывести(ПодЗаказЗаголовокВнеГрупп);
						ТабДок.Вывести(ПодЗаказШапка);
						
					КонецЕсли;
	
					ТабДок.Вывести(ПодЗаказСтрока);
					НомерСтроки = НомерСтроки +1;
					
					ТЗПодЗаказ.Удалить(Строка);
					
				Иначе
					
					Сч = Сч + 1;
					
				КонецЕсли;
				
			КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОперативныйЗакуп.СуммаДокумента
	|ИЗ
	|	Документ.ОперативныйЗакуп КАК ОперативныйЗакуп
	|ГДЕ
	|	ОперативныйЗакуп.Ссылка В(&Ссылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Подвал.Параметры.ИтогСтоимостьПрописью = " "+Выборка.СуммаДокумента+" руб. ( "+ЧислоПрописью(Выборка.СуммаДокумента,"Л=ru_RU; ДП=Ложь","рубль, рубля, рублей, м, копейка, копейки, копеек, ж")+" )";	
	ТабДок.Вывести(Подвал);
	
КонецПроцедуры