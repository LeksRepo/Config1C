
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ТабДок = ПечатьИнкассации(МассивОбъектов, ОбъектыПечати);
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Инкассация", "Инкассация", ТабДок,, "Документ.Инкассация.Инкассация");
	ТабДок.АвтоМасштаб = Истина;
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

Функция ПечатьИнкассации(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДокИнкассация = Новый ТабличныйДокумент;
	
	Макет = Документы.Инкассация.ПолучитьМакет("Инкассация");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Платежи = Макет.ПолучитьОбласть("Платежи");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Разрез = Макет.ПолучитьОбласть("Разрез");
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Инкассация.Дата КАК КонецПериода,
	|	Инкассация.Ссылка,
	|	Инкассация.Подразделение,
	|	Инкассация.Инкассатор,
	|	Инкассация.Номер,
	|	Инкассация.ОперационнаяКасса,
	|	Инкассация.ПериодНачало КАК НачалоПериода,
	|	Инкассация.СуммаДокумента,
	|	Инкассация.СписокДокументов.(
	|		НомерСтроки,
	|		Регистратор,
	|		Основание,
	|		Принято,
	|		Выдано
	|	),
	|	Инкассация.Офис
	|ИЗ
	|	Документ.Инкассация КАК Инкассация
	|ГДЕ
	|	Инкассация.Ссылка В(&Ссылка)
	|	И Инкассация.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Инкассация.Дата";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		
		ТабДокИнкассация.Очистить();
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		СальдоНачальное = ЛексСервер.ПолучитьОстатокОперационнойКассыНаДату(Выборка.НачалоПериода, Выборка.ОперационнаяКасса, Выборка.Подразделение);
		ИтогоПринято = Выборка.Ссылка.СписокДокументов.Итог("Принято"); //// ааааааааааааа
		ИтогоВыдано = Выборка.Ссылка.СписокДокументов.Итог("Выдано");
		СальдоКонечное = СальдоНачальное + ИтогоПринято -ИтогоВыдано - Выборка.СуммаДокумента;
		
		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.Номер = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Выборка.Номер, "0");
		Шапка.Параметры.НачалоПериода = Формат(Выборка.НачалоПериода, "ДЛФ=DD");
		Шапка.Параметры.КонецПериода = Формат(Выборка.КонецПериода, "ДЛФ=DD");
		Шапка.Параметры.СальдоНачальное = СальдоНачальное;
		
		ТабДокИнкассация.Вывести(Шапка, Выборка.Уровень());
		
		ВыборкаСписокДокументов = Выборка.СписокДокументов.Выбрать();
		Пока ВыборкаСписокДокументов.Следующий() Цикл
			Платежи.Параметры.Заполнить(ВыборкаСписокДокументов);
			Если НЕ ЗначениеЗаполнено(ВыборкаСписокДокументов.Основание) И ТипЗнч(ВыборкаСписокДокументов.Регистратор) = Тип("ДокументСсылка.ПриходДенежныхСредств") Тогда
				Платежи.Параметры.Основание = "Аванс";
			КонецЕсли;
			ТабДокИнкассация.Вывести(Платежи, ВыборкаСписокДокументов.Уровень());
		КонецЦикла;
		
		Подвал.Параметры.Заполнить(Выборка);
		Подвал.Параметры.НачалоПериода = Формат(Выборка.НачалоПериода, "ДЛФ=DD");
		Подвал.Параметры.КонецПериода = Формат(Выборка.КонецПериода, "ДЛФ=DD");
		Подвал.Параметры.СуммаПрописью = ЧислоПрописью(Выборка.СуммаДокумента, , "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
		Подвал.Параметры.СальдоКонечное = СальдоКонечное;
		Подвал.Параметры.ИтогПринято = ИтогоПринято;
		Подвал.Параметры.ИтогВыдано = ИтогоВыдано;
		
		ТабДокИнкассация.Вывести(Подвал);
		
		ТабДок.Вывести(ТабДокИнкассация);
		ТабДок.Вывести(Разрез);
		ТабДок.Вывести(ТабДокИнкассация);
		
		ВставлятьРазделительСтраниц = Истина;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ЛексСервер.ПолучитьПредставлениеДокумента(Данные, Представление, СтандартнаяОбработка);
	
КонецПроцедуры
