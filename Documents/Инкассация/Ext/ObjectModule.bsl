Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.Управленческий.Записать();
	
	СчетОперационнаяКасса = ПланыСчетов.Управленческий.ОперационнаяКасса;
	ПВХФизическиеЛица = ПланыВидовХарактеристик.ВидыСубконто.ФизическиеЛица;
	ПВХСтатьиДДС = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДДС;
	
	//Блокировка
	
	// Проверка остатка
	
	Проводки = Движения.Управленческий.Добавить();
	Проводки.Период = Дата;
	Проводки.Подразделение = Подразделение;
	Проводки.Сумма = СуммаДокумента;
	Проводки.СчетДт = СчетОперационнаяКасса;
	Проводки.СубконтоДт[ПВХФизическиеЛица] = Инкассатор;
	Проводки.СубконтоДт[ПВХСтатьиДДС] = Справочники.СтатьиДвиженияДенежныхСредств.ПоступленияИнкассации;
	
	Проводки.СчетКт = СчетОперационнаяКасса;
	Проводки.СубконтоКт[ПВХФизическиеЛица] = ОперационнаяКасса;
	Проводки.СубконтоКт[ПВХСтатьиДДС] = Справочники.СтатьиДвиженияДенежныхСредств.ВыплатаИнкассации;
	
	//// блокировка
	//Блокировка = Новый БлокировкаДанных;
	//ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОперационнаяКасса");
	//ЭлементБлокировки.УстановитьЗначение("Сотрудник", ОперационнаяКасса);
	//ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	//Блокировка.Заблокировать();
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	ОперационнаяКассаОстатки.СуммаОстаток
	//|ИЗ
	//|	РегистрНакопления.ОперационнаяКасса.Остатки(&МоментВремени, Сотрудник = &ОперационнаяКасса И Подразделение = &Подразделение) КАК ОперационнаяКассаОстатки";
	//
	//Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	//Запрос.УстановитьПараметр("ОперационнаяКасса", ОперационнаяКасса);
	//Запрос.УстановитьПараметр("Подразделение", Подразделение);
	//Результат = Запрос.Выполнить();
	//
	//ОстатокВКассе = 0;
	//Если не Результат.Пустой() Тогда
	//	Выборка = Результат.Выбрать();
	//	Выборка.Следующий();
	//	ОстатокВКассе = Выборка.СуммаОстаток;
	//КонецЕсли;
	//
	//Если ОстатокВКассе < СуммаДокумента Тогда
	//	Сообщение = Новый СообщениеПользователю;
	//	ТекстСообщения = "У сотрудника %1 есть всего %2 из требуемых %3 денежных средств.";
	//	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ОперационнаяКасса);
	//	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2", ОстатокВКассе);
	//	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%3", СуммаДокумента);
	//	
	//	Сообщение.Текст = ТекстСообщения;
	//	Сообщение.Поле = "СуммаДокумента";
	//	Сообщение.УстановитьДанные(ЭтотОбъект);
	//	Сообщение.Сообщить();
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли;
	//
	//// Приход на Инкассатор
	//Движение = Движения.ОперационнаяКасса.Добавить();
	//Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	//Движение.Период = Дата;
	//Движение.Подразделение = Подразделение;
	//Движение.Сотрудник = Инкассатор;
	//Движение.Сумма = СуммаДокумента;
	//
	//// Расход с Операционной кассы
	//Движение = Движения.ОперационнаяКасса.Добавить();
	//Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	//Движение.Период = Дата;
	//Движение.Подразделение = Подразделение;
	//Движение.Сотрудник = ОперационнаяКасса;
	//Движение.Сумма = СуммаДокумента;
	//
	Если НЕ Отказ Тогда
		Движения.Управленческий.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ОперационнаяКасса = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
	//Офис = ОбщегоНазначения.ПолучитьПараметрСеанса("ТекущийОфис");	
	//Подразделение = ОбщегоНазначения.ПолучитьПараметрСеанса("ТекущееПодразделение");
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ДатыЗапретаИзменения.ПроверитьДатуЗапретаИзмененияПередЗаписьюДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

