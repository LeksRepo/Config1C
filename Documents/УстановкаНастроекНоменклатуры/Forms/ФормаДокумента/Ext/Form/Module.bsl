
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Дата = ТекущаяДата();
	КонецЕсли;
	
	Элементы.СписокНоменклатуры.Доступность = ЗначениеЗаполнено(Объект.Подразделение);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыОсновнаяПоСкладуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.СписокНоменклатуры.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда	
		ДанныеВыбора = ПолучитьСписокНоменклатуры(ТекущиеДанные.Номенклатура);		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокНоменклатуры(фнНоменклатура)
	
	СписокЗначений = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("БазоваяНоменклатура", фнНоменклатура);
	Запрос.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	(Номенклатура.БазоваяНоменклатура = &БазоваяНоменклатура
	|			ИЛИ Номенклатура.Ссылка = &БазоваяНоменклатура)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Таблица = РезультатЗапроса.Выгрузить();
	Массив = Таблица.ВыгрузитьКолонку("Номенклатура");
	СписокЗначений.ЗагрузитьЗначения(Массив);
	
	Возврат СписокЗначений;
	
КонецФункции

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
		
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокНоменклатуры.ТекущиеДанные;
		
	Стр = ПолучитьНастройкиНоменклатуры(ТекущиеДанные.Номенклатура,Объект.Подразделение);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Стр);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНастройкиНоменклатуры(Номенклатура, Подразделение)
	
	Стр = Новый Структура();
	Стр.Вставить("АдресХранения", "");
	Стр.Вставить("ДнейНаИзготовление", 0);
	Стр.Вставить("ЗакупОптом", Ложь);
	Стр.Вставить("МожетПредоставитьЗаказчик", Ложь);
	Стр.Вставить("ОкруглятьДоЛистов", Ложь);
	Стр.Вставить("ОсновнаяПоСкладу", Неопределено);
	Стр.Вставить("ПлановаяЗакупочная", 0);
	Стр.Вставить("ПодЗаказ", Ложь);
	Стр.Вставить("Поставщик", Неопределено);
	Стр.Вставить("Розничная", 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(Данные.АдресХранения, """") КАК АдресХранения,
	|	ЕСТЬNULL(Данные.ДнейНаИзготовление, 0) КАК ДнейНаИзготовление,
	|	ЕСТЬNULL(Данные.ЗакупОптом, ЛОЖЬ) КАК ЗакупОптом,
	|	ЕСТЬNULL(Данные.МожетПредоставитьЗаказчик, ЛОЖЬ) КАК МожетПредоставитьЗаказчик,
	|	ЕСТЬNULL(Данные.ОкруглятьДоЛистов, ЛОЖЬ) КАК ОкруглятьДоЛистов,
	|	ЕСТЬNULL(Данные.ОсновнаяПоСкладу, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК ОсновнаяПоСкладу,
	|	ЕСТЬNULL(Данные.ПлановаяЗакупочная, 0) КАК ПлановаяЗакупочная,
	|	ЕСТЬNULL(Данные.ПодЗаказ, ЛОЖЬ) КАК ПодЗаказ,
	|	ЕСТЬNULL(Данные.Поставщик, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Поставщик,
	|	ЕСТЬNULL(Данные.Розничная, 0) КАК Розничная
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНом
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиНоменклатуры.СрезПоследних(, Подразделение = &Подразделение) КАК Данные
	|		ПО СпрНом.Ссылка = Данные.Номенклатура
	|ГДЕ
	|	СпрНом.Ссылка = &Номенклатура";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Стр,Выборка);

	КонецЕсли;
	
	Возврат Стр;
	
КонецФункции

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	Элементы.СписокНоменклатуры.Доступность = ЗначениеЗаполнено(Объект.Подразделение);
	Объект.СписокНоменклатуры.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПустыми(Команда)
	
	Для Каждого Строка ИЗ Объект.СписокНоменклатуры Цикл
		
		Строка.АдресХранения = "";
		Строка.ДнейНаИзготовление = 0;
		Строка.ЗакупОптом = Ложь;
		Строка.МожетПредоставитьЗаказчик = Ложь;
		Строка.ОкруглятьДоЛистов = Ложь;
		Строка.ОсновнаяПоСкладу = Неопределено;
		Строка.ПлановаяЗакупочная = 0;
		Строка.ПодЗаказ = Ложь;
		Строка.Поставщик = Неопределено;
		Строка.Розничная = 0;
		Строка.Комментарий = "";
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГруппой(Команда)
	
	Группа = ОткрытьФормуМодально("Справочник.Номенклатура.ФормаВыбораГруппы");
	
	Если ЗначениеЗаполнено(Группа) Тогда
		
		Если Объект.СписокНоменклатуры.Количество() > 0 
			И КодВозвратаДиалога.Нет = Вопрос("Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 0) Тогда
			
			Возврат;
			
		КонецЕсли;
		
		Объект.СписокНоменклатуры.Очистить();
		ЗаполнитьСписок(Группа);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСписок(ГруппаНоменклатуры)
	
	Если ГруппаНоменклатуры = Неопределено Тогда
		ГруппаНоменклатуры = Справочники.Номенклатура.ПустаяСсылка();
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", ГруппаНоменклатуры);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(Данные.АдресХранения, """") КАК АдресХранения,
	|	ЕСТЬNULL(Данные.ДнейНаИзготовление, 0) КАК ДнейНаИзготовление,
	|	ЕСТЬNULL(Данные.ЗакупОптом, ЛОЖЬ) КАК ЗакупОптом,
	|	ЕСТЬNULL(Данные.МожетПредоставитьЗаказчик, ЛОЖЬ) КАК МожетПредоставитьЗаказчик,
	|	ЕСТЬNULL(Данные.ОкруглятьДоЛистов, ЛОЖЬ) КАК ОкруглятьДоЛистов,
	|	ЕСТЬNULL(Данные.ОсновнаяПоСкладу, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК ОсновнаяПоСкладу,
	|	ЕСТЬNULL(Данные.ПлановаяЗакупочная, 0) КАК ПлановаяЗакупочная,
	|	ЕСТЬNULL(Данные.ПодЗаказ, ЛОЖЬ) КАК ПодЗаказ,
	|	ЕСТЬNULL(Данные.Поставщик, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Поставщик,
	|	ЕСТЬNULL(Данные.Розничная, 0) КАК Розничная
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиНоменклатуры.СрезПоследних(, Подразделение = &Подразделение) КАК Данные
	|		ПО (Данные.Номенклатура = СпрНоменклатура.Ссылка)
	|ГДЕ
	|	НЕ СпрНоменклатура.ЭтоГруппа
	|	И СпрНоменклатура.Базовый
	|	И СпрНоменклатура.Родитель В ИЕРАРХИИ(&Родитель)
	|	И НЕ СпрНоменклатура.ПометкаУдаления
	|	И НЕ СпрНоменклатура.ЗапретИспользования
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпрНоменклатура.Наименование";
	
	Результат = Запрос.Выполнить();
	Объект.СписокНоменклатуры.Загрузить(Результат.Выгрузить());
	
КонецФункции

&НаКлиенте
Процедура УмножитьПлановую(Команда)
	
	Множитель = ПолучитьМножитель();
	УмножитьЦену(Множитель, "ПлановаяЗакупочная");
	
КонецПроцедуры

&НаКлиенте
Процедура УмножитьРозничную(Команда)
	
	Множитель = ПолучитьМножитель();
	УмножитьЦену(Множитель, "Розничная");
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМножитель()
	
	Множитель = 1.00;
	ВвестиЧисло(Множитель, "Введите множитель", 5, 2);
	
	Возврат Множитель;
	
КонецФункции

&НаСервере
Функция УмножитьЦену(Множитель, Поле)
	
	Для каждого Строка Из Объект.СписокНоменклатуры Цикл
		Строка[Поле] = Строка[Поле] * Множитель;
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Перем Ошибки;
	
	НеЗаполнено = Ложь;
	ЛимитВыводимыхОшибок = 10;
	Индекс = 0;
	ШаблонТекстОшибки = "%1 не заполнена %2 цена";
	
	Для Каждого Элемент Из Объект.СписокНоменклатуры Цикл
		
		Если Элемент.ПлановаяЗакупочная = 0
			ИЛИ Элемент.Розничная = 0 Тогда
			
			НеЗаполнено = Истина;
			
			Если Элемент.ПлановаяЗакупочная = 0 Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстОшибки, Элемент.Номенклатура, "плановая");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ПлановаяЗакупочная", ТекстОшибки,,Элемент.НомерСтроки);
			КонецЕсли;
			
			Если Элемент.Розничная = 0 Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстОшибки, Элемент.Номенклатура, "розничная");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Розничная", ТекстОшибки,,Элемент.НомерСтроки);
			КонецЕсли;
			
			Индекс = Индекс+1;
			
			Если Индекс > ЛимитВыводимыхОшибок Тогда
				Прервать;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Индекс > ЛимитВыводимыхОшибок Тогда
		ТекстВопроса = "В документе более " + ЛимитВыводимыхОшибок + " строк с незаполненной ценой.";
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
		ТекстВопроса = "В документе есть номенклатура с незаполненной ценой.";
	КонецЕсли;
	
	ТекстВопроса = ТекстВопроса  + Символы.ПС + "Вы уверены что хотите продолжить?";
	
	Если НеЗаполнено И КодВозвратаДиалога.Нет = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0) Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры
