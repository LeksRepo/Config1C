
&НаКлиенте
Процедура ЗаполнитьОстаткамиПоСкладу(Команда)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Табличная часть будет отчищена." + Символы.ВК + "Продолжить?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ОБъект.Материалы.Очистить();
	ЗаполнитьТЗОстатками();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЗОстатками()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МатериалыНаСкладахОстатки.Номенклатура,
	|	МатериалыНаСкладахОстатки.ЕдиницаХранения,
	|	ЕСТЬNULL(МатериалыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(МатериалыНаСкладахОстатки.СтоимостьОстаток, 0) КАК СтоимостьОстаток,
	|	МатериалыНаСкладахОстатки.Номенклатура.Родитель КАК Родитель
	|ИЗ
	|	РегистрНакопления.МатериалыНаСкладах.Остатки(&Дата, Склад = &Склад) КАК МатериалыНаСкладахОстатки";
	
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Материалы.Добавить();
		НоваяСтрока.Номенклатура = Выборка.Номенклатура;
		НоваяСтрока.КоличествоУчетное = Выборка.КоличествоОстаток;
		НоваяСтрока.Отклонение = -Выборка.КоличествоОстаток;
		Если Выборка.КоличествоОстаток <> 0 Тогда
			НоваяСтрока.Цена = Выборка.СтоимостьОстаток / Выборка.КоличествоОстаток;
		Иначе
			НоваяСтрока.Цена = -1;
		КонецЕсли;
		НоваяСтрока.Стоимость = Выборка.СтоимостьОстаток;
		НоваяСтрока.ЕдиницаХранения = Выборка.ЕдиницаХранения;
		НоваяСтрока.Родитель = Выборка.Родитель;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФактическиеДанныеУчетными(Команда)
	
	Для каждого ы Из Объект.Материалы Цикл
		
		Ы.КоличествоФакт = Ы.КоличествоУчетное;
		Ы.Отклонение = 0;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыНоменклатураПриИзменении(Элемент)
	ОбновитьОстатокСтоимость();
КонецПроцедуры

&НаКлиенте
Процедура МатериалыЕдиницаХраненияПриИзменении(Элемент)
	ОбновитьОстатокСтоимость();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОстатокСтоимость()
	
	Стр = Элементы.Материалы.ТекущиеДанные;
	Если ЗначениеЗаполнено(Стр.Номенклатура)
	   И ЗначениеЗаполнено(Стр.ЕдиницаХранения) Тогда
	   
		Остатки = ПолучитьОстатокСтоимость(Стр.Номенклатура, Стр.ЕдиницаХранения, Объект.Склад, Объект.Дата);
		Стр.КоличествоУчетное = Остатки.КоличествоОстаток;
		Стр.Стоимость = Остатки.СтоимостьОстаток;
		Если Остатки.КоличествоОстаток <> 0 Тогда
			Цена = Остатки.СтоимостьОстаток / Остатки.КоличествоОстаток;
		Иначе
			Цена = 0;
		КонецЕсли;
		Стр.Цена = Цена;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОстатокСтоимость(Номенклатура, ЕдиницаХранения, Склад, Дата)
	
	Ответ = Новый Структура;
	Ответ.Вставить("КоличествоОстаток");
	Ответ.Вставить("СтоимостьОстаток");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МатериалыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(МатериалыНаСкладахОстатки.СтоимостьОстаток, 0) КАК СтоимостьОстаток
	|ИЗ
	|	РегистрНакопления.МатериалыНаСкладах.Остатки(
	|			&Дата,
	|			Номенклатура = &Номенклатура
	|				И Склад = &Склад
	|				И ЕдиницаХранения = &ЕдиницаХранения) КАК МатериалыНаСкладахОстатки";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ЕдиницаХранения", ЕдиницаХранения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Ответ.КоличествоОстаток = Выборка.КоличествоОстаток;
		Ответ.СтоимостьОстаток = Выборка.СтоимостьОстаток;
		
	КонецЕсли;
	Возврат Ответ;
	
КонецФункции

&НаКлиенте
Процедура МатериалыПриИзменении(Элемент)
	
	Стр = Элементы.Материалы.ТекущиеДанные;
	Стр.Отклонение = Стр.КоличествоФакт - Стр.КоличествоУчетное;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	ПодпискиНаСобытия.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры
