
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка) Экспорт
	
	ЛексСервер.ПолучитьПредставлениеДокумента(Данные, Представление, СтандартнаяОбработка);
	
КонецПроцедуры

Функция ПолучитьКомплектацию(СсылкаСпецификация) Экспорт
	
	МассивДокументов = ЛексСервер.НайтиПодчиненныеДокументы(СсылкаСпецификация, "Документ.Комплектация", "Спецификация");
	Если МассивДокументов.Количество() = 1 Тогда
		Возврат МассивДокументов[0];
	ИначеЕсли МассивДокументов.Количество() = 0 Тогда
		Возврат Документы.Договор.ПустаяСсылка();
	Иначе
		ВызватьИсключение "Ошибка 795: Нарушена связь ""Спецификации"" и документа ""Комплектация""";
	КонецЕсли;
	
КонецФункции

Функция ПечатьКомплектации(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок 										= Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати 	= "ПараметрыПечати_РасходныйКассовыйОрдер";
	ТабДок.АвтоМасштаб 					= Истина;
	ТабДок.ОтображатьСетку 			= Ложь;
	ТабДок.Защита 							= Истина;
	ТабДок.ТолькоПросмотр 				= Истина;
	ТабДок.ОтображатьЗаголовки 		= Ложь;
	Макет 										= Документы.Комплектация.ПолучитьМакет("ПечатьКомплектации");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Комплектация.Автор,
	|	Комплектация.Дата,
	|	Комплектация.Комментарий,
	|	Комплектация.Номер,
	|	Комплектация.Подразделение,
	|	Комплектация.Спецификация,
	|	Комплектация.СписокНоменклатуры.(
	|		НомерСтроки,
	|		Количество,
	|		Номенклатура,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|	),
	|	Комплектация.Ссылка
	|ИЗ
	|	Документ.Комплектация КАК Комплектация
	|ГДЕ
	|	Комплектация.Ссылка В(&МассивДокументов)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок 							= Макет.ПолучитьОбласть("Заголовок");
	Шапка 											= Макет.ПолучитьОбласть("Шапка");
	ОбластьСписокНоменклатурыШапка 	= Макет.ПолучитьОбласть("СписокНоменклатурыШапка");
	ОбластьСписокНоменклатуры 			= Макет.ПолучитьОбласть("СписокНоменклатуры");
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		Если ВставлятьРазделительСтраниц Тогда
			
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьСписокНоменклатурыШапка);
		ВыборкаСписокНоменклатуры = Выборка.СписокНоменклатуры.Выбрать();
		
		Пока ВыборкаСписокНоменклатуры.Следующий() Цикл
			
			ОбластьСписокНоменклатуры.Параметры.Заполнить(ВыборкаСписокНоменклатуры);
			ТабДок.Вывести(ОбластьСписокНоменклатуры, ВыборкаСписокНоменклатуры.Уровень());
			
		КонецЦикла;
		
		ВставлятьРазделительСтраниц = Истина;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьКассовыйОрдер(МассивДокументов, ОбъектыПечати, ИмяМакета) Экспорт
	
	ТабДок 										= Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати 	= "ПараметрыПечати_РасходныйКассовыйОрдер";
	ТабДок.АвтоМасштаб 					= Истина;
	ТабДок.ОтображатьСетку 			= Ложь;
	ТабДок.Защита 							= Ложь;
	ТабДок.ТолькоПросмотр 				= Истина;
	ТабДок.ОтображатьЗаголовки 		= Ложь;
	ФормСтрока 								= "Л = ru_RU; ДП = Истина";
	ПарПредмета 								= "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеремещениеДенежныхСредств.Номер КАК НомерДокумента,
	|	ПеремещениеДенежныхСредств.Дата КАК ДатаДокумента,
	//|	ПеремещениеДенежныхСредств.Автор КАК Сотрудник,
	|	ПеремещениеДенежныхСредств.Подразделение КАК ПодразделениеОтправитель,
	|	ПеремещениеДенежныхСредств.ПодразделениеПолучатель,
	//|	ПеремещениеДенежныхСредств.СтатьяДДС КАК СтатьяДДСОтправитель,
	//|	ПеремещениеДенежныхСредств.СтатьяДДСПолучателя КАК СтатьяДДСПолучатель,
	|	ПеремещениеДенежныхСредств.Сумма КАК Сумма,
	//|	ПеремещениеДенежныхСредств.Счет КАК СубСчет,
	//|	ПеремещениеДенежныхСредств.СчетПолучателя КАК КредитСубСчет,
	|	ПеремещениеДенежныхСредств.Комментарий,
	|	ПеремещениеДенежныхСредств.Подразделение.Организация КАК ОрганизацияОтправитель,
	|	ПеремещениеДенежныхСредств.ПодразделениеПолучатель.Организация КАК ОрганизацияПолучатель,
	|	ПеремещениеДенежныхСредств.Ссылка КАК Основание,
	|	ПеремещениеДенежныхСредств.Подразделение.Руководитель КАК ФИОРуководителя,
	|	ПеремещениеДенежныхСредств.ПодразделениеПолучатель.Руководитель КАК ФИОРуководителяПодразделения
	|ИЗ
	|	Документ.ПеремещениеДенежныхСредств КАК ПеремещениеДенежныхСредств
	|ГДЕ
	|	ПеремещениеДенежныхСредств.Ссылка В(&МассивДокументов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если ИмяМакета = "РасходныйКассовыйОрдер" Тогда
		
		Макет 	= Документы.РасходДенежныхСредств.ПолучитьМакет("РасходныйКассовыйОрдер");
		Шапка 	= Макет.ПолучитьОбласть("Шапка");
		
		ТабДок.Очистить();
		
		ВставлятьРазделительСтраниц = Ложь;
		
		Пока Выборка.Следующий() Цикл
			
			Если ВставлятьРазделительСтраниц Тогда
				
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				
			КонецЕсли;
			
			НомерСтрокиНачало 					= ТабДок.ВысотаТаблицы + 1;
			СуммаПрописью 							= ЧислоПрописью(Выборка.Сумма, ФормСтрока, ПарПредмета);
			ДатаПрописью 							= ЛексКлиентСервер.ДатаПрописью(Выборка.ДатаДокумента);
			//Сотрудник 									= Выборка.Сотрудник;
			ПредставлениеПодразделения 	= Выборка.ПодразделениеОтправитель;
			ПредставлениеОрганизации 		= Выборка.ОрганизацияОтправитель;
			
			Шапка.Параметры.Заполнить(Выборка);
			Шапка.Параметры.СуммаПрописью 						= СуммаПрописью;
			Шапка.Параметры.ПредставлениеОрганизации 		= ПредставлениеОрганизации;
			Шапка.Параметры.ПредставлениеПодразделения 	= ПредставлениеПодразделения;
			Шапка.Параметры.ДатаДокументаПрописью 			= ДатаПрописью;
			Шапка.Параметры.ФИОГлавногоБухгалтера 			= Константы.ГлавныйБухгалтер.Получить();
			Шапка.Параметры.Подразделение 						= ПредставлениеПодразделения;
			//Шапка.Параметры.РеквизитыДокументаУдостоверяющегоЛичность = ?(ТипЗнч(Сотрудник) = Тип("СправочникСсылка.ФизическиеЛица"), Строка(Выборка.ВидДокумента) + " " + 
			//"Серия " + Строка(Выборка.Серия) + " " + "Номер " + Строка(Выборка.Номер) + " " + "Выдан " + Строка(Формат(Выборка.ДатаВыдачи, "ДЛФ=Д")) + " " +
			//Строка(Выборка.КемВыдан), "");
			
			ТабДок.Вывести(Шапка);
			
			ВставлятьРазделительСтраниц = Истина;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Основание);
			
		КонецЦикла;
		
	Иначе
		
		Макет 	= Документы.ПриходДенежныхСредств.ПолучитьМакет("ПриходныйКассовыйОрдер");
		Шапка 	= Макет.ПолучитьОбласть("Шапка");
		
		ТабДок.Очистить();
		
		ВставлятьРазделительСтраниц = Ложь;
		
		Пока Выборка.Следующий() Цикл
			
			Если ВставлятьРазделительСтраниц Тогда
				
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				
			КонецЕсли;
			
			НомерСтрокиНачало 					= ТабДок.ВысотаТаблицы + 1;
			СуммаПрописью 							= ЧислоПрописью(Выборка.Сумма, ФормСтрока, ПарПредмета);
			ДатаПрописью 							= ЛексКлиентСервер.ДатаПрописью(Выборка.ДатаДокумента);
			//Сотрудник 									= Выборка.Сотрудник;
			ПредставлениеПодразделения 	= Выборка.ПодразделениеПолучатель;
			ПредставлениеОрганизации 		= Выборка.ОрганизацияПолучатель;
			
			Шапка.Параметры.Заполнить(Выборка);
			Шапка.Параметры.СуммаПрописью 						= СуммаПрописью;
			Шапка.Параметры.ПредставлениеОрганизации 		= ПредставлениеОрганизации;
			Шапка.Параметры.ПредставлениеПодразделения 	= ПредставлениеПодразделения;
			Шапка.Параметры.ФИОГлавногоБухгалтера 			= Константы.ГлавныйБухгалтер.Получить();
			Шапка.Параметры.Подразделение 						= ПредставлениеПодразделения;
			ТабДок.Вывести(Шапка);
			
			ВставлятьРазделительСтраниц = Истина;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Основание);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТабДок;
	
КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПодготовитьПечатнуюФорму("ПечатьКомплектации", "Комплектация", "Документ.Комплектация.ПечатьКомплектации",
	МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

Процедура ПодготовитьПечатнуюФорму(Знач ИмяМакета, ПредставлениеМакета, ПолныйПутьКМакету = "", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	ТабДок = ПечатьКомплектации(МассивОбъектов, ОбъектыПечати);
		
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета,
	ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
	
КонецПроцедуры
