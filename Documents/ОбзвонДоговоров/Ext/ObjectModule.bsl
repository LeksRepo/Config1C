
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Управленческий.Записывать = Истина;
	
	Для Каждого Строка Из СписокДоговоров Цикл
		
		Если Строка.ОбщаяОценка = Перечисления.Оценки.Претензия Тогда
			
			Если НЕ ЗначениеЗаполнено(Документы.СлужебнаяЗаписка.НайтиПоРеквизиту("Документ", Строка.Договор)) Тогда
				
				НовыйДокумент = Документы.СлужебнаяЗаписка.СоздатьДокумент();
				НовыйДокумент.ВидСлужебнойЗаписки = Перечисления.ВидыСлужебнойЗаписки.ПретензияЗаявление;
				НовыйДокумент.Проблема = Строка.ОбщийКомментарий;
				НовыйДокумент.Адресат = Константы.ГенеральныйДиректор.Получить();
				НовыйДокумент.Тема = "Претензия к " + Строка.Договор;
				НовыйДокумент.Документ = Строка.Договор;
				НовыйДокумент.Дата = ТекущаяДата();
				НовыйДокумент.Автор = Автор;
				НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СформироватьДвиженияОценкиМонтажников();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	
	// переделать на функцию
	// ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю();
	
	Для Каждого Строка Из СписокДоговоров Цикл
		Индекс = Строка.НомерСтроки - 1;
		НомерСтроки = Строка.НомерСтроки;
		
		Если (НЕ ЗначениеЗаполнено(Строка.ОценкаЗамер) И ЗначениеЗаполнено(Строка.КомментарийЗамер)) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "В строке " + НомерСтроки + " не заполнена оценка замер";
			Сообщение.Поле = "СписокДоговоров[" + Индекс + "].ОценкаЗамер";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		
		Если (НЕ ЗначениеЗаполнено(Строка.ОценкаДизайн) И ЗначениеЗаполнено(Строка.КомментарийДизайн)) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "В строке " + НомерСтроки + " не заполнена оценка дизайн";
			Сообщение.Поле = "СписокДоговоров[" + Индекс + "].ОценкаДизайн";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		
		Если (НЕ ЗначениеЗаполнено(Строка.ОценкаДоставка) И ЗначениеЗаполнено(Строка.КомментарийДоставка)) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "В строке " + НомерСтроки + " не заполнена оценка доставка";
			Сообщение.Поле = "СписокДоговоров[" + Индекс + "].ОценкаДоставка";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		
		Если (НЕ ЗначениеЗаполнено(Строка.ОценкаМонтаж) И ЗначениеЗаполнено(Строка.КомментарийМонтаж)) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "В строке " + НомерСтроки + " не заполнена оценка монтаж";
			Сообщение.Поле = "СписокДоговоров[" + Индекс + "].ОценкаМонтаж";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьДвиженияОценкиМонтажников()
	
	Счет = ПланыСчетов.Управленческий.ПоказателиСотрудника;
	ПВХФизическиеЛица = ПланыВидовХарактеристик.ВидыСубконто.ФизическиеЛица;
	ПВХПоказатель = ПланыВидовХарактеристик.ВидыСубконто.ВидыПоказателейСотрудников;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Монтаж.Подразделение,
	|	Монтаж.Монтажник КАК Монтажник,
	|	ОбзвонДоговоровСписокДоговоров.ОценкаМонтаж КАК ОценкаМонтаж,
	|	СУММА(1) КАК Количество
	|ИЗ
	|	Документ.ОбзвонДоговоров.СписокДоговоров КАК ОбзвонДоговоровСписокДоговоров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Монтаж КАК Монтаж
	|		ПО ОбзвонДоговоровСписокДоговоров.Договор.Спецификация = Монтаж.Спецификация
	|ГДЕ
	|	ОбзвонДоговоровСписокДоговоров.Ссылка = &Ссылка
	|	И Монтаж.Монтажник <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Монтаж.Монтажник,
	|	ОбзвонДоговоровСписокДоговоров.ОценкаМонтаж,
	|	Монтаж.Подразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Монтажник,
	|	ОценкаМонтаж";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Проводка = Движения.Управленческий.Добавить();
		Проводка.Период = Дата;
		Проводка.Подразделение = Выборка.Подразделение;
		Проводка.СчетДт = Счет;
		Проводка.СубконтоДт[ПВХФизическиеЛица] = Выборка.Монтажник;
		
		Если Выборка.ОценкаМонтаж = Перечисления.Оценки.Благодарность Тогда
			Показатель = Перечисления.ВидыПоказателейСотрудников.ОбзвонХорошо;
		ИначеЕсли Выборка.ОценкаМонтаж = Перечисления.Оценки.Недовольство Тогда
			Показатель = Перечисления.ВидыПоказателейСотрудников.ОбзвонПлохо;
		Иначе
			Показатель = Перечисления.ВидыПоказателейСотрудников.ОбзвонНормально;
		КонецЕсли;
		
		Проводка.СубконтоДт[ПВХПоказатель] = Показатель;
		Проводка.Сумма = Выборка.Количество;
		
	КонецЦикла;
	
КонецФункции
