
&НаСервере
Функция ПолучитьВопросыПоТеме()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПравоваяБаза", Объект.Тема);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВопросыПользователям.ТекстВопроса,
	|	ВопросыПользователям.СписокОтветов.(
	|		Ссылка,
	|		НомерСтроки,
	|		Ответ,
	|		Правильный
	|	),
	|	ВопросыПользователям.Ссылка
	|ИЗ
	|	Справочник.ВопросыПользователям КАК ВопросыПользователям
	|ГДЕ
	|	НЕ ВопросыПользователям.ПометкаУдаления
	|	И ВЫБОР
	|			КОГДА &ПравоваяБаза = ЗНАЧЕНИЕ(Справочник.ПравоваяБаза.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВопросыПользователям.Владелец = &ПравоваяБаза
	|		КОНЕЦ";
	
	ВсеВопросыПоТеме = Запрос.Выполнить().Выгрузить();
	ВсегоВопросов = ВсеВопросыПоТеме.Количество();
	
	Если НЕ ЗначениеЗаполнено(Объект.Тема) Тогда
		КоличествоВопросов = ВсегоВопросов;
	КонецЕсли;
	
	Если ВсегоВопросов = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("По теме " + Объект.Тема + " нет вопросов");
	Иначе
		
		МассивНомеровВопросов = Новый Массив;
		Для Сч = 0 По ВсегоВопросов - 1 Цикл
			МассивНомеровВопросов.Добавить(Сч);
		КонецЦикла;
		
		// Чтобы вопросы в разном порядке были.
		МассивСЧ = Новый Массив;
		ГСЧ = Новый ГенераторСлучайныхЧисел();
		
		Пока МассивСЧ.Количество() < КоличествоВопросов Цикл
			
			СлучайноеЧисло = ГСЧ.СлучайноеЧисло(0, МассивНомеровВопросов.ВГраница());
			МассивСЧ.Добавить(МассивНомеровВопросов.Получить(СлучайноеЧисло));
			МассивНомеровВопросов.Удалить(СлучайноеЧисло);
			
		КонецЦикла;
		
		Для каждого СлучайноеЧисло Из МассивСЧ Цикл
			
			НовыйВопрос = СлучайныеВопросы.Добавить();
			НовыйВопрос.Ссылка = ВсеВопросыПоТеме[СлучайноеЧисло].Ссылка;
			НовыйВопрос.СписокОтветов.Загрузить(ВсеВопросыПоТеме[СлучайноеЧисло].СписокОтветов); // Ответы надо тоже в разном порядке загружать.
			НовыйВопрос.ТекстВопроса = ВсеВопросыПоТеме[СлучайноеЧисло].ТекстВопроса;
			НовыйВопрос.Тема = ВсеВопросыПоТеме[СлучайноеЧисло].Тема;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьВопрос(НомерВопроса)
	
	ОбновитьФорму();
	Элементы.ТекстВопроса.Заголовок = СлучайныеВопросы[НомерВопроса].ТекстВопроса;
	ОтветПользователя.Очистить();
	Для каждого Ответ Из СлучайныеВопросы[НомерВопроса].СписокОтветов Цикл
		СтрокаТЧ = ОтветПользователя.Добавить();
		СтрокаТЧ.Ответ = Ответ.Ответ;
		СтрокаТЧ.Правильный = Ответ.ОтветПользователя;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ЗаписатьОтвет(НомерВопроса)
	Для каждого Ответ Из СлучайныеВопросы[НомерВопроса].СписокОтветов Цикл
		
		Ответ.ОтветПользователя = ОтветПользователя[СлучайныеВопросы[НомерВопроса].СписокОтветов.Индекс(Ответ)].Правильный;
		
	КонецЦикла;
КонецФункции

&НаКлиенте
Процедура СледующийВопрос(Команда)
	
	ЗаписатьОтвет(ТекущийВопрос);
	ТекущийВопрос = ТекущийВопрос + 1;
	ПолучитьВопрос(ТекущийВопрос);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущийВопрос(Команда)
	
	ЗаписатьОтвет(ТекущийВопрос);
	ТекущийВопрос = ТекущийВопрос - 1;
	ПолучитьВопрос(ТекущийВопрос);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму()
	
	//Элементы.ТекущийВопрос.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Вопрос %1 из %2", ТекущийВопрос+1, КоличествоВопросов);
	
	Если ТекущийВопрос <= 0 Тогда
		
		Элементы.ПредыдущийВопрос.Доступность = Ложь;
		Элементы.СледующийВопрос.Доступность = Истина;
		
	ИначеЕсли ТекущийВопрос = КоличествоВопросов - 1 Тогда
		
		Элементы.ПредыдущийВопрос.Доступность = Истина;
		Элементы.СледующийВопрос.Доступность = Ложь;
		
	Иначе
		
		Элементы.ПредыдущийВопрос.Доступность = Истина;
		Элементы.СледующийВопрос.Доступность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗакончитьТестированиеНаСервере()
	Объект.ВремяОкончанияТестирования = ТекущаяДата();
	ВсегоПравильных = 0;
	Для каждого Вопрос Из СлучайныеВопросы Цикл
		
		ПравильныйОтвет = Истина;
		ОбъектВопрос = Объект.ВопросыТеста.Добавить();
		ОбъектВопрос.Вопрос = Вопрос.Ссылка;
		
		Для каждого Ответ Из Вопрос.СписокОтветов Цикл
			
			Если НЕ (Ответ.Правильный = Ответ.ОтветПользователя) Тогда
				
				ПравильныйОтвет = Ложь;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		ОбъектВопрос.ПравильныйОтвет = ПравильныйОтвет;
		ВсегоПравильных = ВсегоПравильных + ПравильныйОтвет;
	КонецЦикла;
	
	Возврат ВсегоПравильных;
	
КонецФункции

&НаКлиенте
Процедура НачатьТестирование(Команда)
	
	ПолучитьВопросыПоТеме();
	ТекущийВопрос = 0;
	Объект.ВремяНачалаТестирования = ТекущаяДата();
	ПолучитьВопрос(ТекущийВопрос);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Тема", Объект.Тема);
		ПараметрыФормы.Вставить("КоличествоВопросов", 333);
		
		Ответ = ОткрытьФормуМодально("Документ.ТестированиеПользователей.Форма.ФормаНачалоТеста", ПараметрыФормы, ЭтаФорма);
		
		Отказ = НЕ Ответ;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ЗакончитьТестированиеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Тема") Тогда
		Объект.Тема = Параметры.Тема;
		
		// Выбираем все вопросы по теме, или 20 вопросов для теста по всем темам.
		Если НЕ ЗначениеЗаполнено(Объект.Тема) Тогда
			КоличествоВопросов = 20;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	// Вставить содержимое обработчика.
КонецПроцедуры
