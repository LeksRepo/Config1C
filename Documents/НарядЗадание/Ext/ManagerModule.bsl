
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьХлыстовойМатериал") Тогда
		ПодготовитьПечатнуюФорму("ПечатьХлыстовойМатериал", "Хлыстовой материал", "Документ.НарядЗадание.ПечатьХлыстовойМатериал",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьХлыстМатСклад") Тогда
		ПодготовитьПечатнуюФорму("ПечатьХлыстМатСклад", "Хлыстовой материал на склад", "Документ.НарядЗадание.ПечатьХлыстМатСклад",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьРаскладка") Тогда
		ПодготовитьПечатнуюФорму("ПечатьРаскладка", "Раскладка", "Документ.НарядЗадание.ПечатьРаскладка",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьПоследовательностьВыпуска") Тогда
		ПодготовитьПечатнуюФорму("ПечатьПоследовательностьВыпуска", "Последовательность выпуска", "Документ.НарядЗадание.ПечатьПоследовательностьВыпуска",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

Процедура ПодготовитьПечатнуюФорму(Знач ИмяМакета, ПредставлениеМакета, ПолныйПутьКМакету = "", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, ИмяМакета) Тогда
		
		Если ИмяМакета = "ПечатьХлыстовойМатериал" Тогда
			ТабДок = ПечатьХлыстовойМатериал(МассивОбъектов, ОбъектыПечати);
		ИначеЕсли ИмяМакета = "ПечатьХлыстМатСклад" Тогда
			ТабДок = ПечатьХлыстМатСклад(МассивОбъектов, ОбъектыПечати);
		ИначеЕсли ИмяМакета = "ПечатьРаскладка" Тогда
			ТабДок = ПечатьРаскладка(МассивОбъектов, ОбъектыПечати);
		ИначеЕсли ИмяМакета = "ПечатьПоследовательностьВыпуска" Тогда
			ТабДок = ПечатьПоследовательностьВыпуска(МассивОбъектов, ОбъектыПечати);
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		ИмяМакета,
		ПредставлениеМакета,
		ТабДок,
		,
		ПолныйПутьКМакету);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьРаскладка(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ОтделТехническогоКонтроля";
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТаблицаСпецификаций = МассивОбъектов.СписокСпецификаций.Выгрузить();
	МассивСпецификаций = ТаблицаСпецификаций.ВыгрузитьКолонку("Спецификация");
	Макет = Документы.НарядЗадание.ПолучитьМакет("Раскладка");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьДетальСтрока = Макет.ПолучитьОбласть("ДетальСтрока");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСпецификаций", МассивСпецификаций);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаскройДеталей.Объект КАК Спецификация,
	|	РаскройДеталей.ТаблицаДеталей
	|ИЗ
	|	РегистрСведений.РаскройДеталей КАК РаскройДеталей
	|ГДЕ
	|	РаскройДеталей.Объект В (&МассивСпецификаций)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ВыборкаЗонаФРС = Новый ТаблицаЗначений;
	ВыборкаЗонаФРС.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("ДокументСсылка.Спецификация"));
	ВыборкаЗонаФРС.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ВыборкаЗонаФРС.Колонки.Добавить("Парковка", Новый ОписаниеТипов("Число"));
	
	ВыборкаЗонаФасадов = ВыборкаЗонаФРС.СкопироватьКолонки();
	
	ВыборкаЗонаФРС.Колонки.Добавить("ФРСКоличество", Новый ОписаниеТипов("Число"));
	ВыборкаЗонаФРС.Колонки.Добавить("ФРСВысота", Новый ОписаниеТипов("Число"));
	ВыборкаЗонаФРС.Колонки.Добавить("ФРСШирина", Новый ОписаниеТипов("Число"));
	
	ВыборкаЗонаФасадов.Колонки.Добавить("ФасадыКоличество", Новый ОписаниеТипов("Число"));
	ВыборкаЗонаФасадов.Колонки.Добавить("ФасадыВысота", Новый ОписаниеТипов("Число"));
	ВыборкаЗонаФасадов.Колонки.Добавить("ФасадыШирина", Новый ОписаниеТипов("Число"));
	
	Пока Выборка.Следующий() Цикл
		
		НомерЛистаЗонаФРС = 0;
		НомерЛистаЗонаФасадов = 0;
		тзДетали = Выборка.ТаблицаДеталей.Получить();
		ТаблицаДляТестовЗонаФРС = тзДетали.СкопироватьКолонки();
		ТаблицаДляТестовЗонаФасадов = тзДетали.СкопироватьКолонки();
		тзДетали.Сортировать("Номенклатура");
		Для каждого Строка Из тзДетали Цикл
			
			НоменклатурнаяГруппа = Строка.Номенклатура.НоменклатурнаяГруппа;
			
			Если (НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ДВП 
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ЛДСП16
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ЛДСП22
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ЛДСП26
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.МДФ18
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.Пристенок
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.Столешница)
				И Строка.ПоследнийЛист Тогда
				НоваяСтрока = ТаблицаДляТестовЗонаФРС.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
			ИначеЕсли (НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ЗеркалоДекоративное
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.Зеркало
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.Стекло
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.АГТПанель
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ЛДСП10
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.МДФ8
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.МДФ10
				ИЛИ НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ЩитМебельный) 
				И Строка.ПоследнийЛист Тогда
				НоваяСтрока = ТаблицаДляТестовЗонаФасадов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
			КонецЕсли;
			
		КонецЦикла;
		Если ТаблицаДляТестовЗонаФРС.Количество() > 0 Тогда
			ТаблицаДляТестовЗонаФРС.Свернуть("ВысотаДетали, Номенклатура, ШиринаДетали, НомерЛиста, ВсегоЛистов", "Количество");
		КонецЕсли;
		Если ТаблицаДляТестовЗонаФасадов.Количество() > 0 Тогда
			ТаблицаДляТестовЗонаФасадов.Свернуть("ВысотаДетали, Номенклатура, ШиринаДетали, НомерЛиста, ВсегоЛистов", "Количество");
		КонецЕсли;
		ТекущаяНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
		ТаблицаДляТестовЗонаФРС.Сортировать("Номенклатура");
		Для каждого Строка Из ТаблицаДляТестовЗонаФРС Цикл
			
			Если ТекущаяНоменклатура <> Строка.Номенклатура и Строка.ВсегоЛистов > 1 Тогда
				НоваяСтрока = ВыборкаЗонаФРС.Добавить();
				НоваяСтрока.Спецификация = Выборка.Спецификация;
				НоваяСтрока.Номенклатура = Строка.Номенклатура;
				НоваяСтрока.Парковка = Строка.Номенклатура.Парковка;
				НоваяСтрока.ФРСКоличество = Строка.ВсегоЛистов - 1;
				НоваяСтрока.ФРСВысота = Строка.Номенклатура.ДлинаДетали;
				НоваяСтрока.ФРСШирина = Строка.Номенклатура.ШиринаДетали;
				НоменклатурнаяГруппа = Строка.Номенклатура.НоменклатурнаяГруппа;
				ТекущаяНоменклатура = Строка.Номенклатура;
			КонецЕсли;
			
			НоваяСтрока = ВыборкаЗонаФРС.Добавить();
			НоваяСтрока.Спецификация = Выборка.Спецификация;
			НоваяСтрока.Номенклатура = Строка.Номенклатура;
			НоваяСтрока.Парковка = Строка.Номенклатура.Парковка;
			НоваяСтрока.ФРСКоличество = Строка.Количество;
			НоваяСтрока.ФРСВысота = Строка.ВысотаДетали;
			НоваяСтрока.ФРСШирина = Строка.ШиринаДетали;
			
		КонецЦикла;
		
		ТекущаяНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
		ТаблицаДляТестовЗонаФасадов.Сортировать("Номенклатура");
		Для каждого Строка Из ТаблицаДляТестовЗонаФасадов Цикл
			
			Если ТекущаяНоменклатура <> Строка.Номенклатура и Строка.ВсегоЛистов > 1 Тогда
				НоваяСтрока = ВыборкаЗонаФасадов.Добавить();
				НоваяСтрока.Спецификация = Выборка.Спецификация;
				НоваяСтрока.Номенклатура = Строка.Номенклатура;
				НоваяСтрока.Парковка = Строка.Номенклатура.Парковка;
				НоваяСтрока.ФасадыКоличество = Строка.ВсегоЛистов - 1;
				НоваяСтрока.ФасадыВысота = Строка.Номенклатура.ДлинаДетали;
				НоваяСтрока.ФасадыШирина = Строка.Номенклатура.ШиринаДетали;
				НоменклатурнаяГруппа = Строка.Номенклатура.НоменклатурнаяГруппа;
				ТекущаяНоменклатура = Строка.Номенклатура;
			КонецЕсли;
			
			НоваяСтрока = ВыборкаЗонаФасадов.Добавить();
			НоваяСтрока.Спецификация = Выборка.Спецификация;
			НоваяСтрока.Номенклатура = Строка.Номенклатура;
			НоваяСтрока.Парковка = Строка.Номенклатура.Парковка;
			НоваяСтрока.ФасадыКоличество = Строка.Количество;
			НоваяСтрока.ФасадыВысота = Строка.ВысотаДетали;
			НоваяСтрока.ФасадыШирина = Строка.ШиринаДетали;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСпецификаций", МассивСпецификаций);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Ссылка КАК Спецификация,
	|	СпецификацияСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СпецификацияСписокНоменклатуры.Количество КАК ХлыстовойДлина,
	|	СпецификацияСписокНоменклатуры.Номенклатура.Парковка КАК Парковка,
	|	СпецификацияСписокНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка В(&МассивСпецификаций)
	|	И СпецификацияСписокНоменклатуры.Номенклатура.НоменклатурнаяГруппа.ВидМатериала = ЗНАЧЕНИЕ(Перечисление.ВидыМатериалов.Хлыстовой)
	|	И СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|	И СпецификацияСписокНоменклатуры.Номенклатура.МестоОбработки = ЗНАЧЕНИЕ(Перечисление.МестоОбработки.Цех)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Ссылка КАК Спецификация,
	|	СпецификацияСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СпецификацияСписокНоменклатуры.Количество КАК РулонныйКоличество,
	|	СпецификацияСписокНоменклатуры.Номенклатура.Парковка КАК Парковка,
	|	СпецификацияСписокНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка В(&МассивСпецификаций)
	|	И СпецификацияСписокНоменклатуры.Номенклатура.НоменклатурнаяГруппа.ВидМатериала = ЗНАЧЕНИЕ(Перечисление.ВидыМатериалов.Рулонный)
	|	И СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|	И СпецификацияСписокНоменклатуры.Номенклатура.МестоОбработки = ЗНАЧЕНИЕ(Перечисление.МестоОбработки.Цех)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Ссылка КАК Спецификация,
	|	СпецификацияСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СпецификацияСписокНоменклатуры.Количество КАК ШтучныйКоличество,
	|	СпецификацияСписокНоменклатуры.Номенклатура.Парковка КАК Парковка,
	|	СпецификацияСписокНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка В(&МассивСпецификаций)
	|	И СпецификацияСписокНоменклатуры.Номенклатура.НоменклатурнаяГруппа.ВидМатериала = ЗНАЧЕНИЕ(Перечисление.ВидыМатериалов.Штучный)
	|	И СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|	И СпецификацияСписокНоменклатуры.Номенклатура.МестоОбработки = ЗНАЧЕНИЕ(Перечисление.МестоОбработки.Цех)";
	
	МассивРезультатовЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаХлыстовогоМатериала = МассивРезультатовЗапроса[0].Выгрузить();
	Если ВыборкаХлыстовогоМатериала.Количество() > 0 Тогда
		ВыборкаХлыстовогоМатериала.Свернуть("Спецификация, Номенклатура, ЕдиницаИзмерения", "ХлыстовойДлина");
	КонецЕсли;
	ВыборкаРулонногоМатериала = МассивРезультатовЗапроса[1].Выгрузить();
	Если ВыборкаРулонногоМатериала.Количество() > 0 Тогда
		ВыборкаРулонногоМатериала.Свернуть("Спецификация, Номенклатура, ЕдиницаИзмерения", "РулонныйКоличество");
	КонецЕсли;
	ВыборкаШтучногоМатериала = МассивРезультатовЗапроса[2].Выгрузить();
	Если ВыборкаШтучногоМатериала.Количество() > 0 Тогда
		ВыборкаШтучногоМатериала.Свернуть("Спецификация, Номенклатура, ЕдиницаИзмерения", "ШтучныйКоличество");
	КонецЕсли;
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	ОбластьЗаголовок.Параметры.НомерНаряда = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(МассивОбъектов.Номер);
	ОбластьЗаголовок.Параметры.ДатаНаряда = Формат(МассивОбъектов.Дата, "ДЛФ=DD");
	ОбластьЗаголовок.Параметры.НомераСпецификаций = СформироватьНомераСпецификаций(МассивОбъектов.Ссылка);
	
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапка);
	ВставлятьРазделительСтраниц = Ложь;
	ВыборкаЗонаФРС.Сортировать("Номенклатура убыв, ФРСШирина убыв, ФРСВысота убыв");
	ВыборкаЗонаФасадов.Сортировать("Номенклатура");
	ВыборкаХлыстовогоМатериала.Сортировать("Номенклатура");
	ВыборкаРулонногоМатериала.Сортировать("Номенклатура");
	ВыборкаШтучногоМатериала.Сортировать("Номенклатура");
	
	Для каждого Спецификация Из МассивСпецификаций Цикл
		
		ОбластьДетальСтрока.Параметры.СпецификацияНомер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Спецификация.Номер);
		ТабДок.Вывести(ОбластьДетальСтрока);
		ОбластьДетальСтрока.Параметры.СпецификацияНомер = "";
		
		Для Каждого Строка Из ВыборкаЗонаФРС Цикл
			
			Если Строка.Спецификация = Спецификация Тогда
				
				ОбластьДетальСтрока.Параметры.Заполнить(Строка);
				ТабДок.Вывести(ОбластьДетальСтрока);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьДетальСтрока = Макет.ПолучитьОбласть("ДетальСтрока");
		
		Для Каждого Строка Из ВыборкаЗонаФасадов Цикл
			
			Если Строка.Спецификация = Спецификация Тогда
				
				ОбластьДетальСтрока.Параметры.Заполнить(Строка);
				ТабДок.Вывести(ОбластьДетальСтрока);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьДетальСтрока = Макет.ПолучитьОбласть("ДетальСтрока");
		
		Для Каждого Строка Из ВыборкаХлыстовогоМатериала Цикл
			
			Если Строка.Спецификация = Спецификация Тогда
				
				ОбластьДетальСтрока.Параметры.Заполнить(Строка);
				ТабДок.Вывести(ОбластьДетальСтрока);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьДетальСтрока = Макет.ПолучитьОбласть("ДетальСтрока");
		
		Для Каждого Строка Из ВыборкаРулонногоМатериала Цикл
			
			Если Строка.Спецификация = Спецификация Тогда
				
				ОбластьДетальСтрока.Параметры.Заполнить(Строка);
				ТабДок.Вывести(ОбластьДетальСтрока);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьДетальСтрока = Макет.ПолучитьОбласть("ДетальСтрока");
		
		Для Каждого Строка Из ВыборкаШтучногоМатериала Цикл
			
			Если Строка.Спецификация = Спецификация Тогда
				
				ОбластьДетальСтрока.Параметры.Заполнить(Строка);
				ТабДок.Вывести(ОбластьДетальСтрока);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьДетальСтрока = Макет.ПолучитьОбласть("ДетальСтрока");
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, МассивОбъектов.Ссылка);
	
	Возврат ТабДок;
	
КонецФункции

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ЛексСервер.ПолучитьПредставлениеДокумента(Данные, Представление, СтандартнаяОбработка);
	
КонецПроцедуры

Функция СформироватьНомераСпецификаций(Ссылка)
	
	Результат = "";
	
	Для каждого Строка Из Ссылка.СписокСпецификаций Цикл
		
		Номер = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Строка.Спецификация, "Номер");
		Результат = Результат + ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Номер) + ", ";
		
	КонецЦикла;
	
	Если Результат <> "" Тогда
		Результат = Лев(Результат, СтрДлина(Результат) - 2) + "." ;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьХлыстовойМатериалНаДвери(Наряд,Дверь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Наряд", Наряд);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НарядЗаданиеРаскройХлыстов.Ссылка КАК Ссылка,
	|	НарядЗаданиеРаскройХлыстов.Ссылка.Номер КАК НомерНаряда,
	|	НарядЗаданиеРаскройХлыстов.Ссылка.Дата КАК ДатаНаряда,
	|	НарядЗаданиеРаскройХлыстов.Количество КАК РазмерОтрезка,
	|	НарядЗаданиеРаскройХлыстов.Номенклатура КАК Номенклатура,
	|	НарядЗаданиеРаскройХлыстов.НомерХлыста КАК НомерХлыста,
	|	НарядЗаданиеРаскройХлыстов.Остаток,
	|	НарядЗаданиеРаскройХлыстов.РазмерХлыста КАК РазмерХлыста,
	|	НарядЗаданиеРаскройХлыстов.Спецификация,
	|	НарядЗаданиеРаскройХлыстов.Спецификация.Номер КАК НомерСпецификации,
	|	НарядЗаданиеРаскройХлыстов.Двери КАК Двери
	|ИЗ
	|	Документ.НарядЗадание.РаскройХлыстов КАК НарядЗаданиеРаскройХлыстов
	|ГДЕ
	|	НарядЗаданиеРаскройХлыстов.Ссылка = &Наряд
	|
	|УПОРЯДОЧИТЬ ПО
	|	НарядЗаданиеРаскройХлыстов.Номенклатура.Цвет,
	|	НомерСпецификации,
	|	НомерХлыста
	|ИТОГИ
	|	МАКСИМУМ(РазмерХлыста)
	|ПО
	|	Ссылка,
	|	Номенклатура,
	|	НомерХлыста";
	
	МассивДанные = Новый Массив();
	
	ВыборкаДокументы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		ВыборкаНоменклатура = ВыборкаДокументы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ВыборкаХлысты = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаХлысты.Следующий() Цикл
				
				ЕстьНужнаяДверь = Ложь;
				МассивХлыст = Новый Массив();
				
				РазмерЗаготовки = ВыборкаХлысты.РазмерХлыста;
				
				ВыборкаСпецификации = ВыборкаХлысты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаСпецификации.Следующий() Цикл
					Если НЕ ВыборкаСпецификации.Остаток Тогда
						Если ВыборкаСпецификации.Двери = Дверь Тогда
							
							ЕстьНужнаяДверь = Истина;
							МассивХлыст.Добавить("1" + "♥" + ВыборкаСпецификации.РазмерОтрезка);
							
						КонецЕсли;
					Иначе
						РазмерЗаготовки = ВыборкаСпецификации.РазмерХлыста - ВыборкаСпецификации.РазмерОтрезка;
					КонецЕсли;
				КонецЦикла;
				
				Если ЕстьНужнаяДверь Тогда
					
					НовыйХлыст = Новый Массив();
					НовыйХлыст.Добавить("0" + "♥" + ВыборкаХлысты.Номенклатура + "♥" + РазмерЗаготовки);
					Для Каждого Ст ИЗ МассивХлыст Цикл
						НовыйХлыст.Добавить(Ст);
					КонецЦикла;
					
					МассивДанные.Добавить(НовыйХлыст);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивРезультат = Новый Массив();
	
	Если МассивДанные.Количество() > 0 Тогда
		
		Для Каждого МассивХлыст ИЗ МассивДанные Цикл
			Для Каждого Отрезок ИЗ МассивХлыст Цикл
				МассивРезультат.Добавить(Отрезок);
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(МассивРезультат, "♦");
	
КонецФункции

Функция ПечатьПоследовательностьВыпуска(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ПечатьПоследовательностьВыпуска";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = Документы.НарядЗадание.ПолучитьМакет("ПечатьПоследовательностьВыпуска");
	
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблица = Макет.ПолучитьОбласть("ШапкаТаблица");
	ОбластьСтрокаТаблица = Макет.ПолучитьОбласть("СтрокаТаблица");
	ОбластьСтрокаТаблицаНоменклатура = Макет.ПолучитьОбласть("СтрокаТаблицаНоменклатура");
	ОбластьСтрокаКромка = Макет.ПолучитьОбласть("СтрокаКромка");
	ОбластьНеноменклатурныйШапка = Макет.ПолучитьОбласть("НеноменклатурныйШапка");
	ОбластьНеноменклатурныйСтрока = Макет.ПолучитьОбласть("НеноменклатурныйСтрока");
	ОбластьШапкаБезЛДСП = Макет.ПолучитьОбласть("ШапкаБезЛДСП");
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Для Каждого Наряд Из МассивОбъектов Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		УслугаПрисадка = ЛексСерверПовтИсп.ПолучитьОбщуюНоменклатуру(Справочники.ОбщаяНоменклатура.УслугаПрисадка, Наряд.Подразделение);
		
		//RonEXI: Сначала получаем таблицу кромок по спецухам.
		
		Запрос = Новый Запрос;
		Запрос.Параметры.Вставить("МассивНарядов", Наряд);
		Запрос.Параметры.Вставить("Подразделение", Наряд.Подразделение);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НарядЗаданиеСписокСпецификаций.Ссылка КАК Наряд,
		|	НарядЗаданиеСписокСпецификаций.Спецификация КАК Спецификация
		|ПОМЕСТИТЬ втСпецификации
		|ИЗ
		|	Документ.НарядЗадание.СписокСпецификаций КАК НарядЗаданиеСписокСпецификаций
		|ГДЕ
		|	НарядЗаданиеСписокСпецификаций.Ссылка В(&МассивНарядов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Спец.Наряд КАК Наряд,
		|	СписокНоменклатуры.Ссылка КАК Спецификация,
		|	СписокНоменклатуры.Номенклатура КАК Кромка,
		|	СУММА(СписокНоменклатуры.Количество) КАК Количество
		|ПОМЕСТИТЬ втНомСпецификации
		|ИЗ
		|	Документ.Спецификация.СписокНоменклатуры КАК СписокНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ втСпецификации КАК Спец
		|		ПО СписокНоменклатуры.Ссылка = Спец.Спецификация
		|ГДЕ
		|	СписокНоменклатуры.Ссылка В
		|			(ВЫБРАТЬ
		|				Спец.Спецификация
		|			ИЗ
		|				втСпецификации КАК Спец)
		|	И СписокНоменклатуры.КриволинейнаяКромка
		|
		|СГРУППИРОВАТЬ ПО
		|	Спец.Наряд,
		|	СписокНоменклатуры.Ссылка,
		|	СписокНоменклатуры.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	кКромки.Наряд,
		|	кКромки.Спецификация,
		|	кКромки.Кромка,
		|	ВЫРАЗИТЬ(кКромки.Количество + 0.4999 КАК ЧИСЛО(15, 0)) КАК Количество
		|ПОМЕСТИТЬ втКривКромки
		|ИЗ
		|	втНомСпецификации КАК кКромки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НарядЗаданиеСписокНоменклатуры.Ссылка КАК НарядСсылка,
		|	НарядЗаданиеСписокНоменклатуры.Ссылка.Номер КАК НомерНаряда,
		|	НарядЗаданиеСписокНоменклатуры.Ссылка.Дата КАК ДатаНаряда,
		|	НарядЗаданиеСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	НарядЗаданиеСписокНоменклатуры.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	НарядЗаданиеСписокНоменклатуры.Номенклатура.КраткоеНаименование КАК КраткоеНаименование,
		|	НарядЗаданиеСписокНоменклатуры.КоличествоТребуется КАК КоличествоТребуется,
		|	НарядЗаданиеСписокНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	НарядЗаданиеСписокНоменклатурыПоСпецификациям.Спецификация.Номер КАК НомерСпецификации,
		|	НарядЗаданиеСписокНоменклатурыПоСпецификациям.Спецификация КАК Спецификация,
		|	НарядЗаданиеСписокНоменклатурыПоСпецификациям.Номенклатура.ЕдиницаИзмерения КАК НоменклатураСпецификацииЕдиницаИзмерения,
		|	НарядЗаданиеСписокНоменклатурыПоСпецификациям.Количество КАК КоличествоВСпецификации,
		|	НастройкиНоменклатуры.АдресХранения КАК АдресХранения,
		|	ВЫБОР
		|		КОГДА НЕ МатПодЗаказ.Комментарий ЕСТЬ NULL
		|			ТОГДА МатПодЗаказ.Комментарий
		|		ИНАЧЕ ЕСТЬNULL(МатЗаказчика.Комментарий, """")
		|	КОНЕЦ КАК КомментарийПодЗаказ,
		|	ВЫБОР
		|		КОГДА МатПодЗаказ.Номенклатура ЕСТЬ NULL
		|				И МатЗаказчика.Номенклатура ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ МатПодЗаказ.Номенклатура ЕСТЬ NULL
		|					ТОГДА 1
		|				ИНАЧЕ 2
		|			КОНЕЦ
		|	КОНЕЦ КАК ВидПредоставления,
		|	ЕСТЬNULL(КривКромки.Количество, 0) КАК КоличествоКривКромки
		|ИЗ
		|	Документ.НарядЗадание.СписокНоменклатуры КАК НарядЗаданиеСписокНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НарядЗадание.СписокНоменклатурыПоСпецификациям КАК НарядЗаданиеСписокНоменклатурыПоСпецификациям
		|		ПО НарядЗаданиеСписокНоменклатуры.Ссылка = НарядЗаданиеСписокНоменклатурыПоСпецификациям.Ссылка
		|			И (НарядЗаданиеСписокНоменклатуры.Номенклатура = НарядЗаданиеСписокНоменклатурыПоСпецификациям.Номенклатура
		|				ИЛИ НарядЗаданиеСписокНоменклатуры.Номенклатура.БазоваяНоменклатура = НарядЗаданиеСписокНоменклатурыПоСпецификациям.Номенклатура)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Спецификация.СписокМатериаловПодЗаказ КАК МатПодЗаказ
		|		ПО (МатПодЗаказ.Ссылка = НарядЗаданиеСписокНоменклатурыПоСпецификациям.Спецификация)
		|			И (МатПодЗаказ.Номенклатура = НарядЗаданиеСписокНоменклатурыПоСпецификациям.Номенклатура
		|				ИЛИ МатПодЗаказ.Номенклатура = НарядЗаданиеСписокНоменклатурыПоСпецификациям.Номенклатура.БазоваяНоменклатура)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Спецификация.СписокМатериаловЗаказчика КАК МатЗаказчика
		|		ПО (МатЗаказчика.Ссылка = НарядЗаданиеСписокНоменклатурыПоСпецификациям.Спецификация)
		|			И (МатЗаказчика.Номенклатура = НарядЗаданиеСписокНоменклатурыПоСпецификациям.Номенклатура
		|				ИЛИ МатЗаказчика.Номенклатура = НарядЗаданиеСписокНоменклатурыПоСпецификациям.Номенклатура.БазоваяНоменклатура)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиНоменклатуры.СрезПоследних(, Подразделение = &Подразделение) КАК НастройкиНоменклатуры
		|		ПО (НарядЗаданиеСписокНоменклатуры.Номенклатура = НастройкиНоменклатуры.Номенклатура
		|				ИЛИ НарядЗаданиеСписокНоменклатуры.Номенклатура.БазоваяНоменклатура = НастройкиНоменклатуры.Номенклатура)
		|		ЛЕВОЕ СОЕДИНЕНИЕ втКривКромки КАК КривКромки
		|		ПО (КривКромки.Спецификация = НарядЗаданиеСписокНоменклатурыПоСпецификациям.Спецификация)
		|			И (КривКромки.Кромка = НарядЗаданиеСписокНоменклатурыПоСпецификациям.Номенклатура)
		|ГДЕ
		|	НарядЗаданиеСписокНоменклатуры.Ссылка В(&МассивНарядов)
		|	И НарядЗаданиеСписокНоменклатуры.Номенклатура.НоменклатурнаяГруппа.ВидМатериала = ЗНАЧЕНИЕ(Перечисление.ВидыМатериалов.Рулонный)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НарядЗаданиеСписокНоменклатуры.Номенклатура.Наименование";
		
		ТзКромки = Запрос.Выполнить().Выгрузить();
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ОбластьШапка.Параметры.Наряд = Наряд;
		ОбластьШапка.Параметры.ДатаИзготовления = Формат(Наряд.ДатаИзготовления, "ДФ=dd.MM.yy");
		
		ТабДок.Вывести(ОбластьШапка);
		ТабДок.Вывести(ОбластьПустаяСтрока);
		
		тзСпецификации = Новый ТаблицаЗначений;
		тзСпецификации.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("ДокументСсылка.Спецификация"));
		тзСпецификации.Колонки.Добавить("Детали", Новый ОписаниеТипов("Число"));
		тзСпецификации.Колонки.Добавить("Ящики", Новый ОписаниеТипов("Число"));
		тзСпецификации.Колонки.Добавить("Двери", Новый ОписаниеТипов("Число"));
		тзСпецификации.Колонки.Добавить("Упаковка", Новый ОписаниеТипов("Булево"));
		тзСпецификации.Колонки.Добавить("СборкаПрисадка", Новый ОписаниеТипов("Строка"));
		тзСпецификации.Колонки.Добавить("КриволинейкаСклейка", Новый ОписаниеТипов("Строка"));
		тзСпецификации.Колонки.Добавить("ЕстьЛДСП", Новый ОписаниеТипов("Булево"));
		тзСпецификации.Колонки.Добавить("Буква", Новый ОписаниеТипов("Строка"));
		
		Для Каждого Спец ИЗ Наряд.СписокСпецификаций Цикл
			
			Стр = тзСпецификации.Добавить();
			
			Стр.Буква = Спец.НомерСтроки;
			
			Спец = Спец.Спецификация;

			Стр.ЕстьЛДСП = Ложь;
			Стр.Спецификация = Спец;
			Стр.Упаковка = Спец.Упаковка;
						
			Сборка = "";
			Присадка = "";
			Криволинейка = "";
			Склейка = "";
			
			КриволинейкаКоличество = 0;
			СклейкаКоличество = 0;
			СборкаКоличество = 0;
			ПрисадкаКоличество = 0;
			
			Отбор = Новый Структура();
			Отбор.Вставить("Номенклатура", УслугаПрисадка);
			
			СтрокиПрисадка = Спец.СписокНоменклатуры.НайтиСтроки(Отбор);
			
			Для Каждого СтрокаПрисадка ИЗ СтрокиПрисадка Цикл
				Присадка = "Присад";
				ПрисадкаКоличество = ПрисадкаКоличество + СтрокаПрисадка.Количество; 	
			КонецЦикла;
			
			Для Каждого Изделие ИЗ Спец.СписокИзделийПоКаталогу Цикл
				
				Если Изделие.Сборка Тогда
					Сборка = "Сбор";
					СборкаКоличество = СборкаКоличество + 1;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ЗначениеЗаполнено(Сборка) ИЛИ ЗначениеЗаполнено(Присадка) Тогда 			
				Стр.СборкаПрисадка = ?(ЗначениеЗаполнено(Сборка), Сборка + "( " + СборкаКоличество + " )", "");
				Стр.СборкаПрисадка = ?(ЗначениеЗаполнено(Присадка), Стр.СборкаПрисадка  + ?(ЗначениеЗаполнено(Сборка), " / ", "") + Присадка + "( " + ПрисадкаКоличество + " )", Стр.СборкаПрисадка);
			Иначе
				Стр.СборкаПрисадка = "";
			КонецЕсли;
			
			КолДеталей = 0;
			
			Для Каждого Деталь ИЗ Спец.СписокДеталей Цикл
				
				КолДеталей = КолДеталей + Деталь.Количество;
				ЕстьКриволинейка = Ложь;
				
				Если ЗначениеЗаполнено(Деталь.СтрокаДляФлэш) Тогда
					Криволинейка = "Крив";
					ЕстьКриволинейка = Истина;
				КонецЕсли;
				
				Если Деталь.РадиусЛевоВерх > 0 
					ИЛИ Деталь.РадиусЛевоНиз > 0
					ИЛИ Деталь.РадиусПравоВерх > 0
					ИЛИ Деталь.РадиусПравоНиз > 0 Тогда
					Криволинейка = "Крив";
					ЕстьКриволинейка = Истина;
				КонецЕсли;
				
				Если ЕстьКриволинейка Тогда
					КриволинейкаКоличество = КриволинейкаКоличество + Деталь.Количество; 						
				КонецЕсли;
				
				Если Деталь.ВидДетали.Клееная Тогда
					Склейка = "Склей";
					СклейкаКоличество = СклейкаКоличество + Деталь.Количество;
				КонецЕсли;
				
			КонецЦикла;
			
			Стр.Детали = КолДеталей;
			
			Если ЗначениеЗаполнено(Криволинейка) ИЛИ ЗначениеЗаполнено(Склейка) Тогда 			
				Стр.КриволинейкаСклейка = ?(ЗначениеЗаполнено(Криволинейка), Криволинейка + "( " + КриволинейкаКоличество + " )", "");
				Стр.КриволинейкаСклейка = ?(ЗначениеЗаполнено(Склейка), Стр.КриволинейкаСклейка + ?(ЗначениеЗаполнено(Криволинейка), " / ", "") + Склейка + "( " + СклейкаКоличество + " )", Стр.КриволинейкаСклейка);
			Иначе
				Стр.КриволинейкаСклейка = "";
			КонецЕсли;
			
			КолДверей = 0;
			
			Для Каждого Двери ИЗ Спец.СписокДверей Цикл
				КолДверей = КолДверей + Двери.Двери.Количество;
			КонецЦикла;
			
			Стр.Двери = КолДверей;
			
			КолЯщики = 0;
			
			Для Каждого Ящик ИЗ Спец.СписокЯщики Цикл
				КолЯщики = КолЯщики + Ящик.КоличествоЯщиков;
			КонецЦикла;
			
			Стр.Ящики = КолЯщики;
			
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Параметры.Вставить("Наряд", Наряд);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Порядок.Номенклатура КАК Номенклатура,
		|	НомСпец.Спецификация КАК Спецификация,
		|	НомСпец.Спецификация.Номер КАК Номер,
		|	Спец.НомерСтроки КАК Буква,
		|	Порядок.НомерСтроки КАК Порядок
		|ИЗ
		|	Документ.НарядЗадание.СписокЛистовНоменклатуры КАК Порядок
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НарядЗадание.СписокНоменклатурыПоСпецификациям КАК НомСпец
		|		ПО Порядок.Номенклатура = НомСпец.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НарядЗадание.СписокСпецификаций КАК Спец
		|		ПО (НомСпец.Спецификация = Спец.Спецификация)
		|ГДЕ
		|	Порядок.Ссылка = &Наряд
		|	И НомСпец.Ссылка = &Наряд
		|	И Спец.Ссылка = &Наряд
		|	И Порядок.Номенклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ЛДСП16)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок,
		|	Буква
		|ИТОГИ
		|	МАКСИМУМ(Порядок)
		|ПО
		|	Номенклатура";
		
		Результат = Запрос.Выполнить();
		
		Если НЕ Результат.Пустой() Тогда
			
			ТабДок.Вывести(ОбластьШапкаТаблица);
			
			ВыборкаЦвет = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ПерваяСтрока = Истина;
			Порядок = 0;
			
			Пока ВыборкаЦвет.Следующий() Цикл
				
				ОбластьСтрокаТаблицаНоменклатура.Параметры.Номенклатура = ВыборкаЦвет.Номенклатура;
				ОбластьСтрокаТаблицаНоменклатура.Параметры.Порядок = ВыборкаЦвет.Порядок;
				ТабДок.Вывести(ОбластьСтрокаТаблицаНоменклатура);
				
				ВыборкаСпец = ВыборкаЦвет.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаСпец.Следующий() Цикл
					
					ПараметрыОтбора = Новый Структура;
					ПараметрыОтбора.Вставить("Спецификация", ВыборкаСпец.Спецификация);
					
					СтрСпец = тзСпецификации.НайтиСтроки(ПараметрыОтбора);
					
					СтрСпец[0].ЕстьЛДСП = Истина;
					
					КромкиСпец = ТзКромки.НайтиСтроки(ПараметрыОтбора);
					
					ОбластьСтрокаТаблица.Параметры.Заполнить(СтрСпец[0]);
					ОбластьСтрокаТаблица.Параметры.Буква = Символ(64+ВыборкаСпец.Буква);
					ОбластьСтрокаТаблица.Параметры.Спецификация = ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(ВыборкаСпец.Номер);
					ТабДок.Вывести(ОбластьСтрокаТаблица);
					
					Для Каждого СтрКромка ИЗ КромкиСпец Цикл
						
						ОбластьСтрокаКромка.Параметры.Номенклатура = Строка(СтрКромка.Номенклатура) + Строка(?(ЗначениеЗаполнено(СтрКромка.КомментарийПодЗаказ)," ( " + СтрКромка.КомментарийПодЗаказ + " )", ""));
						
						Если СтрКромка.КоличествоКривКромки > 0 Тогда
							ОбластьСтрокаКромка.Параметры.КромкаКоличество = Строка(СтрКромка.КоличествоВСпецификации - СтрКромка.КоличествоКривКромки) + " ( " + СтрКромка.КоличествоКривКромки + " )"; 
						Иначе
							ОбластьСтрокаКромка.Параметры.КромкаКоличество = Строка(СтрКромка.КоличествоВСпецификации);
						КонецЕсли;
						
						ТабДок.Вывести(ОбластьСтрокаКромка);
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		//RonEXI: Выводим спецухи без ЛДСП
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ЕстьЛДСП", Ложь);
		
		СтрСпец = тзСпецификации.НайтиСтроки(ПараметрыОтбора);
		
		Если СтрСпец.Количество() > 0 Тогда
			ТабДок.Вывести(ОбластьШапкаБезЛДСП);
		КонецЕсли;
		
		Для Каждого Стр ИЗ СтрСпец Цикл
			
			ОбластьСтрокаТаблица.Параметры.Заполнить(Стр);
			ОбластьСтрокаТаблица.Параметры.Буква = Символ(64+Стр.Буква);
			ОбластьСтрокаТаблица.Параметры.Спецификация = ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(Стр.Спецификация.Номер);
			ТабДок.Вывести(ОбластьСтрокаТаблица);

			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Спецификация", Стр.Спецификация);
			
			КромкиСпец = ТзКромки.НайтиСтроки(ПараметрыОтбора);
			
			Для Каждого СтрКромка ИЗ КромкиСпец Цикл
				
				ОбластьСтрокаКромка.Параметры.Номенклатура = Строка(СтрКромка.Номенклатура) + Строка(?(ЗначениеЗаполнено(СтрКромка.КомментарийПодЗаказ)," ( " + СтрКромка.КомментарийПодЗаказ + " )", ""));
				
				Если СтрКромка.КоличествоКривКромки > 0 Тогда
					ОбластьСтрокаКромка.Параметры.КромкаКоличество = Строка(СтрКромка.КоличествоВСпецификации - СтрКромка.КоличествоКривКромки) + " ( " + СтрКромка.КоличествоКривКромки + " )"; 
				Иначе
					ОбластьСтрокаКромка.Параметры.КромкаКоличество = Строка(СтрКромка.КоличествоВСпецификации);
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьСтрокаКромка);
				
			КонецЦикла;
	
		КонецЦикла;
		
		//RonEXI: Выводим неноменклатурный материал со спецух.
		
		Запрос = Новый Запрос;
		Запрос.Параметры.Вставить("Наряд", Наряд);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НарядЗаданиеСписокСпецификаций.НомерСтроки КАК Буква,
		|	НарядЗаданиеСписокСпецификаций.Спецификация КАК Спецификация
		|ПОМЕСТИТЬ втСпецификации
		|ИЗ
		|	Документ.НарядЗадание.СписокСпецификаций КАК НарядЗаданиеСписокСпецификаций
		|ГДЕ
		|	НарядЗаданиеСписокСпецификаций.Ссылка = &Наряд
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокЛистов.Номенклатура КАК Номенклатура,
		|	СписокСпец.Спецификация.Номер КАК Спецификация,
		|	СписокСпец.Буква КАК Буква,
		|	ВЫБОР
		|		КОГДА НЕ СписокМатериаловЗаказчика.Номенклатура ЕСТЬ NULL
		|			ТОГДА СписокМатериаловЗаказчика.Комментарий
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ СписокПодЗаказ.Номенклатура ЕСТЬ NULL
		|					ТОГДА СписокПодЗаказ.Комментарий
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК Комментарий
		|ИЗ
		|	Документ.Спецификация.СписокЛистовНоменклатуры КАК СписокЛистов
		|		ЛЕВОЕ СОЕДИНЕНИЕ втСпецификации КАК СписокСпец
		|		ПО СписокЛистов.Ссылка = СписокСпец.Спецификация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Спецификация.СписокМатериаловПодЗаказ КАК СписокПодЗаказ
		|		ПО (СписокПодЗаказ.Ссылка = СписокЛистов.Ссылка)
		|			И (СписокПодЗаказ.Номенклатура = СписокЛистов.Номенклатура)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Спецификация.СписокМатериаловЗаказчика КАК СписокМатериаловЗаказчика
		|		ПО (СписокМатериаловЗаказчика.Ссылка = СписокЛистов.Ссылка)
		|			И (СписокМатериаловЗаказчика.Номенклатура = СписокЛистов.Номенклатура)
		|ГДЕ
		|	НЕ СписокСпец.Спецификация ЕСТЬ NULL
		|	И СписокЛистов.Номенклатура.Неноменклатурный
		|
		|УПОРЯДОЧИТЬ ПО
		|	СписокСпец.Спецификация.Номер";
		
		Результат = Запрос.Выполнить();
		
		Если НЕ Результат.Пустой() Тогда
			
			ТабДок.Вывести(ОбластьНеноменклатурныйШапка);
			
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				ОбластьНеноменклатурныйСтрока.Параметры.Номенклатура = Выборка.Номенклатура;
				ОбластьНеноменклатурныйСтрока.Параметры.Буква = Символ(64+Выборка.Буква);
				ОбластьНеноменклатурныйСтрока.Параметры.Спецификация = ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(Выборка.Спецификация);
				ОбластьНеноменклатурныйСтрока.Параметры.Комментарий = Выборка.Комментарий;
				
				ТабДок.Вывести(ОбластьНеноменклатурныйСтрока);
				
			КонецЦикла;
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Наряд);
		ВставлятьРазделительСтраниц = Истина;
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьХлыстовойМатериал(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ПечатьХлыстовойМатериал";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = Документы.НарядЗадание.ПолучитьМакет("ПечатьХлыстовойМатериал");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьХлыстСтрока = Макет.ПолучитьОбласть("ХлыстСтрока");
	ОбластьШапкаДляОбщегоКоличества = Макет.ПолучитьОбласть("ШапкаДляОбщегоКоличества");
	ОбластьСтрокаОбщегоКоличества = Макет.ПолучитьОбласть("СтрокаОбщегоКоличества");
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьСпецификацияСтрока = Макет.ПолучитьОбласть("СпецификацияСтрока");
	ОбластьПарковка = Макет.ПолучитьОбласть("Парковка");
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("МассивНарядов", МассивОбъектов);
	Запрос.Параметры.Вставить("Подразделение", МассивОбъектов[0].Подразделение);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НарядЗаданиеРаскройХлыстов.Ссылка КАК Ссылка,
	|	НарядЗаданиеРаскройХлыстов.Ссылка.Номер КАК НомерНаряда,
	|	НарядЗаданиеРаскройХлыстов.Ссылка.Дата КАК ДатаНаряда,
	|	НарядЗаданиеРаскройХлыстов.Количество КАК РазмерОтрезка,
	|	НарядЗаданиеРаскройХлыстов.Номенклатура КАК Номенклатура,
	|	НарядЗаданиеРаскройХлыстов.НомерХлыста КАК НомерХлыста,
	|	НарядЗаданиеРаскройХлыстов.Остаток,
	|	НарядЗаданиеРаскройХлыстов.РазмерХлыста КАК РазмерХлыста,
	|	НарядЗаданиеРаскройХлыстов.Спецификация,
	|	НарядЗаданиеРаскройХлыстов.Спецификация.Номер КАК НомерСпецификации,
	|	НарядЗаданиеРаскройХлыстов.Двери КАК Двери,
	|	НарядЗаданиеРаскройХлыстов.Номенклатура.Парковка КАК НоменклатураПарковка,
	|	НастройкиНоменклатуры.АдресХранения КАК АдресХранения,
	|	ВЫБОР
	|		КОГДА НЕ МатПодЗаказ.Комментарий ЕСТЬ NULL
	|			ТОГДА МатПодЗаказ.Комментарий
	|		ИНАЧЕ ЕСТЬNULL(МатЗаказчика.Комментарий, """")
	|	КОНЕЦ КАК КомментарийПодЗаказ,
	|	ВЫБОР
	|		КОГДА МатПодЗаказ.Номенклатура ЕСТЬ NULL
	|				И МатЗаказчика.Номенклатура ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ МатПодЗаказ.Номенклатура ЕСТЬ NULL
	|					ТОГДА 1
	|				ИНАЧЕ 2
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидПредоставления
	|ИЗ
	|	Документ.НарядЗадание.РаскройХлыстов КАК НарядЗаданиеРаскройХлыстов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиНоменклатуры.СрезПоследних(, Подразделение = &Подразделение) КАК НастройкиНоменклатуры
	|		ПО (НарядЗаданиеРаскройХлыстов.Номенклатура = НастройкиНоменклатуры.Номенклатура
	|				ИЛИ НарядЗаданиеРаскройХлыстов.Номенклатура.БазоваяНоменклатура = НастройкиНоменклатуры.Номенклатура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Спецификация.СписокМатериаловПодЗаказ КАК МатПодЗаказ
	|		ПО (МатПодЗаказ.Ссылка = НарядЗаданиеРаскройХлыстов.Спецификация)
	|			И (МатПодЗаказ.Номенклатура = НарядЗаданиеРаскройХлыстов.Номенклатура
	|				ИЛИ МатПодЗаказ.Номенклатура = НарядЗаданиеРаскройХлыстов.Номенклатура.БазоваяНоменклатура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Спецификация.СписокМатериаловЗаказчика КАК МатЗаказчика
	|		ПО (МатЗаказчика.Ссылка = НарядЗаданиеРаскройХлыстов.Спецификация)
	|			И (МатЗаказчика.Номенклатура = НарядЗаданиеРаскройХлыстов.Номенклатура
	|				ИЛИ МатЗаказчика.Номенклатура = НарядЗаданиеРаскройХлыстов.Номенклатура.БазоваяНоменклатура)
	|ГДЕ
	|	НарядЗаданиеРаскройХлыстов.Ссылка В(&МассивНарядов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НарядЗаданиеРаскройХлыстов.Номенклатура.Цвет,
	|	НомерСпецификации,
	|	НомерХлыста
	|ИТОГИ
	|	СУММА(РазмерОтрезка),
	|	МАКСИМУМ(РазмерХлыста),
	|	МАКСИМУМ(АдресХранения)
	|ПО
	|	Ссылка,
	|	НоменклатураПарковка,
	|	Номенклатура,
	|	НомерХлыста";
	
	ВставлятьРазделительСтраниц = Ложь;
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДокументы = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ОбластьЗаголовок.Параметры.НомерНаряда = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаДокументы.НомерНаряда);
		ОбластьЗаголовок.Параметры.ДатаНаряда = Формат(ВыборкаДокументы.ДатаНаряда, "ДЛФ=DD");
		ОбластьЗаголовок.Параметры.НомераСпецификаций = СформироватьНомераСпецификаций(ВыборкаДокументы.Ссылка);
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		//RonEXI: Убрал общее количество.
		//ТабДок.Вывести(ОбластьПустаяСтрока);
		//ТабДок.Вывести(ОбластьШапкаДляОбщегоКоличества);
		//
		//ВыборкаПарковка = ВыборкаДокументы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		//
		//Пока ВыборкаПарковка.Следующий() Цикл
		//	
		//	ВыборкаДляОбщегоКоличества = ВыборкаПарковка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		//	
		//	Пока ВыборкаДляОбщегоКоличества.Следующий() Цикл
		//		
		//		Если ЗначениеЗаполнено(ВыборкаДляОбщегоКоличества.Номенклатура) Тогда
		//			ОбластьСтрокаОбщегоКоличества.Параметры.Заполнить(ВыборкаДляОбщегоКоличества);
		//			ОбластьСтрокаОбщегоКоличества.Параметры.ЕдИзм = ВыборкаДляОбщегоКоличества.Номенклатура.ЕдиницаИзмерения;
		//			ТабДок.Вывести(ОбластьСтрокаОбщегоКоличества);
		//		КонецЕсли;
		//		
		//	КонецЦикла;
		//	
		//КонецЦикла;
		
		ТабДок.Вывести(ОбластьПустаяСтрока);
		
		ТабДок.Вывести(ОбластьШапка);
		
		ВыборкаПарковка = ВыборкаДокументы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПарковка.Следующий() Цикл
			
			ОбластьПарковка.Параметры.Парковка = ВыборкаПарковка.НоменклатураПарковка;
			ТабДок.Вывести(ОбластьПарковка);
			
			ВыборкаНоменклатура = ВыборкаПарковка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНоменклатура.Следующий() Цикл
				
				ВыборкаХлысты = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаХлысты.Следующий() Цикл
					
					ОбластьХлыстСтрока.Параметры.Заполнить(ВыборкаХлысты);
					ТабДок.Вывести(ОбластьХлыстСтрока);
					
					РазмерЗаготовки = ВыборкаХлысты.РазмерХлыста;
					
					ВыборкаСпецификации = ВыборкаХлысты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаСпецификации.Следующий() Цикл
						
						Если НЕ ВыборкаСпецификации.Остаток Тогда
							
							ОбластьСпецификацияСтрока = Макет.ПолучитьОбласть("СпецификацияСтрока");
							ОбластьСпецификацияСтрока.Параметры.Заполнить(ВыборкаСпецификации);
							СтрокаСпецификация = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаСпецификации.НомерСпецификации);
							ОбластьСпецификацияСтрока.Параметры.Спецификация = ?(ЗначениеЗаполнено(ВыборкаСпецификации.КомментарийПодЗаказ),"( " + ВыборкаСпецификации.КомментарийПодЗаказ + " ) ", "") + СтрокаСпецификация;
							
							Если ВыборкаСпецификации.ВидПредоставления = 0 Тогда			
								ОбластьСпецификацияСтрока.Рисунки.Удалить(ОбластьСпецификацияСтрока.Рисунки.КартинкаПодЗаказ);
								ОбластьСпецификацияСтрока.Рисунки.Удалить(ОбластьСпецификацияСтрока.Рисунки.КартинкаПредоставляемый);
							ИначеЕсли ВыборкаСпецификации.ВидПредоставления = 1 Тогда
								ОбластьСпецификацияСтрока.Рисунки.Удалить(ОбластьСпецификацияСтрока.Рисунки.КартинкаПредоставляемый);
							Иначе
								ОбластьСпецификацияСтрока.Рисунки.Удалить(ОбластьСпецификацияСтрока.Рисунки.КартинкаПодЗаказ);
							КонецЕсли;
							
							ТабДок.Вывести(ОбластьСпецификацияСтрока);
							
						Иначе
							РазмерЗаготовки = ВыборкаСпецификации.РазмерХлыста - ВыборкаСпецификации.РазмерОтрезка;
						КонецЕсли;
						
					КонецЦикла;
					
					ОбластьСпецификацияСтрока = Макет.ПолучитьОбласть("СпецификацияСтрока");
					ОбластьСпецификацияСтрока.Параметры.Спецификация = "Размер заготовки";
					ОбластьСпецификацияСтрока.Параметры.РазмерОтрезка = РазмерЗаготовки;
					
					ОбластьСпецификацияСтрока.Рисунки.Удалить(ОбластьСпецификацияСтрока.Рисунки.КартинкаПодЗаказ);
					ОбластьСпецификацияСтрока.Рисунки.Удалить(ОбластьСпецификацияСтрока.Рисунки.КартинкаПредоставляемый);
					
					ОбластьСпецификацияСтрока.Области.СпецификацияСтрока.Шрифт = Новый Шрифт(,, Истина);
					ТабДок.Вывести(ОбластьСпецификацияСтрока);
					ОбластьСпецификацияСтрока.Области.СпецификацияСтрока.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
					ОбластьСпецификацияСтрока.Области.СпецификацияСтрока.Шрифт = Новый Шрифт(,, Ложь);
					
				КонецЦикла;
				
			КонецЦикла;
			
			ВставлятьРазделительСтраниц = Истина;
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла; // ВыборкаДокументы.Следующий()
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьХлыстМатСклад(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ПечатьХлыстМатСклад";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = Документы.НарядЗадание.ПолучитьМакет("ПечатьХлыстовойМатериаСклад");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПарковка = Макет.ПолучитьОбласть("Парковка");
	
	ОбластьСтрокаСпецификация = Макет.ПолучитьОбласть("СтрокаСпецификация");
	ОбластьСтрокаНоменклатура = Макет.ПолучитьОбласть("СтрокаНоменклатура");
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Для Каждого Наряд ИЗ МассивОбъектов Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Наряд", Наряд);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Склад.Номенклатура КАК Номенклатура,
		|	Склад.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
		|	Склад.Номенклатура.Парковка КАК Парковка,
		|	Склад.ЕдиницаИзмерения,
		|	Склад.КоличествоСклад КАК Количество,
		|	Склад.Ссылка КАК Спецификация
		|ИЗ
		|	Документ.Спецификация.СкладГотовойПродукции КАК Склад
		|ГДЕ
		|	Склад.Ссылка В
		|			(ВЫБРАТЬ
		|				СписокСпец.Спецификация
		|			ИЗ
		|				Документ.НарядЗадание.СписокСпецификаций КАК СписокСпец
		|			ГДЕ
		|				СписокСпец.Ссылка = &Наряд)
		|	И Склад.КоличествоСклад > 0
		|	И Склад.Номенклатура.НоменклатурнаяГруппа.ВидМатериала = ЗНАЧЕНИЕ(Перечисление.ВидыМатериалов.Хлыстовой)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Парковка,
		|	Склад.Ссылка.Номер,
		|	Склад.Номенклатура.Наименование,
		|	Склад.КоличествоСклад УБЫВ
		|ИТОГИ ПО
		|	Парковка,
		|	Спецификация";
		
		Результат = Запрос.Выполнить();
		
		Если НЕ Результат.Пустой() Тогда
			
			НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
			
			ОбластьЗаголовок.Параметры.НомерНаряда = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Наряд.Номер);
			ОбластьЗаголовок.Параметры.ДатаНаряда = Формат(Наряд.ДатаИзготовления,"ДФ=dd.MM.yyyy");
			ОбластьЗаголовок.Параметры.НомераСпецификаций = СформироватьНомераСпецификаций(Наряд);
			
			ТабДок.Вывести(ОбластьЗаголовок);
			
			ВыборкаПарковка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Парковка");
			
			Пока ВыборкаПарковка.Следующий() Цикл
				
				ОбластьПарковка.Параметры.Парковка = ВыборкаПарковка.Парковка;
				
				ТабДок.Вывести(ОбластьПарковка);
				ТабДок.Вывести(ОбластьШапка);
				
				ВыборкаСпец = ВыборкаПарковка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Спецификация");
				
				Пока ВыборкаСпец.Следующий() Цикл
					
					ОбластьСтрокаСпецификация.Параметры.Спецификация = ВыборкаСпец.Спецификация;
					ТабДок.Вывести(ОбластьСтрокаСпецификация); 
					
					ВыборкаНом = ВыборкаСпец.Выбрать();
					
					Пока ВыборкаНом.Следующий() Цикл
						
						ОбластьСтрокаНоменклатура.Параметры.Заполнить(ВыборкаНом);
						ТабДок.Вывести(ОбластьСтрокаНоменклатура); 
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ВставлятьРазделительСтраниц = Истина;
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Наряд);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции
