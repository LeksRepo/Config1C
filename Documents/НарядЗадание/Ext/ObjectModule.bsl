
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	МассивСпецификаций = СписокСпецификаций.ВыгрузитьКолонку("Спецификация");
	
	ЛексСервер.УвеличитьДополнительныйЛимит(МассивСпецификаций, Движения, Дата, Подразделение);
	
	Для Каждого Элемент Из СписокСпецификаций Цикл
		Если Документы.Спецификация.ПолучитьСтатусСпецификации(Элемент.Спецификация) = Перечисления.СтатусыСпецификации.Размещен Тогда
			Документы.Спецификация.УстановитьСтатусСпецификации(Элемент.Спецификация, Перечисления.СтатусыСпецификации.ПереданВЦех);
		КонецЕсли;
	КонецЦикла;
	
	Движения.Управленческий.Записывать = Истина;
	
КонецПроцедуры

Функция ПовторнаяПередачаВПроизводство()
	
	ПовторнаяПередача = Ложь;
	
	Спецификации = СписокСпецификаций.ВыгрузитьКолонку("Спецификация");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НарядСсылка", Ссылка);
	Запрос.УстановитьПараметр("Спецификации", Спецификации);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НарядЗаданиеСписокСпецификаций.Спецификация,
	|	НарядЗаданиеСписокСпецификаций.Ссылка,
	|	НарядЗаданиеСписокСпецификаций.НомерСтроки
	|ИЗ
	|	Документ.НарядЗадание.СписокСпецификаций КАК НарядЗаданиеСписокСпецификаций
	|ГДЕ
	|	НарядЗаданиеСписокСпецификаций.Спецификация В(&Спецификации)
	|	И НарядЗаданиеСписокСпецификаций.Ссылка <> &НарядСсылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ПовторнаяПередача = Истина;
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 уже передана в производство документом %2", Выборка.Спецификация, Выборка.Ссылка);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект);
		// Можно и к полю привязать, но тогда нужна таблица значений с номером строки
		
	КонецЦикла;
	
	Возврат ПовторнаяПередача;
	
КонецФункции

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Изменение статусов спецификаций
	Для Каждого Элемент Из СписокСпецификаций Цикл
		
		Если Документы.Спецификация.ПолучитьСтатусСпецификации(Элемент.Спецификация) = Перечисления.СтатусыСпецификации.ПереданВЦех Тогда
			
			Документы.Спецификация.УстановитьСтатусСпецификации(Элемент.Спецификация, Перечисления.СтатусыСпецификации.Размещен);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Отказ = ПовторнаяПередачаВПроизводство();
	
	Если НЕ ЗначениеЗаполнено(ДатаИзготовления) Тогда
		ДатаИзготовления = Дата + 86400;
		Если ДеньНедели(ДатаИзготовления) Тогда
			ДатаИзготовления = Дата + 86400;
		КонецЕсли;
	КонецЕсли;
	
	МассивСпецификаций = СписокСпецификаций.ВыгрузитьКолонку("Спецификация");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МассивСпецификаций", МассивСпецификаций);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НарядЗаданиеСписокСпецификаций.Спецификация
	|ИЗ
	|	Документ.НарядЗадание.СписокСпецификаций КАК НарядЗаданиеСписокСпецификаций
	|ГДЕ
	|	НЕ НарядЗаданиеСписокСпецификаций.Спецификация В (&МассивСпецификаций)
	|	И НарядЗаданиеСписокСпецификаций.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Документы.Спецификация.ПолучитьСтатусСпецификации(Выборка.Спецификация) = Перечисления.СтатусыСпецификации.ПереданВЦех Тогда
				Документы.Спецификация.УстановитьСтатусСпецификации(Выборка.Спецификация, Перечисления.СтатусыСпецификации.Размещен);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаДокумента = СписокСпецификаций.Итог("СуммаНаряда");
	
КонецПроцедуры

Функция ПолучитьСтрокуРаскроя(СписокЗеркал) 
	
	ДанныеДляРаскроя = "%РОСПИЛ%" + "☻";
	Реквизиты 		= Новый Структура;//Массив;
	
	Реквизиты.Вставить("Толщина", "");
	Реквизиты.Вставить("Номенклатура", "");
	Реквизиты.Вставить("СокращенноеНом", "");
	Реквизиты.Вставить("Кант", "");
	Реквизиты.Вставить("СокрКант", "");
	Реквизиты.Вставить("ВторойКант", "");
	Реквизиты.Вставить("СокрВторойКант", "");
	Реквизиты.Вставить("Кромка045мм", "");
	Реквизиты.Вставить("Сокр045мм", "");
	Реквизиты.Вставить("Кромка2мм", "");
	Реквизиты.Вставить("Сокр2мм", "");
	Реквизиты.Вставить("АдресМонтажа", "");
	Реквизиты.Вставить("Контрагент", "");
	
	Для каждого Элемент Из Реквизиты Цикл
		
		ДанныеДляРаскроя = ДанныеДляРаскроя + Элемент.Значение + "☺";
		
	КонецЦикла;
	
	ДанныеДляРаскроя = ДанныеДляРаскроя + "☺" + "☻";
	
	ДанныеДляРаскроя = ДанныеДляРаскроя + "☺" + "☺" + "☺" + "☺" + 0 + "☺" + 3600 + "☻";
	
	
	Для Каждого Строка Из СписокЗеркал Цикл
		
		ОсновныеРеквизиты 	= Новый Массив;
		
		ОсновныеРеквизиты.Добавить(Строка.Номенклатура);
		ОсновныеРеквизиты.Добавить("");//Строка.НоменклатураДляСклеивания;
		ОсновныеРеквизиты.Добавить(Строка.ВысотаДетали);
		ОсновныеРеквизиты.Добавить(Строка.ШиринаДетали);
		ОсновныеРеквизиты.Добавить("");//Строка.РадиусЛевоВерх);
		ОсновныеРеквизиты.Добавить("");//Строка.РадиусПравоВерх);
		ОсновныеРеквизиты.Добавить("");//ПравыйНижнийРадиус);
		ОсновныеРеквизиты.Добавить("");//Строка.РадиусЛевоНиз);
		ОсновныеРеквизиты.Добавить("");//Строка.КривойПилСверху);
		ОсновныеРеквизиты.Добавить("");//Строка.КривойПилСнизу);
		ОсновныеРеквизиты.Добавить("");//Строка.КривойПилСлева);
		ОсновныеРеквизиты.Добавить("");//Строка.КривойПилСправа);
		ОсновныеРеквизиты.Добавить(""); //Эксц1,
		ОсновныеРеквизиты.Добавить(""); //Эксц2,
		ОсновныеРеквизиты.Добавить(""); //Эксц3,
		ОсновныеРеквизиты.Добавить(""); //Эксц4,
		ОсновныеРеквизиты.Добавить("");//Число(Строка.СоблюдениеТекстуры));
		ОсновныеРеквизиты.Добавить("");//Число(Строка.СоблюдениеТекстуры));  //СоблюдениеТекстуры2
		ОсновныеРеквизиты.Добавить(1);//Строка.Количество);
		ОсновныеРеквизиты.Добавить("");//Строка.Комментарий);
		ОсновныеРеквизиты.Добавить("");//Надпись);
		ОсновныеРеквизиты.Добавить(Строка.НоменклатураОсновнаяПоСкладу.ШиринаДетали); //ШиринаПолотна,
		ОсновныеРеквизиты.Добавить(Строка.НоменклатураОсновнаяПоСкладу.ДлинаДетали); //ДлинаПолотна,
		ОсновныеРеквизиты.Добавить("");//Строка.ВыборМебельнойКромкиСверху.КраткоеНаименование);
		ОсновныеРеквизиты.Добавить("");//Строка.ВыборМебельнойКромкиСнизу.КраткоеНаименование);
		ОсновныеРеквизиты.Добавить("");//Строка.ВыборМебельнойКромкиСлева.КраткоеНаименование);
		ОсновныеРеквизиты.Добавить("");//Строка.ВыборМебельнойКромкиСправа.КраткоеНаименование);
		ОсновныеРеквизиты.Добавить(0); //Нх1,
		ОсновныеРеквизиты.Добавить(0); //Нх2,
		ОсновныеРеквизиты.Добавить(0); //Нх3,
		ОсновныеРеквизиты.Добавить(0); //Нх4,
		ОсновныеРеквизиты.Добавить("");//СтрокаОтверстий);
		ОсновныеРеквизиты.Добавить("");//ЕвропазСверху); //(Отверстие европаз)
		ОсновныеРеквизиты.Добавить("");//ЕвропазСнизу); //(Отверстие европаз)
		ОсновныеРеквизиты.Добавить("");//ЕвропазСлева); //(Отверстие европаз)
		ОсновныеРеквизиты.Добавить("");//ЕвропазСправа); //(Отверстие европаз)
		ОсновныеРеквизиты.Добавить("☻"); //КонецДетали
		
		
		Для каждого Элемент Из ОсновныеРеквизиты Цикл
			
			Данные = "";
			
			Если Не Элемент = "☻" Тогда
				
				Данные = Данные + Элемент + "☺";
				
			Иначе
				
				//Если Строка.НеТорцевать Тогда
				//	
				//	Данные = Данные + "1" + Элемент;
				//	
				//Иначе
				
				Данные = Данные + Элемент;
				
				//КонецЕсли;
				
			КонецЕсли;
			
			ДанныеДляРаскроя = ДанныеДляРаскроя + Данные;
			
		КонецЦикла;
	КонецЦикла;
	
	Если ДанныеДляРаскроя <> "☻☺☺☺☺☺☺☺☺☺☺☺☺☺☻☺☺☺☺☺☻" Тогда
		
		СтрокаРаскроя = ЛексКлиентСервер.ПеревестиСтрокуВКодыСимволов(ДанныеДляРаскроя);
		
	Иначе 
		
		СтрокаРаскроя = Неопределено;
		
	КонецЕсли;
	
	Возврат СтрокаРаскроя;
	
КонецФункции

Процедура ПриЗаписи(Отказ)
	
	Если СписокЗеркал.Количество() > 0 Тогда
		
		СтрокаРаскроя = ПолучитьСтрокуРаскроя(СписокЗеркал);
		Если СтрокаРаскроя <> Неопределено Тогда
			НаборЗаписей = РегистрыСведений.РаскройДеталей.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(Ссылка);		
			НаборЗаписей.Прочитать();                   
			
			Запись = ?(НаборЗаписей.Количество() = 0, НаборЗаписей.Добавить(), НаборЗаписей[0]);
			Запись.Объект = Ссылка;                                   
			Запись.СтрокаРаскрой = СтрокаРаскроя;
			
			НаборЗаписей.Записать();            
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
