////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция ПолучитьТаблицуМатериалов(МассивСпецификаций)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("Склад", Объект.Подразделение.ОсновнойСклад);
	Запрос.УстановитьПараметр("МассивСпецификация", МассивСпецификаций);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СпецификацияСписокНоменклатуры.ПредоставитЗаказчик КАК ПредоставитЗаказчик,
	|	СУММА(СпецификацияСписокНоменклатуры.Количество) КАК ТребуетсяПоСпецификациям
	|ПОМЕСТИТЬ СписокНоменклатуры
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка В(&МассивСпецификация)
	|	И НЕ СпецификацияСписокНоменклатуры.ЧерезСклад
	|	И СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура,
	|	СпецификацияСписокНоменклатуры.ПредоставитЗаказчик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ОстаткиНаСкладе.Субконто2 КАК Справочник.Номенклатура).Базовый
	|			ТОГДА ОстаткиНаСкладе.Субконто2
	|		ИНАЧЕ ВЫРАЗИТЬ(ОстаткиНаСкладе.Субконто2 КАК Справочник.Номенклатура).БазоваяНоменклатура
	|	КОНЕЦ КАК Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиНаСкладе.Субконто2.Базовый
	|				ТОГДА ОстаткиНаСкладе.КоличествоОстаток
	|			ИНАЧЕ ОстаткиНаСкладе.Субконто2.КоэффициентБазовых * ОстаткиНаСкладе.КоличествоОстаток
	|		КОНЕЦ) КАК ОстатокНаСкладе
	|ПОМЕСТИТЬ ОстаткиНаСкладе
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Остатки(
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.МатериалыНаСкладе),
	|			,
	|			Подразделение = &Подразделение
	|				И Субконто1 = &Склад) КАК ОстаткиНаСкладе
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ОстаткиНаСкладе.Субконто2 КАК Справочник.Номенклатура).Базовый
	|			ТОГДА ОстаткиНаСкладе.Субконто2
	|		ИНАЧЕ ВЫРАЗИТЬ(ОстаткиНаСкладе.Субконто2 КАК Справочник.Номенклатура).БазоваяНоменклатура
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписокНоменклатуры.Номенклатура,
	|	СписокНоменклатуры.ТребуетсяПоСпецификациям КАК КоличествоТребуется,
	|	СписокНоменклатуры.ПредоставитЗаказчик КАК ПредоставитЗаказчик,
	|	ОстаткиВЦеху.КоличествоОстаток КАК ОстатокВЦеху,
	|	ОстаткиНаСкладе.ОстатокНаСкладе
	|ИЗ
	|	СписокНоменклатуры КАК СписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
	|				,
	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ОсновноеПроизводство),
	|				,
	|				Подразделение = &Подразделение
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СписокНоменклатуры.Номенклатура
	|						ИЗ
	|							СписокНоменклатуры)) КАК ОстаткиВЦеху
	|		ПО СписокНоменклатуры.Номенклатура = ОстаткиВЦеху.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаСкладе КАК ОстаткиНаСкладе
	|		ПО СписокНоменклатуры.Номенклатура = ОстаткиНаСкладе.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	СписокНоменклатуры.Номенклатура.НоменклатурнаяГруппа,
	|	СписокНоменклатуры.Номенклатура.Наименование";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Процедура ОбновитьСписокВыбораНоменклатуры()
	
	МассивНоменклатуры = Объект.СписокНоменклатуры.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	
	СписокСпецификаций = Объект.СписокСпецификаций.Выгрузить().ВыгрузитьКолонку("Спецификация");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(Номенклатура.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ОсновнаяНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Базовый
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура.БазоваяНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацияСписокНоменклатуры.Ссылка КАК Спецификация,
	|	ЕСТЬNULL(ОсновнаяНоменклатура.Ссылка, СпецификацияСписокНоменклатуры.Номенклатура) КАК Номенклатура,
	|	СУММА(СпецификацияСписокНоменклатуры.Количество * ЕСТЬNULL(ОсновнаяНоменклатура.Ссылка.КоэффициентБазовых, 1)) КАК Количество,
	|	СпецификацияСписокНоменклатуры.ПредоставитЗаказчик КАК ПредоставитЗаказчик
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОсновнаяНоменклатура КАК ОсновнаяНоменклатура
	|		ПО СпецификацияСписокНоменклатуры.Номенклатура = ОсновнаяНоменклатура.Ссылка.БазоваяНоменклатура
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка В(&СписокСпецификаций)
	|	И ЕСТЬNULL(ОсновнаяНоменклатура.Ссылка, СпецификацияСписокНоменклатуры.Номенклатура) В (&Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Ссылка,
	|	ЕСТЬNULL(ОсновнаяНоменклатура.Ссылка, СпецификацияСписокНоменклатуры.Номенклатура),
	|	СпецификацияСписокНоменклатуры.ПредоставитЗаказчик";
	Запрос.УстановитьПараметр("СписокСпецификаций", СписокСпецификаций);
	Запрос.УстановитьПараметр("Номенклатура", МассивНоменклатуры);
	
	ТаблицаРасшифровки.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСпецификации(АдресТаблицы)
	
	ТЗ = ПолучитьИзВременногоХранилища(АдресТаблицы);
	Объект.СписокСпецификаций.Загрузить(ТЗ);
	ЗаполнитьНоменклатуройСервер();
	ПроверитьНаличиеКомплектаций(Объект.СписокСпецификаций.Выгрузить().ВыгрузитьКолонку("Спецификация"));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНоменклатуройСервер() Экспорт 
	
	ТаблицаСпецификаций = Объект.СписокСпецификаций.Выгрузить();
	МассивСпецификаций = ТаблицаСпецификаций.ВыгрузитьКолонку("Спецификация");
	
	ТаблицаНоменклатуры = ПолучитьТаблицуМатериалов(МассивСпецификаций);
	Объект.СписокНоменклатуры.Загрузить(ТаблицаНоменклатуры);
	
	ОбновитьСписокВыбораНоменклатуры();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСписокВыбораНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьСписокВыбораНоменклатуры();
	ПроверитьНаличиеКомплектаций(Объект.СписокСпецификаций.Выгрузить().ВыгрузитьКолонку("Спецификация"));
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	ПроверитьНаличиеКомплектаций(Объект.СписокСпецификаций.Выгрузить().ВыгрузитьКолонку("Спецификация"));
	
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеКомплектаций(МассивСпецификаций)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСпецификаций", МассивСпецификаций);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Спец.Ссылка КАК Спецификация,
	|	ВЫБОР
	|		КОГДА Компл.Ссылка ЕСТЬ NULL 
	|				И Спец.ТребуетсяКомплектация
	|				Или НЕ Компл.Проведен
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК НеобходимаКомплектация
	|ИЗ
	|	Документ.Спецификация КАК Спец
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Комплектация КАК Компл
	|		ПО (Компл.Спецификация = Спец.Ссылка)
	|ГДЕ
	|	Спец.Ссылка В(&МассивСпецификаций)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Для каждого Строка Из Объект.СписокСпецификаций Цикл
			
			Если Строка.Спецификация = ВыборкаДетальныеЗаписи.Спецификация Тогда
				
				Строка.ЕстьПроведеннаяКомплектация = ВыборкаДетальныеЗаписи.НеобходимаКомплектация;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ВыбратьСпецификации(Команда)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = "Табличные части будут изменены." + Символы.ПС + "Продолжить?" ;
	
	Если Объект.СписокСпецификаций.Количество() > 0 
		И Вопрос(Текст, Режим, 0) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	АдресТаблицы = ОткрытьФормуМодально("ОбщаяФорма.ФормаВыбораСпецификации", Новый Структура("Подразделение, ТЗ, Статус, УпорядочитьПоДате", Объект.Подразделение, Объект.СписокСпецификаций, ПредопределенноеЗначение("Перечисление.СтатусыСпецификации.Размещен"), Истина), ЭтаФорма);
	Если АдресТаблицы <> Неопределено Тогда
		ЗагрузитьСпецификации(АдресТаблицы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНоменклатуру(Команда)
	
	ЗаполнитьНоменклатуройСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСпецификацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьЗначение(Элементы.СписокСпецификаций.ТекущиеДанные.Спецификация);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Номенклатура = Элемент.ТекущиеДанные.Номенклатура;
		ПредоставитЗаказчик = Элемент.ТекущиеДанные.ПредоставитЗаказчик;
		
		ОтборСтруктура = Новый Структура;
		ОтборСтруктура.Вставить("ПредоставитЗаказчик",ПредоставитЗаказчик);
		
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			ОтборСтруктура.Вставить("Номенклатура",Номенклатура);
		Иначе
			ОтборСтруктура.Вставить("Номенклатура",ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
		КонецЕсли;
		
		ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтруктура);
		Элементы.ТаблицаРасшифровки.ОтборСтрок = ОтборСтрок;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗеркалПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Элементы.СписокЗеркалНоменклатураОсновнаяПоСкладу.СписокВыбора.ЗагрузитьЗначения(ТекущиеДанные.СписокВыбора.ВыгрузитьЗначения());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСпецификацийСпецификацияПриИзменении(Элемент)
	
	Элементы.СписокСпецификаций.ТекущиеДанные.ОсобыеУслуги = ЛексСервер.ЗначенияРеквизитовОбъекта(Элементы.СписокСпецификаций.ТекущиеДанные.Спецификация, "ОсобыеУслуги").ОсобыеУслуги;
	ПроверитьНаличиеКомплектаций(Элементы.СписокСпецификаций.ТекущиеДанные.Спецификация);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКомплектации(МассивСпецификаций)
	
	Результат = Новый Массив;
	
	Для каждого Спецификация Из МассивСпецификаций Цикл
		
		Комплектация = Документы.Комплектация.ПолучитьКомплектацию(Спецификация);
		
		Если ЗначениеЗаполнено(Комплектация) Тогда
			Результат.Добавить(Комплектация);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьКомплектацию(Команда)
	
	МассивСпецификаций = Новый Массив;
	
	Для каждого ЭлементСтроки Из Объект.СписокСпецификаций Цикл
		Идентификатор = ЭлементСтроки.ПолучитьИдентификатор();
		Если Элементы.СписокСпецификаций.ВыделенныеСтроки.Найти(Идентификатор) <> Неопределено Тогда
			МассивСпецификаций.Добавить(ЭлементСтроки.Спецификация);
		КонецЕсли;
	КонецЦикла;
	
	МассивКомплектаций = ПолучитьКомплектации(МассивСпецификаций);
	
	Для каждого Комплектация Из МассивКомплектаций Цикл
		
		ОткрытьФорму("Документ.Комплектация.ФормаОбъекта", Новый Структура("Ключ",Комплектация), Элементы.СписокСпецификаций);
		
	КонецЦикла;
	
	Если МассивКомплектаций.Количество() <> МассивСпецификаций.Количество() Тогда
		
		ПараметрыФормы = Новый Структура;
		
		ТД = Элементы.СписокСпецификаций.ТекущиеДанные;
		Если ТекущаяДата() <> Неопределено Тогда
			ПараметрыФормы.Вставить("Основание", ТД.Спецификация);
		КонецЕсли;
		
		ОткрытьФорму("Документ.Комплектация.ФормаОбъекта", ПараметрыФормы, Элементы.СписокСпецификаций);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСпецификацийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.Спецификация") Тогда
		
		ПроверитьНаличиеКомплектаций(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРасшифровкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаРасшифровки.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Спецификация = ТекущиеДанные.Спецификация;
		
		Если ЗначениеЗаполнено(Спецификация) Тогда
			ОткрытьЗначение(Спецификация);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
