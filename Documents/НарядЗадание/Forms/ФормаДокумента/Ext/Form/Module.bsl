
#Область Общего_назначения

&НаКлиентеНаСервереБезКонтекста
Функция ДомножитьДоЦелого(фЧисло)
	
	Пока фЧисло % 1 <> 0 Цикл
		
		фЧисло = фЧисло * 10;
		
	КонецЦикла;
	
	Возврат фЧисло;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОсновнуюПоСкладу(фПодразделение, фНоменклатура)
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", фНоменклатура);
	Запрос.УстановитьПараметр("Подразделение", фПодразделение);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НоменклатураПодразделений.ОсновнаяПоСкладу
	|ИЗ
	|	РегистрСведений.НоменклатураПодразделений КАК НоменклатураПодразделений
	|ГДЕ
	|	НоменклатураПодразделений.Подразделение = &Подразделение
	|	И НоменклатураПодразделений.Номенклатура = &Номенклатура";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Результат = Выборка.ОсновнаяПоСкладу;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьКоличествоМатериалов(тзНоменклатура)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("тзНоменклатура", тзНоменклатура);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	тзНоменклатура.Номенклатура,
	|	тзНоменклатура.Количество,
	|	тзНоменклатура.ПредоставитЗаказчик
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	&тзНоменклатура КАК тзНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатура.Номенклатура,
	|	СУММА(втНоменклатура.Количество) КАК Количество
	|ПОМЕСТИТЬ втСгрупНоменклатура
	|ИЗ
	|	втНоменклатура КАК втНоменклатура
	|ГДЕ
	|	НЕ втНоменклатура.ПредоставитЗаказчик
	|
	|СГРУППИРОВАТЬ ПО
	|	втНоменклатура.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втСгрупНоменклатура.Номенклатура,
	|	втСгрупНоменклатура.Количество КАК КоличествоТребуется
	|ИЗ
	|	втСгрупНоменклатура КАК втСгрупНоменклатура";
	
	тзРезультат = Запрос.Выполнить().Выгрузить();
	
	Для каждого Строка Из тзРезультат Цикл
		
		Если Строка.Номенклатура.НоменклатурнаяГруппа.ВидМатериала = Перечисления.ВидыМатериалов.Хлыстовой Тогда
			
			Структура = ОпределитьКоличествоХлыстовогоМатериала(Строка.Номенклатура);
			
			Если НЕ Структура.Ошибка Тогда
				
				Строка.Номенклатура = Структура.ОсновнаяПоСкладу;
				Строка.КоличествоТребуется = Структура.КоличествоХлыстов;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат тзРезультат;
	
КонецФункции

&НаСервере
Функция ПолучитьНоменклатуруСпецификаций(МассивСпецификаций)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСпецификация", МассивСпецификаций);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Ссылка КАК Спецификация,
	|	СпецификацияСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(СпецификацияСписокНоменклатуры.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокНоменклатуры.Номенклатура.НоменклатурнаяГруппа.ВидМатериала = ЗНАЧЕНИЕ(Перечисление.ВидыМатериалов.Хлыстовой)
	|			ТОГДА СпецификацияСписокНоменклатуры.НомерСтроки
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НомерСтроки,
	|	СпецификацияСписокНоменклатуры.ПредоставитЗаказчик
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка В(&МассивСпецификация)
	|	И НЕ СпецификацияСписокНоменклатуры.ЧерезСклад
	|	И СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура,
	|	СпецификацияСписокНоменклатуры.Ссылка,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокНоменклатуры.Номенклатура.НоменклатурнаяГруппа.ВидМатериала = ЗНАЧЕНИЕ(Перечисление.ВидыМатериалов.Хлыстовой)
	|			ТОГДА СпецификацияСписокНоменклатуры.НомерСтроки
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	СпецификацияСписокНоменклатуры.ПредоставитЗаказчик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втДанные.Номенклатура
	|ИЗ
	|	втДанные КАК втДанные
	|ГДЕ
	|	втДанные.Номенклатура.НоменклатурнаяГруппа.ВидМатериала = ЗНАЧЕНИЕ(Перечисление.ВидыМатериалов.Хлыстовой)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Спецификация,
	|	втДанные.Номенклатура,
	|	втДанные.Количество,
	|	втДанные.НомерСтроки,
	|	втДанные.ПредоставитЗаказчик
	|ИЗ
	|	втДанные КАК втДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Количество,
	|	втДанные.Номенклатура,
	|	втДанные.Спецификация
	|ИЗ
	|	втДанные КАК втДанные
	|ГДЕ
	|	втДанные.Номенклатура.НоменклатурнаяГруппа.ВидМатериала = ЗНАЧЕНИЕ(Перечисление.ВидыМатериалов.Хлыстовой)";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Ответ = Новый Структура;
	Ответ.Вставить("тзХлыстовойМатериал", РезультатЗапроса[1].Выгрузить());
	Ответ.Вставить("тзНоменклатура", РезультатЗапроса[2].Выгрузить());
	// { Васильев Александр Леонидович [13.10.2015]
	// Удалить позже...
	Ответ.Вставить("тзРаскройХлыстов", РезультатЗапроса[3].Выгрузить());
	// } Васильев Александр Леонидович [13.10.2015]
	
	Возврат Ответ;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьСпецификации(АдресТаблицы)
	
	Если ЭтоАдресВременногоХранилища(АдресТаблицы) Тогда
		ТЗ = ПолучитьИзВременногоХранилища(АдресТаблицы);
		Объект.СписокСпецификаций.Загрузить(ТЗ);
		ЗаполнитьНоменклатуройСервер();
		ПроверитьНаличиеКомплектаций(Объект.СписокСпецификаций.Выгрузить().ВыгрузитьКолонку("Спецификация"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область События_формы

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПроверитьНаличиеКомплектаций(Объект.СписокСпецификаций.Выгрузить().ВыгрузитьКолонку("Спецификация"));
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	ПроверитьНаличиеКомплектаций(Объект.СписокСпецификаций.Выгрузить().ВыгрузитьКолонку("Спецификация"));
	
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ВыбратьСпецификации(Команда)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = "Табличные части будут изменены." + Символы.ПС + "Продолжить?" ;
	
	Если Объект.СписокСпецификаций.Количество() > 0 
		И Вопрос(Текст, Режим, 0) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ПаараметрыФормы = Новый Структура;
	ПаараметрыФормы.Вставить("Подразделение", Объект.Подразделение);
	ПаараметрыФормы.Вставить("ТЗ", Объект.СписокСпецификаций);
	ПаараметрыФормы.Вставить("Статус", ПредопределенноеЗначение("Перечисление.СтатусыСпецификации.Размещен"));
	ПаараметрыФормы.Вставить("УпорядочитьПоДате", Истина);
	
	АдресТаблицы = ОткрытьФормуМодально("ОбщаяФорма.ФормаВыбораСпецификации", ПаараметрыФормы, ЭтаФорма);
	Если АдресТаблицы <> Неопределено Тогда
		ЗагрузитьСпецификации(АдресТаблицы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНоменклатуру(Команда)
	
	ЗаполнитьНоменклатуройСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНоменклатуройСервер() Экспорт 
	
	ТаблицаСпецификаций = Объект.СписокСпецификаций.Выгрузить();
	МассивСпецификаций = ТаблицаСпецификаций.ВыгрузитьКолонку("Спецификация");
	
	Таблицы = ПолучитьНоменклатуруСпецификаций(МассивСпецификаций);
	Объект.СписокНоменклатурыПоСпецификациям.Загрузить(Таблицы.тзНоменклатура);
	Объект.СписокХлыстовыхМатериалов.Загрузить(Таблицы.тзХлыстовойМатериал);
	Объект.РаскройХлыстов.Загрузить(Таблицы.тзРаскройХлыстов);
	
	тзНоменклатураОстатки = ПолучитьКоличествоМатериалов(Таблицы.тзНоменклатура);
	Объект.СписокНоменклатуры.Загрузить(тзНоменклатураОстатки);
	
	ПерекроитьВесХлыстовойМатериал();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьРаскройНаХлысты(Команда)
	
	СформироватьРаскройНаХлыстыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьРаскройНаХлыстыНаСервере()
	
	ТекущиеДанные = Элементы.СписокХлыстовыхМатериалов.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ПерекроитьХлысты(ТекущиеДанные.Номенклатура);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Таблица_СписокНоменклатуры

&НаКлиенте
Процедура СписокНоменклатурыПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		Номенклатура = Элемент.ТекущиеДанные.Номенклатура;
		СвойстваНоменклатуры = ЛексСервер.ЗначенияРеквизитовОбъекта(Номенклатура, "Базовый, БазоваяНоменклатура");
		Если НЕ СвойстваНоменклатуры.Базовый Тогда
			Номенклатура = СвойстваНоменклатуры.БазоваяНоменклатура;
		КонецЕсли;
		
		ОтборСтруктура = Новый Структура;
		
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			ОтборСтруктура.Вставить("Номенклатура", Номенклатура);
		Иначе
			ОтборСтруктура.Вставить("Номенклатура", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
		КонецЕсли;
		
		ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтруктура);
		Элементы.СписокНоменклатурыПоСпецификациям.ОтборСтрок = ОтборСтрок;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область Таблица_СписокСпецификаций

&НаКлиенте
Процедура СписокСпецификацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьЗначение(Элементы.СписокСпецификаций.ТекущиеДанные.Спецификация);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСпецификацийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.Спецификация") Тогда
		
		ПроверитьНаличиеКомплектаций(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСпецификацийСпецификацияПриИзменении(Элемент)
	
	Элементы.СписокСпецификаций.ТекущиеДанные.ОсобыеУслуги = ЛексСервер.ЗначенияРеквизитовОбъекта(Элементы.СписокСпецификаций.ТекущиеДанные.Спецификация, "ОсобыеУслуги").ОсобыеУслуги;
	ПроверитьНаличиеКомплектаций(Элементы.СписокСпецификаций.ТекущиеДанные.Спецификация);
	
КонецПроцедуры

#КонецОбласти

#Область Таблица_СписокНоменклатурыПоСпецификациям

&НаКлиенте
Процедура СписокНоменклатурыПоСпецификациямПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПоСпецификациямПередУдалением(Элемент, Отказ)
	
	Октаз = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПоСпецификациямИзОстатковПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокНоменклатурыПоСпецификациям.ТекущиеДанные;
	ИзменитьКоличествоТребуемогоМатериала(ТекущиеДанные.Номенклатура, ТекущиеДанные.Количество, ТекущиеДанные.ИзОстатков);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПоСпецификациямВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокНоменклатурыПоСпецификациям.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ОткрытьЗначение(ТекущиеДанные.Спецификация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Хлыстовой_раскрой

&НаСервере
Функция ОпределитьКоличествоХлыстовогоМатериала(Номенклатура, тзОстатки = Неопределено)
	
	Результат = Новый Структура;
	Результат.Вставить("Ошибка", Истина);
	
	// Заполненная кладовщиком таблица с обрезками хлыстов
	Если тзОстатки = Неопределено Тогда
		тзОстатки = Новый ТаблицаЗначений;
		тзОстатки.Колонки.Добавить("Количество");
	КонецЕсли;
	
	тзОстатки.Сортировать("Количество Возр");
	
	// Для хранения  используемых целых хлыстов и обрезков
	тзИспользуемыеХлысты = Новый ТаблицаЗначений;
	тзИспользуемыеХлысты.Колонки.Добавить("Количество");
	
	// Определение размеров хлыста, кратности
	
	ОсновнаяПоСкладу = ПолучитьОсновнуюПоСкладу(Объект.Подразделение, Номенклатура);
	
	Если НЕ ЗначениеЗаполнено(ОсновнаяПоСкладу) Тогда
		Возврат Результат;
	КонецЕсли;
	
	КоличествоХлыстов = 0;
	ДлинаХлыста = ОсновнаяПоСкладу.КоэффициентБазовых; // Тут вопрос. Брать коэффициент или длину.
	Кратность = Номенклатура.Кратность;
	
	Если Кратность > 0 И ДлинаХлыста % Кратность = 0 Тогда
		ЕдиницаОтрезка = Кратность;
		РазмерЦелогоХлыста = ДлинаХлыста / Кратность;
	Иначе
		ЕдиницаОтрезка = 0.001;
		РазмерЦелогоХлыста = ДлинаХлыста * 1000; // И да простит меня Аллах за такое упрощение.
	КонецЕсли;
	
	// Сбор отрезков хлыстового материала
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Номенклатура", Номенклатура);
	ПараметрыОтбора.Вставить("ИзОстатков", Ложь);
	СтрокиДеталей = Объект.СписокНоменклатурыПоСпецификациям.НайтиСтроки(ПараметрыОтбора);
	
	МассивДеталей = Новый Массив;
	
	Для каждого Деталь Из СтрокиДеталей Цикл
		
		Если Деталь.Количество > ДлинаХлыста Тогда
			
			МассивДеталей.Добавить((Деталь.Количество % ДлинаХлыста) / ЕдиницаОтрезка);
			КоличествоХлыстов = КоличествоХлыстов + Цел(Деталь.Количество / ДлинаХлыста);
			
		Иначе
			
			МассивДеталей.Добавить(Деталь.Количество / ЕдиницаОтрезка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Распределение отрезков на хлысте
	
	Пока МассивДеталей.Количество() > 0 Цикл
		
		Если тзОстатки.Количество() > 0 Тогда
			РазмерХлыста = тзОстатки[0].Количество;
			тзОстатки.Удалить(тзОстатки[0]);
		Иначе
			РазмерХлыста = РазмерЦелогоХлыста;
		КонецЕсли;
		
		НовыйМассив = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(МассивДеталей);
		// Основной алгоритм распределения отрезков на хлысте
		Структура = РегистрыСведений.РаскройДеталей.МаксимальнаяСуммаПодмножеств(НовыйМассив, РазмерЦелогоХлыста, 0);
		
		Для каждого РазмещеннаяДеталь Из Структура.Массив Цикл
			
			Индекс = МассивДеталей.Найти(РазмещеннаяДеталь);
			МассивДеталей.Удалить(Индекс);
			
		КонецЦикла;
		
		КоличествоХлыстов = КоличествоХлыстов + 1;
		НоваяСтрока = тзИспользуемыеХлысты.Добавить();
		НоваяСтрока.Количество = РазмерХлыста;
		
	КонецЦикла;
	
	Результат.Ошибка = Ложь;
	Результат.Вставить("ОсновнаяПоСкладу", ОсновнаяПоСкладу);
	Результат.Вставить("КоличествоХлыстов", КоличествоХлыстов);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ИзменитьКоличествоТребуемогоМатериала(Номенклатура, Количество, ИзОстатков);
	
	Строка = ПолучитьСтрокуСпискаНоменклатуры(Номенклатура);
	
	Если Строка = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Номенклатура.НоменклатурнаяГруппа.ВидМатериала = Перечисления.ВидыМатериалов.Хлыстовой Тогда
		
		Структура = ОпределитьКоличествоХлыстовогоМатериала(Номенклатура);
		
		Если НЕ Структура.Ошибка Тогда
			
			Строка.Номенклатура = Структура.ОсновнаяПоСкладу;
			Строка.КоличествоТребуется = Структура.КоличествоХлыстов;
			
		КонецЕсли;
		
	Иначе
		
		Если ИзОстатков Тогда
			КоличествоИзменения = -Количество;
		Иначе
			КоличествоИзменения = Количество;
		КонецЕсли;
		
		Строка.КоличествоТребуется = Строка.КоличествоТребуется + КоличествоИзменения;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьСтрокуСпискаНоменклатуры(Номенклатура)
	
	Строки = НайтиСтрокуСпискаНоменклатуры(Номенклатура);
	
	Если Строки.Количество() = 1 Тогда
		
		Строка = Строки[0];
		
	Иначе
		
		НоменклатураОтбора = ПолучитьОсновнуюПоСкладу(Объект.Подразделение, Номенклатура);
		Строки = НайтиСтрокуСпискаНоменклатуры(НоменклатураОтбора);
		
		Если Строки.Количество() = 1 Тогда
			
			Строка = Строки[0];
			
		Иначе
			
			ВызватьИсключение "Ошибка 295: Номенклатура " + Номенклатура + " не найдена в таблице";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Строка;
	
КонецФункции

&НаСервере
Функция НайтиСтрокуСпискаНоменклатуры(Номенклатура)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Номенклатура", Номенклатура);
	Возврат Объект.СписокНоменклатуры.НайтиСтроки(ПараметрыОтбора);
	
КонецФункции

&НаКлиенте
Процедура СписокХлыстовыхМатериаловПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		ОтборСтруктура = Новый Структура;
		
		Номенклатура = Элемент.ТекущиеДанные.Номенклатура;
		ОтборСтруктура.Вставить("Номенклатура", Номенклатура);
		ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтруктура);
		
		Элементы.РаскройХлыстов.ОтборСтрок = ОтборСтрок;
		Элементы.ОстаткиХлыстов.ОтборСтрок = ОтборСтрок;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПерекроитьВесХлыстовойМатериал()
	
	Для каждого Строка Из Объект.СписокХлыстовыхМатериалов Цикл
		
		ПерекроитьХлысты(Строка.Номенклатура);
		
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ПерекроитьХлысты(фНоменклатура)
	
	тзОстатки = Объект.ОстаткиХлыстов.Выгрузить();
	ОпределитьКоличествоХлыстовогоМатериала(фНоменклатура, тзОстатки);
	
КонецФункции

#КонецОбласти

#Область Комплектации

&НаСервереБезКонтекста
Функция ПолучитьКомплектации(МассивСпецификаций)
	
	Результат = Новый Массив;
	
	Для каждого Спецификация Из МассивСпецификаций Цикл
		
		Комплектация = Документы.Комплектация.ПолучитьКомплектацию(Спецификация);
		
		Если ЗначениеЗаполнено(Комплектация) Тогда
			Результат.Добавить(Комплектация);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьКомплектацию(Команда)
	
	МассивСпецификаций = Новый Массив;
	
	Для каждого ЭлементСтроки Из Объект.СписокСпецификаций Цикл
		Идентификатор = ЭлементСтроки.ПолучитьИдентификатор();
		Если Элементы.СписокСпецификаций.ВыделенныеСтроки.Найти(Идентификатор) <> Неопределено Тогда
			МассивСпецификаций.Добавить(ЭлементСтроки.Спецификация);
		КонецЕсли;
	КонецЦикла;
	
	МассивКомплектаций = ПолучитьКомплектации(МассивСпецификаций);
	
	Для каждого Комплектация Из МассивКомплектаций Цикл
		
		ОткрытьФорму("Документ.Комплектация.ФормаОбъекта", Новый Структура("Ключ",Комплектация), Элементы.СписокСпецификаций);
		
	КонецЦикла;
	
	Если МассивКомплектаций.Количество() <> МассивСпецификаций.Количество() Тогда
		
		ПараметрыФормы = Новый Структура;
		
		ТД = Элементы.СписокСпецификаций.ТекущиеДанные;
		Если ТекущаяДата() <> Неопределено Тогда
			ПараметрыФормы.Вставить("Основание", ТД.Спецификация);
		КонецЕсли;
		
		ОткрытьФорму("Документ.Комплектация.ФормаОбъекта", ПараметрыФормы, Элементы.СписокСпецификаций);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеКомплектаций(МассивСпецификаций)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСпецификаций", МассивСпецификаций);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спец.Ссылка КАК Спецификация,
	|	ВЫБОР
	|		КОГДА Компл.Ссылка ЕСТЬ NULL 
	|				И Спец.ТребуетсяКомплектация
	|				Или НЕ Компл.Проведен
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК НеобходимаКомплектация
	|ИЗ
	|	Документ.Спецификация КАК Спец
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Комплектация КАК Компл
	|		ПО (Компл.Спецификация = Спец.Ссылка)
	|ГДЕ
	|	Спец.Ссылка В(&МассивСпецификаций)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Для каждого Строка Из Объект.СписокСпецификаций Цикл
			
			Если Строка.Спецификация = ВыборкаДетальныеЗаписи.Спецификация Тогда
				
				Строка.ЕстьПроведеннаяКомплектация = ВыборкаДетальныеЗаписи.НеобходимаКомплектация;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецФункции

#КонецОбласти
