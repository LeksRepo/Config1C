
// { Васильев Александр Леонидович [06.10.2014]
// Разбито по областям очень приблизительно,
// Кто бы получше смог сделать. :)
// } Васильев Александр Леонидович [06.10.2014]

#Область ОбщегоНазначения

Функция ПолучитьВсеФормулы()
	
	ВсеФормулы = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФормулыКаталога.Наименование,
	|	ФормулыКаталога.РазвернутаяФормула
	|ИЗ
	|	Справочник.ФормулыКаталога КАК ФормулыКаталога
	|ГДЕ
	|	НЕ ФормулыКаталога.ПометкаУдаления
	|	И ФормулыКаталога.Активность";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Мас = Новый Массив;
		Мас.Добавить(Выборка.Наименование);
		Мас.Добавить(Выборка.РазвернутаяФормула);
		
		ВсеФормулы.Добавить(Мас);
		
	КонецЦикла;
	
	Возврат ВсеФормулы;
	
КонецФункции

Функция ПолучитьТаблицуМатериаловЯщики(ТаблицаДеталей, Документ) Экспорт
	
	Метр = 1000;
	КвМетр = Метр * Метр;
	
	Формулы = ПолучитьВсеФормулы();
	
	ТЗ = Новый ТаблицаЗначений();
	ТЗ.Колонки.Добавить("Номенклатура");
	ТЗ.Колонки.Добавить("Количество");
	ТЗ.Колонки.Добавить("НомерИзделия");
	
	Для Каждого Деталь Из ТаблицаДеталей Цикл
		
		//Площадь детали
		Запись = ТЗ.Добавить();
		Запись.Номенклатура = Деталь.Номенклатура;
		Запись.Количество = (Деталь.ВысотаДетали * Деталь.ШиринаДетали) * Деталь.Количество / КвМетр;
		Запись.НомерИзделия = Деталь.НомерИзделия;
		
		//Длина кромки
		ДлинаКромки = ?(ЗначениеЗаполнено(Деталь.ВыборМебельнойКромкиСверху), Деталь.ВыборМебельнойКромкиСверху.ГлубинаДетали * 2 + Деталь.ШиринаДетали,0) +
		?(ЗначениеЗаполнено(Деталь.ВыборМебельнойКромкиСнизу), Деталь.ВыборМебельнойКромкиСнизу.ГлубинаДетали * 2 + Деталь.ШиринаДетали,0) +
		?(ЗначениеЗаполнено(Деталь.ВыборМебельнойКромкиСлева), Деталь.ВыборМебельнойКромкиСлева.ГлубинаДетали * 2 + Деталь.ВысотаДетали,0) +
		?(ЗначениеЗаполнено(Деталь.ВыборМебельнойКромкиСправа), Деталь.ВыборМебельнойКромкиСправа.ГлубинаДетали * 2 + Деталь.ВысотаДетали,0);
		
		Если ДлинаКромки > 0 Тогда
			
			Запись = ТЗ.Добавить();
			Запись.Номенклатура = Деталь.КромкаНоменклатура;
			Запись.Количество = ДлинаКромки * Деталь.Количество / Метр;
			Запись.НомерИзделия = Деталь.НомерИзделия;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Ящик Из Документ.СписокЯщики Цикл
		
		//Направляющие
		Если ЗначениеЗаполнено(Ящик.НаправляющиеНоменклатура) И (НЕ Ящик.БезНаправляющих) Тогда
			
			Запись = ТЗ.Добавить();
			Запись.Номенклатура = Ящик.НаправляющиеНоменклатура;
			Запись.Количество = Ящик.КоличествоЯщиков;
			Запись.НомерИзделия = Ящик.НомерИзделия;
			
		КонецЕсли;
		
		//Ручки
		Если ЗначениеЗаполнено(Ящик.РучкаНоменклатура) И (Ящик.КоличествоРучек > 0) Тогда
			
			Запись = ТЗ.Добавить();
			Запись.Номенклатура = Ящик.РучкаНоменклатура;
			Запись.Количество = Ящик.КоличествоРучек * Ящик.КоличествоЯщиков;
			Запись.НомерИзделия = Ящик.НомерИзделия;
			
		КонецЕсли;
		
		//Комплектация
		Если Ящик.СхемаЯщика.Комплектация.Количество() > 0 Тогда
			
			ТабКомп = Ящик.СхемаЯщика.Комплектация;
			
			Для Каждого Стр Из ТабКомп Цикл
				
				Запись = ТЗ.Добавить();
				Запись.НомерИзделия = Ящик.НомерИзделия;
				Запись.Номенклатура = Стр.Номенклатура;
				Выполнить("Запись.Количество = " + ЛексКлиентСервер.ПодставитьОбъектВФормулуЯщика("Ящик", ПодставитьЗначенияФормул(Стр.Количество, Формулы)));
				Запись.Количество = Запись.Количество * Ящик.КоличествоЯщиков;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Стр = Новый Структура();
	Стр.Вставить("Количество", 0);
	
	СтрокиДляУдаления = ТЗ.НайтиСтроки(Стр);
	
	Для каждого Строка Из СтрокиДляУдаления Цикл
		ТЗ.Удалить(Строка);
	КонецЦикла;
	
	Возврат ТЗ;
	
КонецФункции

Функция ПодставитьЗначенияФормул(Знач Формула, СписокФормул)
	
	Для Каждого Фор Из СписокФормул Цикл
		
		Формула = СтрЗаменить(Формула,"Фор."+Фор[0],Фор[1]);
		
	КонецЦикла;
	
	Возврат Формула;
	
КонецФункции

Функция РазложитьЯщикиНаДетали(Документ) Экспорт
	
	Формулы = ПолучитьВсеФормулы();
	
	ТЗ = Новый ТаблицаЗначений();
	ТЗ.Колонки.Добавить("НомерСтроки");
	ТЗ.Колонки.Добавить("НомерИзделия");
	ТЗ.Колонки.Добавить("Тип");
	ТЗ.Колонки.Добавить("Номенклатура");
	ТЗ.Колонки.Добавить("ВысотаДетали");
	ТЗ.Колонки.Добавить("ШиринаДетали");
	ТЗ.Колонки.Добавить("Количество");
	ТЗ.Колонки.Добавить("КромкаНоменклатура");
	ТЗ.Колонки.Добавить("ВыборМебельнойКромкиСверху");
	ТЗ.Колонки.Добавить("ВыборМебельнойКромкиСнизу");
	ТЗ.Колонки.Добавить("ВыборМебельнойКромкиСлева");
	ТЗ.Колонки.Добавить("ВыборМебельнойКромкиСправа");
	ТЗ.Колонки.Добавить("Материал");
	ТЗ.Колонки.Добавить("РасположениеФасада");
	ТЗ.Колонки.Добавить("СтруктураОтверстий");
	
	
	Для Каждого Ящик Из Документ.СписокЯщики Цикл
		
		Схема = Ящик.СхемаЯщика;
		
		Для Каждого ДетальСхема Из Схема.Детали Цикл
			
			НоваяДеталь = ТЗ.Добавить();
			НоваяДеталь.НомерСтроки = Ящик.НомерСтроки;
			НоваяДеталь.НомерИзделия = Ящик.НомерИзделия;
			НоваяДеталь.Тип = ДетальСхема.Тип;
			
			Если ЗначениеЗаполнено(ДетальСхема.СтруктураОтверстий) Тогда
				НоваяДеталь.СтруктураОтверстий = ДетальСхема.СтруктураОтверстий;	
			КонецЕсли;
			
			Если ДетальСхема.Тип = Перечисления.ВидыДеталейЯщиков.Корпус Тогда
				
				НоваяДеталь.Номенклатура = Ящик.Номенклатура;
				Кромка = Ящик.КромкаНоменклатура;
				
			КонецЕсли;
			
			Если ДетальСхема.Тип = Перечисления.ВидыДеталейЯщиков.Дно Тогда
				
				НоваяДеталь.Номенклатура = Ящик.ДноНоменклатура;
				Кромка = Ящик.КромкаНоменклатура;
				
			КонецЕсли;
			
			Если ДетальСхема.Тип = Перечисления.ВидыДеталейЯщиков.Фасад Тогда
				
				НоваяДеталь.Номенклатура = Ящик.ФасадНоменклатура;
				Кромка = Ящик.КромкаФасадНоменклатура;
				НоваяДеталь.Материал = "ФасадЯщика";
				
			КонецЕсли;
			
			Выполнить("НоваяДеталь.ВысотаДетали = " + ЛексКлиентСервер.ПодставитьОбъектВФормулуЯщика("Ящик", ПодставитьЗначенияФормул(ДетальСхема.Высота, Формулы)));
			Выполнить("НоваяДеталь.ШиринаДетали = " + ЛексКлиентСервер.ПодставитьОбъектВФормулуЯщика("Ящик", ПодставитьЗначенияФормул(ДетальСхема.Ширина, Формулы)));
			Выполнить("НоваяДеталь.Количество = " + ЛексКлиентСервер.ПодставитьОбъектВФормулуЯщика("Ящик", ПодставитьЗначенияФормул(ДетальСхема.Количество, Формулы)));
			
			НоваяДеталь.Количество = НоваяДеталь.Количество * Ящик.КоличествоЯщиков;
			
			Если (НоваяДеталь.ВысотаДетали <= 0) ИЛИ (НоваяДеталь.ВысотаДетали <= 0) Тогда
				НоваяДеталь.Количество = 0;
			КонецЕсли;
			
			Если (ДетальСхема.Тип = Перечисления.ВидыДеталейЯщиков.Фасад) И (Ящик.ВидФасада = "Нет") Тогда
				НоваяДеталь.Количество = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Кромка) Тогда
				
				НоваяДеталь.КромкаНоменклатура = Кромка;
				
				Если ДетальСхема.КромкаВерх Тогда 
					НоваяДеталь.ВыборМебельнойКромкиСверху = Кромка;
					НоваяДеталь.ВысотаДетали = НоваяДеталь.ВысотаДетали - Кромка.ГлубинаДетали;
				КонецЕсли;
				Если ДетальСхема.КромкаНиз Тогда 
					НоваяДеталь.ВыборМебельнойКромкиСнизу = Кромка;
					НоваяДеталь.ВысотаДетали = НоваяДеталь.ВысотаДетали - Кромка.ГлубинаДетали;
				КонецЕсли;
				Если ДетальСхема.КромкаЛево Тогда 
					НоваяДеталь.ВыборМебельнойКромкиСлева = Кромка;
					НоваяДеталь.ШиринаДетали = НоваяДеталь.ШиринаДетали - Кромка.ГлубинаДетали;
				КонецЕсли;
				Если ДетальСхема.КромкаПраво Тогда 
					НоваяДеталь.ВыборМебельнойКромкиСправа = Кромка;
					НоваяДеталь.ШиринаДетали = НоваяДеталь.ШиринаДетали - Кромка.ГлубинаДетали;
				КонецЕсли;
				
			КонецЕсли;
			
			
		КонецЦикла;
		
	КонецЦикла;
	
	Стр = Новый Структура();
	Стр.Вставить("Количество", 0);
	
	СтрокиДляУдаления = ТЗ.НайтиСтроки(Стр);
	
	Для каждого Строка Из СтрокиДляУдаления Цикл
		ТЗ.Удалить(Строка);
	КонецЦикла;
	
	Возврат ТЗ;
	
КонецФункции

Функция ПолучитьСуммаСДилерскимиНаценками(СпецификацияСсылка) Экспорт
	
	Если СпецификацияСсылка = Документы.Спецификация.ПустаяСсылка() Тогда
		
		Возврат 0;
		
	Иначе
		
		РеквизитыСпецификации = ЛексСервер.ЗначенияРеквизитовОбъекта(СпецификацияСсылка, "Контрагент,СуммаДокумента");
		
		НаценкиДилера = ЛексСервер.ЗначенияРеквизитовОбъекта(РеквизитыСпецификации.Контрагент, "ПроцентНаценки,СуммаНаценки");
		Сумма = РеквизитыСпецификации.СуммаДокумента + РеквизитыСпецификации.СуммаДокумента * (НаценкиДилера.ПроцентНаценки / 100) + НаценкиДилера.СуммаНаценки;
		
		Возврат Сумма;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДоговор(СсылкаСпецификация) Экспорт
	
	МассивДокументов = ЛексСервер.НайтиПодчиненныеДокументы(СсылкаСпецификация, "Документ.Договор", "Спецификация");
	Если МассивДокументов.Количество() = 1 Тогда
		Возврат МассивДокументов[0];
	ИначеЕсли МассивДокументов.Количество() = 0 Тогда
		Возврат Документы.Договор.ПустаяСсылка();
	Иначе
		ВызватьИсключение "Ошибка 795: Нарушена связь ""Спецификации"" и документа ""Договор""";
	КонецЕсли;
	
КонецФункции // ПолучитьМонтаж()

Функция ПолучитьНарядЗадание(СсылкаСпецификация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаСпецификация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НарядЗаданиеСписокСпецификаций.Ссылка.Номер,
	|	НарядЗаданиеСписокСпецификаций.ДатаИзготовления,
	|	НарядЗаданиеСписокСпецификаций.Ссылка.Дата КАК ДатаНаряда
	|ИЗ
	|	Документ.НарядЗадание.СписокСпецификаций КАК НарядЗаданиеСписокСпецификаций
	|ГДЕ
	|	НарядЗаданиеСписокСпецификаций.Спецификация = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		
		Выборка.Следующий();
		СтруктураНаряда = Новый Структура();
		СтруктураНаряда.Вставить("Номер", Выборка.Номер);
		СтруктураНаряда.Вставить("ДатаИзготовления", Выборка.ДатаИзготовления);
		СтруктураНаряда.Вставить("ДатаНаряда", Выборка.ДатаНаряда);
		
		Возврат СтруктураНаряда;
		
	ИначеЕсли Выборка.Количество() = 0 Тогда
		
		Возврат Документы.НарядЗадание.ПустаяСсылка();
		
	Иначе
		
		ВызватьИсключение "Ошибка 797: Нарушена связь ""Спецификации"" и документа ""НарядЗадание""";
		
	КонецЕсли;
	
КонецФункции // ПолучитьМонтаж()

Функция ПерезаполнитьКомплектацию(СсылкаСпецификация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаСпецификация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСкладГотовойПродукции.Номенклатура КАК Номенклатура,
	|	СпецификацияСкладГотовойПродукции.ЕдиницаИзмерения,
	|	СпецификацияСкладГотовойПродукции.КоличествоСклад КАК КоличествоСклад,
	|	СпецификацияСкладГотовойПродукции.КоличествоЦех
	|ИЗ
	|	Документ.Спецификация.СкладГотовойПродукции КАК СпецификацияСкладГотовойПродукции
	|ГДЕ
	|	СпецификацияСкладГотовойПродукции.Ссылка = &Ссылка
	|	И НЕ СпецификацияСкладГотовойПродукции.Номенклатура.МатериалЗаказчика";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка; //СтруктураКомплектации;
	
КонецФункции

// Возвращает структуру с размерами полотна материала и кромки
//
// Параметры
//  Номенклатура - Справочники.Номенклатура - Номенклатура полотна
//  ТорцеваяЛента - Структура - Структура кромок. 4-ре ссылки на номенклатуру(могут быть пустыми)
Функция ПолучитьРазмерыМатериалов(Номенклатура, ТорцеваяЛента) Экспорт
	
	СтруктураРазмеров = Новый Структура;
	
	СтруктураРазмеров.Вставить("ДлинаПолотна", Номенклатура.ДлинаДетали);
	СтруктураРазмеров.Вставить("ШиринаПолотна", Номенклатура.ШиринаДетали);
	
	Если ЗначениеЗаполнено(ТорцеваяЛента) Тогда 
		
		СтруктураРазмеров.Вставить("ВычитаемоеДляШирины", ТорцеваяЛента.ТорцеваяЛентаСлева.ГлубинаДетали + ТорцеваяЛента.ТорцеваяЛентаСправа.ГлубинаДетали);
		СтруктураРазмеров.Вставить("ВычитаемоеДляВысоты", ТорцеваяЛента.ТорцеваяЛентаСверху.ГлубинаДетали + ТорцеваяЛента.ТорцеваяЛентаСнизу.ГлубинаДетали);
		
	Иначе
		
		СтруктураРазмеров.Вставить("ВычитаемоеДляШирины", 0);
		СтруктураРазмеров.Вставить("ВычитаемоеДляВысоты", 0);
		
	КонецЕсли;
	
	Возврат СтруктураРазмеров;
	
КонецФункции // ПолучитьРазмерыПолотна()

//Получить структуру норматива
//
// Параметры:
//  СсылкаСпецификация  - Документы.Спецификация - Ссылка на спецификацию
//
// Возвращаемое значение:
//   Структура
//
Функция ПолучитьСтруктуруНорматива(Период, Подразделение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Данные = Новый Структура;
	Данные.Вставить("ОборотЗаДень", 0);
	Данные.Вставить("Норматив", 0);
	Данные.Вставить("НормативКоробов", 0);
	Данные.Вставить("ФактКоробов", 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ЦеховойЛимит.СтоимостьУслугФактОборот, 0) КАК ОборотЗаДень,
	|	ЕСТЬNULL(ЦеховойЛимит.СтоимостьУслугОборот, 0) КАК Норматив,
	|	ЕСТЬNULL(ЦеховойЛимит.КоличествоКоробовОборот, 0) КАК КоличествоКоробов,
	|	ЕСТЬNULL(ЦеховойЛимит.КоличествоКоробовФактОборот, 0) КАК КоличествоКоробовФакт
	|ИЗ
	|	РегистрНакопления.ЦеховойЛимит.Обороты(&Период, &Период, День, Подразделение = &Подразделение) КАК ЦеховойЛимит";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Данные.ОборотЗаДень = Выборка.ОборотЗаДень;
		Данные.Норматив = Выборка.Норматив;
		Данные.НормативКоробов = Выборка.КоличествоКоробов;
		Данные.ФактКоробов = Выборка.КоличествоКоробовФакт;
		
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции // ПолучитьСтруктуруНорматива()

Функция ПолучитьЗарплатуЦеха(ТаблицаЗначений) Экспорт
	
	ЗарплатаЦеха = 0;
	
	// { Васильев Александр Леонидович [10.10.2013]
	// очень стыдно :(
	// } Васильев Александр Леонидович [10.10.2013]
	
	Для каждого Строка Из ТаблицаЗначений Цикл
		
		Если Строка.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга И Строка.Номенклатура.ЦеховаяЗона <> Перечисления.ЦеховыеЗоны.ВнешниеУслуги Тогда
			ЗарплатаЦеха = ЗарплатаЦеха + Строка.ЗарплатаЦеха;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЗарплатаЦеха;
	
КонецФункции

Функция ПолучитьСтоимостьУслугБезВнешних(СписокНоменклатуры) Экспорт
	
	// у дилеров нет прав на все спецификации
	УстановитьПривилегированныйРежим(Истина);
	Структура = Новый Структура;
	
	Запрос= Новый Запрос;
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СписокНоменклатуры.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(СписокНоменклатуры.ЗарплатаЦеха КАК ЧИСЛО(15, 2)) КАК ЗарплатаЦеха,
	|	ВЫРАЗИТЬ(СписокНоменклатуры.РозничнаяСтоимость КАК ЧИСЛО(15, 2)) КАК РозничнаяСтоимость
	|ПОМЕСТИТЬ СписокНоменклатуры
	|ИЗ
	|	&СписокНоменклатуры КАК СписокНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(СписокНоменклатуры.ЗарплатаЦеха, 0)) КАК ЗарплатаЦеха,
	|	СУММА(ЕСТЬNULL(СписокНоменклатуры.РозничнаяСтоимость, 0)) КАК РозничнаяСтоимость
	|ИЗ
	|	СписокНоменклатуры КАК СписокНоменклатуры
	|ГДЕ
	|	СписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
	|	И СписокНоменклатуры.Номенклатура.ЦеховаяЗона <> ЗНАЧЕНИЕ(Перечисление.ЦеховыеЗоны.ВнешниеУслуги)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Структура.Вставить("ЗарплатаЦеха", Документы.Спецификация.ПолучитьЗарплатуЦеха(СписокНоменклатуры));
	Структура.Вставить("РозничнаяСтоимость", ?(ЗначениеЗаполнено(Выборка.РозничнаяСтоимость), Выборка.РозничнаяСтоимость, 0));
	
	Возврат Структура;
	
КонецФункции

Функция НайтиНаправляющиеНоменклатура(Подразделение, НоменклатурнаяГруппа, ГлубинаЯщика) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	спрНоменклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК спрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураПодразделений КАК НоменклатураПодразделений
	|		ПО (НоменклатураПодразделений.Номенклатура = спрНоменклатура.Ссылка)
	|ГДЕ
	|	спрНоменклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
	|	И спрНоменклатура.ДлинаДетали <= &ДлинаДетали
	|	И НоменклатураПодразделений.Подразделение = &Подразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	спрНоменклатура.ДлинаДетали УБЫВ";
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("ДлинаДетали", ГлубинаЯщика);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Если Выборка.Количество() > 0 Тогда
		Возврат Выборка[0].Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область Статусы

// Записыват в Регистр сведений текущий статус Спецификации
//
// Параметры
//  СпецификацияСсылка - СправочникСсылка.Спецификация - Ссылка на спецификацию для которой меняем статус
//  НовыйСтатус - ПеречислениеСсылка.СтатусыСпецификаций - Ссылка на перечисление нового статуса спецификации
Функция УстановитьСтатусСпецификации(СпецификацияСсылка, НовыйСтатус) Экспорт
	
	ДатаВремя = ТекущаяДата();
	
	НаборЗаписей = РегистрыСведений.СтатусСпецификации.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Спецификация.Установить(СпецификацияСсылка);
	НаборЗаписей.Отбор.Период.Установить(ДатаВремя);
	
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		Запись = НаборЗаписей.Добавить();
	Иначе
		
		Запись = НаборЗаписей[0];
		Если Запись.Статус = НовыйСтатус Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запись.Статус = НовыйСтатус;
	Запись.Спецификация = СпецификацияСсылка;
	Запись.Период = ДатаВремя;
	Запись.Автор = ПользователиКлиентСервер.ТекущийПользователь();
	
	НаборЗаписей.Записать();
	
КонецФункции

// Получает из Регистр сведений текущий статус Спецификации
//
// Параметры
//  СпецификацияСсылка - СправочникСсылка.Спецификация - Ссылка на спецификацию для которой получаем статус
Функция ПолучитьСтатусСпецификации(СпецификацияСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусСпецификацииСрезПоследних.Статус
	|ИЗ
	|	РегистрСведений.СтатусСпецификации.СрезПоследних(, Спецификация = &Спецификация) КАК СтатусСпецификацииСрезПоследних";
	
	Запрос.УстановитьПараметр("Спецификация", СпецификацияСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Ответ = Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Ответ = Выборка.Статус;
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

Функция МатериалПодЗаказПроверен(СпецификацияСсылка, Ошибки) Экспорт
	
	Результат = Ложь;
	Свойства = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СпецификацияСсылка, "ЕстьМатериалПодЗаказ, Проведен, Дилерский");
	
	Если Свойства.ЕстьМатериалПодЗаказ И Свойства.Дилерский Тогда
		
		ТекущийСтатус = ПолучитьСтатусСпецификации(СпецификацияСсылка);
		Результат = ТекущийСтатус = Перечисления.СтатусыСпецификации.МатериалПроверен ИЛИ Свойства.Проведен;
		
	Иначе
		
		Результат = Истина;
		
	КонецЕсли;
	
	Если НЕ Результат Тогда
		
		ТекстСообщения = "В %1 есть материал под заказ. Необходима проверка материала.";
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СпецификацияСсылка);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, СпецификацияСсылка, ТекстСообщения);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

Функция СформироватьСтрокуМонтажСумма(СпецификацияСсылка)
	
	Строка = "";
	
	СписокУслуг = Новый Массив;
	СписокУслуг.Добавить(Справочники.Номенклатура.ВыездМастера);
	СписокУслуг.Добавить(Справочники.Номенклатура.ВыездМастераНаСборкуКухни);
	СписокУслуг.Добавить(Справочники.Номенклатура.СборкаИзделия);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокУслуг", СписокУслуг);
	Запрос.УстановитьПараметр("Ссылка", СпецификацияСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Номенклатура,
	|	СУММА(СпецификацияСписокНоменклатуры.Количество) КАК Количество,
	|	СУММА(СпецификацияСписокНоменклатуры.ЗарплатаЦеха) КАК ЗарплатаЦеха
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка = &Ссылка
	|	И СпецификацияСписокНоменклатуры.Номенклатура В(&СписокУслуг)
	|	И СпецификацияСписокНоменклатуры.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура
	|ИТОГИ
	|	СУММА(ЗарплатаЦеха)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаИтог.Следующий();
		Строка = "Всего " + ВыборкаИтог.ЗарплатаЦеха + " (";
		
		Выборка = ВыборкаИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			Цена = Формат(Выборка.ЗарплатаЦеха / Выборка.Количество, "ЧДЦ = 2");
			Конкатенация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2 х %3 = %4 ", Выборка.Номенклатура, Цена ,  Выборка.Количество, Выборка.ЗарплатаЦеха);
			Строка = Строка + Конкатенация;
		КонецЦикла;
		Строка = Строка + ")";
	КонецЕсли;
	
	Возврат Строка;
	
КонецФункции

Процедура ПечатьАктДоставкаСборка(ТабДок, Ссылка) Экспорт
	
	Перем Инженер;
	
	// { Васильев Александр Леонидович [22.06.2015]
	// Сделать, в запросе убрать соединения с таблицами договоров и нарядов.
	// Дилеры печатают Акты, у них нет и не должно быть прав на эти документы.
	// } Васильев Александр Леонидович [22.06.2015]
	
	ФормСтрока = "Л = ru_RU; ДП = Истина";
	ПарПредмета="рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 0";
	Спецификация = Ссылка;
	ДоговорСсылка = Документы.Спецификация.ПолучитьДоговор(Спецификация);
	
	Макет = Документы.Спецификация.ПолучитьМакет("АктДоставкаСборка");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	докСпецификация.Дата,
	|	докСпецификация.Ссылка,
	|	докСпецификация.Подразделение,
	|	докСпецификация.ДовозОсуществил КАК Экспедитор,
	|	докСпецификация.Подразделение.Организация.ПолноеНаименование КАК ПолноеНаименование,
	|	докСпецификация.Монтажник,
	|	докСпецификация.Технолог КАК Инженер,
	|	докСпецификация.Номер КАК НомерСпецификации,
	|	докСпецификация.Изделие КАК Изделие,
	|	докСпецификация.КоличествоМетровЛДСП КАК КоличествоМетровЛДСП,
	|	ПРЕДСТАВЛЕНИЕ(Договор.Ссылка) КАК Договор,
	|	Договор.Контрагент КАК ФИОКлиента,
	|	Договор.Офис КАК АдресОфиса,
	|	Договор.Автор КАК Дизайнер,
	|	Договор.Дата КАК ДатаДоговора,
	|	Договор.Номер КАК НомерДоговора,
	|	Договор.СуммаДокумента КАК СуммаДокумента,
	|	Договор.Спецификация.АдресМонтажа КАК АдресМонтажа,
	|	Договор.Контрагент.Телефон КАК Телефон,
	|	Договор.Контрагент.ТелефонДополнительный КАК ТелефонДополнительный,
	|	НарядЗаданиеСписокСпецификаций.Ссылка.ДатаИзготовления,
	|	НарядЗаданиеСписокСпецификаций.Ссылка.Номер КАК НомерНаряда,
	|	НарядЗаданиеСписокСпецификаций.Ссылка.Дата КАК ДатаНаряда
	|ИЗ
	|	Документ.Спецификация КАК докСпецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Договор КАК Договор
	|		ПО докСпецификация.Ссылка = Договор.Спецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НарядЗадание.СписокСпецификаций КАК НарядЗаданиеСписокСпецификаций
	|		ПО (НарядЗаданиеСписокСпецификаций.Спецификация = докСпецификация.Ссылка)
	|			И (НарядЗаданиеСписокСпецификаций.Ссылка.Проведен)
	|ГДЕ
	|	докСпецификация.Ссылка = &Ссылка";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если НЕ Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	//////////////////////////
	// Доставка
	
	ОбластьТело = Макет.ПолучитьОбласть("Тело");
	
	ОбластьТело.Параметры.Заполнить(Выборка);
	ОбластьТело.Параметры.ДатаДоговора = Формат(Выборка.ДатаДоговора, "ДЛФ=DD");
	ОбластьТело.Параметры.ДатаДоставки = Формат(Выборка.Дата, "ДЛФ=DD");
	ТабДок.Вывести(ОбластьТело);
	
КонецПроцедуры

Процедура ПечатьСпецификации_ВывестиШапку(Спецификация, ТабДок, НазваниеЗоны)
	
	Макет = Документы.Спецификация.ПолучитьМакет("Спецификация2");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	Логотип = ЛексСервер.ПолучитьЛоготипСервер(Спецификация);
	ДокументОснование = Спецификация.ДокументОснование;
	
	ЗапросФ = Новый Запрос;
	ЗапросФ.УстановитьПараметр("Документ", Спецификация);
	ЗапросФ.УстановитьПараметр("ДокументОснование", Спецификация.ДокументОснование);
	ЗапросФ.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Файлы.ВидФайла
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	((ВЫРАЗИТЬ(Файлы.ВладелецФайла КАК Документ.Спецификация)) = &Документ
	|			ИЛИ (ВЫРАЗИТЬ(Файлы.ВладелецФайла КАК Документ.Замер)) = &ДокументОснование)
	|	И НЕ Файлы.ПометкаУдаления";
	
	КоличествоПрикрепленныхФайлов = ЗапросФ.Выполнить().Выбрать().Количество();
	
	Договор = ПолучитьДоговор(Спецификация);
	СтруктураНаряда = ПолучитьНарядЗадание(Спецификация);
	НарядЗадание = ?(ТипЗнч(СтруктураНаряда) = Тип("Структура"), "№ "+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(СтруктураНаряда.Номер), "");
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	ОбластьШапка.Параметры.СтрокаСрочный = ?(Спецификация.Срочный,"СРОЧНЫЙ","");
	ОбластьШапка.Параметры.НазваниеЗоны = НазваниеЗоны;
	
	Если ТипЗнч(Логотип) = Тип("ДвоичныеДанные") Тогда
		ОбластьШапка.Рисунки.К1.Картинка = Новый Картинка(Логотип);
		ОбластьШапка.Рисунки.К1.ВыводитьНаПечать = Истина;
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьШапка);
	
	ОбластьЗаголовок.Параметры.Номер = "№ "+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Спецификация.Номер);
	ОбластьЗаголовок.Параметры.Договор = "" + Договор;
	ОбластьЗаголовок.Параметры.Адрес = "" + Спецификация.АдресМонтажа;
	ОбластьЗаголовок.Параметры.Комментарий = Спецификация.Комментарий;
	ОбластьЗаголовок.Параметры.НарядЗадание = НарядЗадание;
	ОбластьЗаголовок.Параметры.Автор = Спецификация.Автор;
	ОбластьЗаголовок.Параметры.Подразделение = Спецификация.Подразделение;
	ОбластьЗаголовок.Параметры.Контрагент = Спецификация.Контрагент;
	ОбластьЗаголовок.Параметры.ДатаИзготовления = Формат(Спецификация.ДатаИзготовления,"ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.МонтажСумма = СформироватьСтрокуМонтажСумма(Спецификация);
	ОбластьЗаголовок.Параметры.НадписьУпаковка = ?(Спецификация.Упаковка,"УПАКОВКА","");
	ОбластьЗаголовок.Параметры.КоличествоФайлов = КоличествоПрикрепленныхФайлов;
	
	Если Спецификация.ПакетУслуг = Перечисления.ПакетыУслуг.СамовывозОтПроизводителя Тогда
		ОбластьЗаголовок.Рисунки.Удалить(ОбластьЗаголовок.Рисунки.ПодЗаказКартинка);
	Иначе
		ОбластьЗаголовок.Параметры.УслугаДоставки = Спецификация.ПакетУслуг;
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьЗаголовок);
			
КонецПроцедуры

Процедура ПечатьСпецификации_МатериалЗаказчика(Спецификация, ТабДок)
	
	Макет = Документы.Спецификация.ПолучитьМакет("Спецификация2");	
	ОбластьМатериалЗаказчикаШапка = Макет.ПолучитьОбласть("МатериалЗаказчикаШапка");
	ОбластьМатериалЗаказчикаСтрока = Макет.ПолучитьОбласть("МатериалЗаказчикаСтрока");
	
	Если Спецификация.СписокМатериаловЗаказчика.Количество() > 0 Тогда
		
		ТабДок.Вывести(ОбластьМатериалЗаказчикаШапка);
		МатЗаказчикаНомер = 1;
		
		Для Каждого МатЗаказчика Из Спецификация.СписокНоменклатуры Цикл
			
			Если МатЗаказчика.ПредоставитЗаказчик Тогда
				
				ОбластьМатериалЗаказчикаСтрока.Параметры.Номенклатура = МатЗаказчика.Номенклатура;
				ОбластьМатериалЗаказчикаСтрока.Параметры.ЕдиницаИзмерения = МатЗаказчика.Номенклатура.ЕдиницаИзмерения;
				ОбластьМатериалЗаказчикаСтрока.Параметры.Количество = МатЗаказчика.Количество;
				ОбластьМатериалЗаказчикаСтрока.Параметры.НомерСтроки = МатЗаказчикаНомер;
				
				ТабДок.Вывести(ОбластьМатериалЗаказчикаСтрока);
				
				МатЗаказчикаНомер = МатЗаказчикаНомер + 1;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьСпецификации_Материалы(Спецификация, ТабДок, НазваниеЗоны)
	
	Макет = Документы.Спецификация.ПолучитьМакет("Спецификация2");
	
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	
	ОбластьКоличествоДеталей = Макет.ПолучитьОбласть("КоличествоДеталей");
	ОбластьИтогФасады = Макет.ПолучитьОбласть("ИтогФасады");
	ОбластьИтогСтекла = Макет.ПолучитьОбласть("ИтогСтекла");
	
	ОбластьШапкаФасады = Макет.ПолучитьОбласть("ШапкаФасады");
	ОбластьСтрокаФасады = Макет.ПолучитьОбласть("СтрокаФасады");
	
	ОбластьШапкаЛДСП = Макет.ПолучитьОбласть("ШапкаЛДСП");
	ОбластьСтрокаЛДСП = Макет.ПолучитьОбласть("СтрокаЛДСП");
	
	ОбластьШапкаСтекла = Макет.ПолучитьОбласть("ШапкаСтекла");
	ОбластьСтрокаСтекла = Макет.ПолучитьОбласть("СтрокаСтекла");
	
	ОбластьШапкаПуфики = Макет.ПолучитьОбласть("ПуфикиШапка");
	ОбластьСтрокаПуфики = Макет.ПолучитьОбласть("ПуфикиСтрока");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокМатериалы.ВидДетали КАК ВидДетали,
	|	СпецификацияСписокМатериалы.ВидДетали.Наименование КАК ВидДеталиНаименование,
	|	СпецификацияСписокМатериалы.Ссылка КАК Ссылка,
	|	СпецификацияСписокМатериалы.НомерСтроки,
	|	СпецификацияСписокМатериалы.ВыборМебельнойКромкиСверху,
	|	СпецификацияСписокМатериалы.ВыборМебельнойКромкиСлева,
	|	СпецификацияСписокМатериалы.ВыборМебельнойКромкиСнизу,
	|	СпецификацияСписокМатериалы.ВыборМебельнойКромкиСправа,
	|	СпецификацияСписокМатериалы.ВысотаДетали,
	|	СпецификацияСписокМатериалы.ДлинаКривогоПила,
	|	СпецификацияСписокМатериалы.Кант,
	|	СпецификацияСписокМатериалы.Количество,
	|	СпецификацияСписокМатериалы.Комментарий,
	|	СпецификацияСписокМатериалы.КривойПилСверху,
	|	СпецификацияСписокМатериалы.КривойПилСлева,
	|	СпецификацияСписокМатериалы.КривойПилСнизу,
	|	СпецификацияСписокМатериалы.КривойПилСправа,
	|	СпецификацияСписокМатериалы.Кромка045мм,
	|	СпецификацияСписокМатериалы.Кромка2мм,
	|	СпецификацияСписокМатериалы.Номенклатура,
	|	СпецификацияСписокМатериалы.НоменклатураДляСклеивания,
	|	СпецификацияСписокМатериалы.ПереключательКромкаСверху,
	|	СпецификацияСписокМатериалы.ПереключательКромкаСлева,
	|	СпецификацияСписокМатериалы.ПереключательКромкаСнизу,
	|	СпецификацияСписокМатериалы.ПереключательКромкаСправа,
	|	СпецификацияСписокМатериалы.РадиусЛевоВерх,
	|	СпецификацияСписокМатериалы.РадиусЛевоНиз,
	|	СпецификацияСписокМатериалы.РадиусПравоВерх,
	|	СпецификацияСписокМатериалы.РадиусПравоНиз,
	|	СпецификацияСписокМатериалы.СоблюдениеТекстуры,
	|	СпецификацияСписокМатериалы.Срез,
	|	СпецификацияСписокМатериалы.ШиринаДетали,
	|	СпецификацияСписокМатериалы.Обтачивать,
	|	СпецификацияСписокМатериалы.НеТорцевать,
	|	СпецификацияСписокМатериалы.Периметр,
	|	СпецификацияСписокМатериалы.РадиусФасада,
	|	СпецификацияСписокМатериалы.ОтверстийПодРучку,
	|	СпецификацияСписокМатериалы.Петли,
	|	СпецификацияСписокМатериалы.КоличествоПетель,
	|	СпецификацияСписокМатериалы.ДиаметрПазов,
	|	СпецификацияСписокМатериалы.ДетальРедактированная КАК РедактированнаяДеталь,
	|	СпецификацияСписокМатериалы.УниверсальнаяКромка,
	|	СпецификацияСписокМатериалы.НомерИзделия,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокМатериалы.НоменклатураДляСклеивания.КраткоеНаименование > """"
	|			ТОГДА СпецификацияСписокМатериалы.НоменклатураДляСклеивания.КраткоеНаименование
	|		ИНАЧЕ СпецификацияСписокМатериалы.НоменклатураДляСклеивания
	|	КОНЕЦ КАК Ручка,
	|	СпецификацияСписокМатериалы.Обтачивать КАК Скругление,
	|	СпецификацияСписокМатериалы.Ссылка.Комментарий КАК ОбщийКомментарий,
	|	СпецификацияСписокМатериалы.Ссылка.Автор,
	|	СпецификацияСписокМатериалы.Ссылка.Подразделение,
	|	СпецификацияСписокМатериалы.Ссылка.Номер,
	|	СпецификацияСписокМатериалы.Ссылка.АдресМонтажа,
	|	СпецификацияСписокМатериалы.Ссылка.Контрагент,
	|	СпецификацияСписокМатериалы.Ссылка.Изделие.ВидИзделия КАК ВидИзделия,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах = ЗНАЧЕНИЕ(Справочник.РасположениеПазовИРучкиНаФасадах.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах.ПоложениеПазов
	|	КОНЕЦ КАК РасложениеПазов,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах = ЗНАЧЕНИЕ(Справочник.РасположениеПазовИРучкиНаФасадах.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах.ПоложениеРучки
	|	КОНЕЦ КАК ПоложениеРучки
	|ИЗ
	|	Документ.Спецификация.СписокМатериалы КАК СпецификацияСписокМатериалы
	|ГДЕ
	|	СпецификацияСписокМатериалы.Ссылка = &Спецификация
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидДеталиНаименование
	|ИТОГИ ПО
	|	ВидДетали";

	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока Выборка.Следующий() Цикл
				
		ВидДетали = Выборка.ВидДетали;
		ДанныеДетали = ПолучитьДанныеДетали(ВидДетали);
		
		ЦеховаяЗона = ДанныеДетали.ЦеховаяЗона;
		
		Если НазваниеЗоны = "Зона ФРС" Тогда
			
			Если НЕ (ЦеховаяЗона = Перечисления.ЦеховыеЗоны.ФРС ИЛИ ЦеховаяЗона = Перечисления.ЦеховыеЗоны.Кромочная) Тогда
				Продолжить;	
			КонецЕсли;
	
		ИначеЕсли  НазваниеЗоны = "Стекольная зона"  Тогда
			
			Если НЕ (ЦеховаяЗона = Перечисления.ЦеховыеЗоны.Стеколка) Тогда
				Продолжить;	
			КонецЕсли;
		
		ИначеЕсли  НазваниеЗоны = "Зона сборки"  Тогда
			
			Если НЕ (ЦеховаяЗона = Перечисления.ЦеховыеЗоны.Кухонная) Тогда
				Продолжить;	
			КонецЕсли;
			
		ИначеЕсли  НазваниеЗоны = "Зона ОТК"  Тогда
			
			Если НЕ (ЦеховаяЗона = Перечисления.ЦеховыеЗоны.Отгрузка ИЛИ ЦеховаяЗона = Перечисления.ЦеховыеЗоны.Комплектация) Тогда
				Продолжить;	
			КонецЕсли;
			
		КонецЕсли;

		ТабДок.Вывести(ОбластьПустаяСтрока);
		
		Пуфик = ДанныеДетали.ЭтоПуфик;
		
		ЕстьЛДСП = Ложь;
		ЕстьДВП = Ложь;
		ЕстьМДФ = Ложь;
		ЕстьАГТПанель = Ложь;
		ЕстьСтолешница = Ложь;
		ЕстьПристенок = Ложь;
		
		Для Каждого Стр Из ДанныеДетали.НомГруппы Цикл
			
			Если Стр.Значение.ПолеВыбора = "Текстура" Тогда
				
				Если Стр.Значение.Группа.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.ЛДСП) 
					ИЛИ Стр.Значение.Группа = Справочники.НоменклатурныеГруппы.ЛДСП Тогда
					
					ЕстьЛДСП = Истина;
					
				КонецЕсли;
				
				Если Стр.Значение.Группа.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.ДВП) 
					ИЛИ Стр.Значение.Группа = Справочники.НоменклатурныеГруппы.ДВП Тогда
					
					ЕстьДВП = Истина;
					
				КонецЕсли;
				
				Если Стр.Значение.Группа.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.МДФ) 
					ИЛИ Стр.Значение.Группа = Справочники.НоменклатурныеГруппы.МДФ Тогда
					
					ЕстьМДФ = Истина;
					
				КонецЕсли;
				
				Если Стр.Значение.Группа.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.АГТПанель) 
					ИЛИ Стр.Значение.Группа = Справочники.НоменклатурныеГруппы.АГТПанель Тогда
					
					ЕстьАГТПанель = Истина;
					
				КонецЕсли;
				
				Если Стр.Значение.Группа.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.Столешница) 
					ИЛИ Стр.Значение.Группа = Справочники.НоменклатурныеГруппы.Столешница Тогда
					
					ЕстьСтолешница = Истина;
					
				КонецЕсли;
				
				Если Стр.Значение.Группа.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.Пристенок) 
					ИЛИ Стр.Значение.Группа = Справочники.НоменклатурныеГруппы.Пристенок Тогда
					
					ЕстьПристенок = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		МатериалЛДСП = (НЕ ДанныеДетали.ЭтоФасад) И ЕстьЛДСП;
		
		Если ДанныеДетали.ЭтоФасад Тогда

			ОбластьШапка = ОбластьШапкаФасады;
			ОбластьСтрока = ОбластьСтрокаФасады;
			ОбластьШапка.Параметры.ВидФасада = ВидДетали;
	
		ИначеЕсли (МатериалЛДСП ИЛИ ЕстьДВП ИЛИ ЕстьМДФ ИЛИ ЕстьАГТПанель ИЛИ ЕстьСтолешница ИЛИ ЕстьПристенок) 
			    И (НЕ ДанныеДетали.ЭтоФасад) И НЕ Пуфик Тогда
			
			ОбластьШапка = ОбластьШапкаЛДСП;
			ОбластьСтрока = ОбластьСтрокаЛДСП;
			ОбластьШапка.Параметры.ВидДетали = ВидДетали;
			
		ИначеЕсли ДанныеДетали.ЭтоСтекло Тогда
			
			ОбластьШапка = ОбластьШапкаСтекла;
			ОбластьСтрока = ОбластьСтрокаСтекла;
			
		ИначеЕсли Пуфик Тогда
			
			ОбластьШапка = ОбластьШапкаПуфики;
			ОбластьСтрока = ОбластьСтрокаПуфики;
			
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьШапка);
		
		КоличествоДеталей = 0;
		Фасад = Ложь;
		
		ВыборкаПоМатериалам = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоМатериалам.Следующий() Цикл
			
			УниверсальнаяКромка = ВыборкаПоМатериалам.УниверсальнаяКромка;
			
			ШиринаДетали = ВыборкаПоМатериалам.ШиринаДетали;
			ВысотаДетали = ВыборкаПоМатериалам.ВысотаДетали;
			
			ШиринаТекстура = 0;
			ВысотаТекстура = 0;
			ШиринаДопНоменклатура = 0;
			ВысотаДопНоменклатура = 0;
			
			Если ДанныеДетали.ШиринаТекстура <> "" Тогда
				
				Попытка
					Выполнить("ШиринаТекстура = " + ДанныеДетали.ШиринаТекстура);
				Исключение
					Сообщить("Ошибка при формировании формулы: №006");
				КонецПопытки;
				
			КонецЕсли;
			
			Если ДанныеДетали.ВысотаТекстура <> "" Тогда
				
				Попытка
					Выполнить("ВысотаТекстура = " + ДанныеДетали.ВысотаТекстура);
				Исключение
					Сообщить("Ошибка при формировании формулы: №007");
				КонецПопытки;
				
			КонецЕсли;
			
			Если ДанныеДетали.ШиринаДопНоменклатура <> "" Тогда
				
				Попытка
					Выполнить("ШиринаДопНоменклатура = " + ДанныеДетали.ШиринаДопНоменклатура);
				Исключение
					Сообщить("Ошибка при формировании формулы: №008");
				КонецПопытки;
				
			КонецЕсли;
			
			Если ДанныеДетали.ВысотаДопНоменклатура <> "" Тогда
				
				Попытка
					Выполнить("ВысотаДопНоменклатура = " + ДанныеДетали.ВысотаДопНоменклатура);
				Исключение
					Сообщить("Ошибка при формировании формулы: №009");
				КонецПопытки;
				
			КонецЕсли;
			
			Если ДанныеДетали.ЭтоФасад Тогда
				
				ОбластьСтрока.Параметры.ДиаметрПазов = "" + ВыборкаПоМатериалам.ДиаметрПазов + " мм.";
				
			КонецЕсли;
			
			Если Пуфик Тогда
				
				ОбластьСтрока.Параметры.НомерСтроки = ВыборкаПоМатериалам.НомерСтроки;
				ОбластьСтрока.Параметры.Количество = ВыборкаПоМатериалам.Количество;
				
				ОбластьСтрока.Параметры.ШиринаДеталиЛДСП = ШиринаТекстура;
				ОбластьСтрока.Параметры.ВысотаДеталиЛДСП = ВысотаТекстура;
				ОбластьСтрока.Параметры.ШиринаДеталиКожа = ШиринаДопНоменклатура;
				ОбластьСтрока.Параметры.ВысотаДеталиКожа = ВысотаДопНоменклатура;
				ОбластьСтрока.Параметры.НоменклатураЛДСП = ВыборкаПоМатериалам.Номенклатура;
				ОбластьСтрока.Параметры.НоменклатураКожа = ВыборкаПоМатериалам.НоменклатураДляСклеивания;
				ОбластьСтрока.Параметры.Комментарий = ВыборкаПоМатериалам.Комментарий;
				
				ТабДок.Вывести(ОбластьСтрока);
				
			Иначе
				
				Если НЕ (МатериалЛДСП И ЗначениеЗаполнено(ВыборкаПоМатериалам.НомерИзделия) И ВыборкаПоМатериалам.ВидИзделия <> Перечисления.ВидыИзделий.ШкафКупе) Тогда
					
					ТорцеваяЛента = Новый Структура;
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСверху", ВыборкаПоМатериалам.ВыборМебельнойКромкиСверху);
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСнизу", ВыборкаПоМатериалам.ВыборМебельнойКромкиСнизу);
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСлева", ВыборкаПоМатериалам.ВыборМебельнойКромкиСлева);
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСправа", ВыборкаПоМатериалам.ВыборМебельнойКромкиСправа);
					Размеры = ПолучитьРазмерыМатериалов(ВыборкаПоМатериалам.Номенклатура, ТорцеваяЛента);
					КромкаПоШирине = Размеры.ВычитаемоеДляШирины;
					КромкаПоВысоте = Размеры.ВычитаемоеДляВысоты;
					
					ОбластьСтрока.Параметры.Заполнить(ВыборкаПоМатериалам);
					
					Фасад = ДанныеДетали.ЭтоФасад;
					
					КоличествоДеталей = КоличествоДеталей + ВыборкаПоМатериалам.Количество;
					
					Если ЗначениеЗаполнено(ВыборкаПоМатериалам.НоменклатураДляСклеивания) И Фасад Тогда
						
						ОбластьСтрока.Параметры.ДлинаРучки = ВыборкаПоМатериалам.НоменклатураДляСклеивания.ДлинаДетали;
						
					КонецЕсли;
					
					ОбластьСтрока.Параметры.ШиринаДетали = ВыборкаПоМатериалам.ШиринаДетали + КромкаПоШирине;
					ОбластьСтрока.Параметры.ВысотаДетали = ВыборкаПоМатериалам.ВысотаДетали + КромкаПоВысоте;
					ТабДок.Вывести(ОбластьСтрока);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ Пуфик Тогда
			
			Если Фасад Тогда
				
				ОбластьИтогФасады.Параметры.КоличествоДеталей = КоличествоДеталей;
				ТабДок.Вывести(ОбластьИтогФасады);
				
			ИначеЕсли ДанныеДетали.ЭтоСтекло Тогда
				
				ОбластьИтогСтекла.Параметры.КоличествоДеталей = КоличествоДеталей;
				ТабДок.Вывести(ОбластьИтогСтекла);
				
			Иначе
				
				ОбластьКоличествоДеталей.Параметры.КоличествоДеталей = КоличествоДеталей;
				ТабДок.Вывести(ОбластьКоличествоДеталей);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура ПечатьСпецификации_Короба(Спецификация, ТабДок)
	
	Макет = Документы.Спецификация.ПолучитьМакет("Спецификация2");	
	
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	
	ОбластьШапкаКороба = Макет.ПолучитьОбласть("ШапкаКороба");
	ОбластьСтрокаКороба = Макет.ПолучитьОбласть("СтрокаКороба");
	
	Если Спецификация.Изделие.ВидИзделия = Перечисления.ВидыИзделий.Кухня Тогда
		
		ЗапросПоКоробам = Новый Запрос;
		ЗапросПоКоробам.УстановитьПараметр("Ссылка", Спецификация);
		ЗапросПоКоробам.Текст =
		"ВЫБРАТЬ
		|	Изделия.НомерСтроки КАК Номер,
		|	Изделия.ШиринаИзделия КАК Ширина,
		|	Изделия.ГлубинаИзделия КАК Глубина,
		|	Изделия.ВысотаИзделия КАК Высота,
		|	Изделия.Изделие КАК Изделие,
		|	Изделия.Комментарий КАК Комментарий
		|ИЗ
		|	Документ.Спецификация.СписокИзделийПоКаталогу КАК Изделия
		|ГДЕ
		|	Изделия.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер";
		
		ВыборкаКоробов = ЗапросПоКоробам.Выполнить().Выбрать();
		
		Если ВыборкаКоробов.Количество() > 0 Тогда

			ТабДок.Вывести(ОбластьПустаяСтрока);
			ТабДок.Вывести(ОбластьШапкаКороба);
			
			Пока ВыборкаКоробов.Следующий() Цикл
				
				ОбластьСтрокаКороба.Параметры.Заполнить(ВыборкаКоробов);
				ТабДок.Вывести(ОбластьСтрокаКороба);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьСпецификации_Ящики(Спецификация, ТабДок)
	
	Макет = Документы.Спецификация.ПолучитьМакет("Спецификация2");	
	
	ЗапросПоЯщикам = Новый Запрос;
	ЗапросПоЯщикам.УстановитьПараметр("Ссылка", Спецификация);
	ЗапросПоЯщикам.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокЯщики.НомерИзделия,
	|	СпецификацияСписокЯщики.Номенклатура КАК ЛДСП,
	|	СпецификацияСписокЯщики.КромкаНоменклатура КАК Кромка,
	|	СпецификацияСписокЯщики.НаправляющиеНоменклатура КАК Направляющие,
	|	СпецификацияСписокЯщики.ДноНоменклатура КАК Дно,
	|	СпецификацияСписокЯщики.ВысотаЯщика,
	|	СпецификацияСписокЯщики.ГлубинаЯщика,
	|	СпецификацияСписокЯщики.ФасадНоменклатура КАК ФасадНаполнение,
	|	СпецификацияСписокЯщики.КромкаФасадНоменклатура КАК ФасадНаименование,
	|	СпецификацияСписокЯщики.РучкаНоменклатура КАК Ручка,
	|	СпецификацияСписокЯщики.КоличествоРучек КАК ФасадКоличествоРучек,
	|	СпецификацияСписокЯщики.ВысотаФасад,
	|	СпецификацияСписокЯщики.ШиринаФасад,
	|	СпецификацияСписокЯщики.ВидФасада,
	|	СпецификацияСписокЯщики.КоличествоЯщиков КАК КоличествоЯщиков,
	|	СпецификацияСписокЯщики.КоличествоЯщиков КАК ФасадКоличество,
	|	СпецификацияСписокЯщики.Комментарий,
	|	СпецификацияСписокЯщики.ПроемЯщика КАК ПроемЯщика,
	|	СпецификацияСписокЯщики.ШиринаЯщика КАК ШиринаЯщика
	|ИЗ
	|	Документ.Спецификация.СписокЯщики КАК СпецификацияСписокЯщики
	|ГДЕ
	|	СпецификацияСписокЯщики.Ссылка = &Ссылка";
	
	ВыборкаЯщиков = ЗапросПоЯщикам.Выполнить().Выбрать();

	ТабДок.ПовторятьПриПечатиСтроки = ТабДок.Область(1,,4,);
	
	Если ВыборкаЯщиков.Количество() > 0 Тогда
		
		ОбластьКоличествоФасадовЯщики = Макет.ПолучитьОбласть("КоличествоФасадовЯщики");
		
		ОбластьШапкаФасадовЯщиков = Макет.ПолучитьОбласть("ШапкаФасадЯщики");
		ОбластьСтрокаФасадовЯщиков = Макет.ПолучитьОбласть("СтрокаФасадаЯщики");

		ОбластьШапкаЯщиков = Макет.ПолучитьОбласть("ШапкаЯщики");
		ОбластьСтрокаЯщиков = Макет.ПолучитьОбласть("СтрокаЯщики");
		ОбластьСтрокаЯщикиДетали = Макет.ПолучитьОбласть("СтрокаЯщикиДетали");
		
		ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
				
		ТаблицаФасадовЯщиков = Новый ТаблицаЗначений;
		ТаблицаФасадовЯщиков.Колонки.Добавить("НомерСтроки");
		ТаблицаФасадовЯщиков.Колонки.Добавить("НомерИзделия");
		ТаблицаФасадовЯщиков.Колонки.Добавить("ФасадНаименование");
		ТаблицаФасадовЯщиков.Колонки.Добавить("ФасадНаполнение");
		ТаблицаФасадовЯщиков.Колонки.Добавить("Ручка");
		ТаблицаФасадовЯщиков.Колонки.Добавить("ФасадКоличествоРучек");
		ТаблицаФасадовЯщиков.Колонки.Добавить("ФасадКоличество");
		ТаблицаФасадовЯщиков.Колонки.Добавить("ВысотаФасад");
		ТаблицаФасадовЯщиков.Колонки.Добавить("ВысотаВставки");
		ТаблицаФасадовЯщиков.Колонки.Добавить("ШиринаФасад");
		ТаблицаФасадовЯщиков.Колонки.Добавить("ШиринаВставки");
		
		ТабДок.Вывести(ОбластьПустаяСтрока);
		ТабДок.Вывести(ОбластьШапкаЯщиков);
		
		НомерСтроки = 0;
		НомерСтрокиФасада = 0;
		КоличествоДеталейЯщика = 0;
		КоличествоФасадов = 0;
		
		ТаблицаДеталиЯщиков = Документы.Спецификация.РазложитьЯщикиНаДетали(Спецификация);
		
		Пока ВыборкаЯщиков.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			КоличествоДеталейЯщика = КоличествоДеталейЯщика + ВыборкаЯщиков.КоличествоЯщиков;
			
			Если НЕ ВыборкаЯщиков.ВидФасада = "Нет" Тогда
				
				НомерСтрокиФасада = НомерСтрокиФасада + 1;
				КоличествоФасадов = КоличествоФасадов + ВыборкаЯщиков.ФасадКоличество;
				
				ТорцеваяЛента = Новый Структура;
				ТорцеваяЛента.Вставить("ТорцеваяЛентаСверху", ВыборкаЯщиков.ФасадНаименование);
				ТорцеваяЛента.Вставить("ТорцеваяЛентаСнизу", ВыборкаЯщиков.ФасадНаименование);
				ТорцеваяЛента.Вставить("ТорцеваяЛентаСлева", ВыборкаЯщиков.ФасадНаименование);
				ТорцеваяЛента.Вставить("ТорцеваяЛентаСправа", ВыборкаЯщиков.ФасадНаименование);
				
				Размеры = ПолучитьРазмерыМатериалов(ВыборкаЯщиков.ФасадНаполнение, ТорцеваяЛента);
				
				КромкаПоШирине = Размеры.ВычитаемоеДляШирины;
				КромкаПоВысоте = Размеры.ВычитаемоеДляВысоты;
				
				НоваяСтрока = ТаблицаФасадовЯщиков.Добавить();
				НоваяСтрока.НомерСтроки = НомерСтрокиФасада;
				НоваяСтрока.НомерИзделия = ВыборкаЯщиков.НомерИзделия;
				НоваяСтрока.ФасадНаименование = ВыборкаЯщиков.ФасадНаименование;
				НоваяСтрока.ФасадНаполнение = ВыборкаЯщиков.ФасадНаполнение;
				НоваяСтрока.Ручка = ВыборкаЯщиков.Ручка;
				НоваяСтрока.ФасадКоличествоРучек = ВыборкаЯщиков.ФасадКоличествоРучек;
				НоваяСтрока.ФасадКоличество = ВыборкаЯщиков.ФасадКоличество;
				НоваяСтрока.ВысотаФасад = ВыборкаЯщиков.ВысотаФасад;
				НоваяСтрока.ВысотаВставки = ВыборкаЯщиков.ВысотаФасад - КромкаПоШирине;
				НоваяСтрока.ШиринаФасад = ВыборкаЯщиков.ШиринаФасад;
				НоваяСтрока.ШиринаВставки = ВыборкаЯщиков.ШиринаФасад - КромкаПоВысоте;
				
			КонецЕсли;
			
			ОбластьСтрокаЯщиков.Параметры.Заполнить(ВыборкаЯщиков);
			ОбластьСтрокаЯщиков.Параметры.НомерСтроки = НомерСтроки;
			ОбластьСтрокаЯщиков.Параметры.ШиринаЯщика = ?(ЗначениеЗаполнено(ВыборкаЯщиков.ШиринаЯщика),ВыборкаЯщиков.ШиринаЯщика,(ВыборкаЯщиков.ПроемЯщика - ВыборкаЯщиков.Направляющие.ГлубинаДетали));
			
			ТабДок.Вывести(ОбластьСтрокаЯщиков);
			
			Для Каждого Деталь Из ТаблицаДеталиЯщиков Цикл
				
				Если Деталь.НомерСтроки = НомерСтроки И НЕ (Деталь.Тип = Перечисления.ВидыДеталейЯщиков.Фасад) Тогда
					
					ОбластьСтрокаЯщикиДетали.Параметры.Заполнить(Деталь);
					ТабДок.Вывести(ОбластьСтрокаЯщикиДетали);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если ТаблицаФасадовЯщиков.Количество() > 0 Тогда
			
			ТабДок.Вывести(ОбластьПустаяСтрока);
			ТабДок.Вывести(ОбластьШапкаФасадовЯщиков);
			
			Для Каждого Строка Из ТаблицаФасадовЯщиков Цикл
				
				ОбластьСтрокаФасадовЯщиков.Параметры.Заполнить(Строка);
				ТабДок.Вывести(ОбластьСтрокаФасадовЯщиков);
				
			КонецЦикла;
			
			ОбластьКоличествоФасадовЯщики.Параметры.КоличествоДеталей = КоличествоФасадов;
			ТабДок.Вывести(ОбластьКоличествоФасадовЯщики);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьСпецификации_Услуги(Спецификация, ТабДок, НазваниеЗоны)
	
	Макет = Документы.Спецификация.ПолучитьМакет("Спецификация2");	
	
	ЦеховыеЗоны = Новый Массив();
	
	Если НазваниеЗоны = "Зона ФРС" Тогда
		
		ЦеховыеЗоны.Добавить(Перечисления.ЦеховыеЗоны.ФРС);
		ЦеховыеЗоны.Добавить(Перечисления.ЦеховыеЗоны.Кромочная);
		
	ИначеЕсли  НазваниеЗоны = "Стекольная зона"  Тогда
		
		ЦеховыеЗоны.Добавить(Перечисления.ЦеховыеЗоны.Стеколка);
				
	ИначеЕсли  НазваниеЗоны = "Зона сборки"  Тогда
		
		ЦеховыеЗоны.Добавить(Перечисления.ЦеховыеЗоны.Кухонная);
		
	ИначеЕсли  НазваниеЗоны = "Зона ОТК"  Тогда
		
		ЦеховыеЗоны.Добавить(Перечисления.ЦеховыеЗоны.Отгрузка);
		ЦеховыеЗоны.Добавить(Перечисления.ЦеховыеЗоны.Комплектация);
		
	КонецЕсли;
	
	ЗапросПоУслугам = Новый Запрос;
	ЗапросПоУслугам.УстановитьПараметр("Ссылка", Спецификация);
	ЗапросПоУслугам.УстановитьПараметр("ЦеховыеЗоны", ЦеховыеЗоны);
	ЗапросПоУслугам.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(СпецификацияСписокНоменклатуры.Количество) КАК Количество,
	|	СУММА(СпецификацияСписокНоменклатуры.ЗарплатаЦеха) КАК Сумма,
	|	СпецификацияСписокНоменклатуры.ЕдиницаИзмерения
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка = &Ссылка
	|	И СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
	|	И СпецификацияСписокНоменклатуры.Номенклатура.ЦеховаяЗона В (&ЦеховыеЗоны)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура,
	|	СпецификацияСписокНоменклатуры.ЕдиницаИзмерения
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура.Наименование";
	
	ВыборкаУслуг = ЗапросПоУслугам.Выполнить().Выбрать();
		
	Если ВыборкаУслуг.Количество() > 0 Тогда
		
		ОбластьШапкаУслуг = Макет.ПолучитьОбласть("ШапкаУслуги");
		ОбластьСтрокаУслуг = Макет.ПолучитьОбласть("СтрокаУслуги");
		ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		
		ТабДок.Вывести(ОбластьПустаяСтрока);
		ТабДок.Вывести(ОбластьШапкаУслуг);
		
		НомерСтроки = 0;
				
		Пока ВыборкаУслуг.Следующий() Цикл
			
			Если ВыборкаУслуг.Сумма > 0 Тогда
				
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьСтрокаУслуг.Параметры.Заполнить(ВыборкаУслуг);
				ОбластьСтрокаУслуг.Параметры.НомерСтроки = НомерСтроки;
				
				ТабДок.Вывести(ОбластьСтрокаУслуг);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПечатьСпецификации_Комплектация(Спецификация, ТабДок)
	
	Макет = Документы.Спецификация.ПолучитьМакет("Спецификация2");	
	
	ВыборкаКомплектации = Документы.Спецификация.ПерезаполнитьКомплектацию(Спецификация);
	
	Если ВыборкаКомплектации.Количество() > 0 Тогда
		
		ОбластьШапкаКомплектации = Макет.ПолучитьОбласть("ШапкаКомплектация");
		ОбластьСтрокаКомплектации = Макет.ПолучитьОбласть("СтрокаКомплектация");
		
		ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		
		ТабДок.Вывести(ОбластьПустаяСтрока);
		ТабДок.Вывести(ОбластьШапкаКомплектации);
		
		НомерСтроки = 0;
		
		Пока ВыборкаКомплектации.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтрокаКомплектации.Параметры.Заполнить(ВыборкаКомплектации);
			ОбластьСтрокаКомплектации.Параметры.ЕдиницаИзмерения = ВыборкаКомплектации.Номенклатура.ЕдиницаИзмерения;
			ОбластьСтрокаКомплектации.Параметры.НомерСтроки = НомерСтроки;
			
			ТабДок.Вывести(ОбластьСтрокаКомплектации);
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПечатьСпецификации_Двери(Спецификация, ТабДок)
	
	Макет = Документы.Спецификация.ПолучитьМакет("Спецификация2");	
	
	Если Спецификация.СписокДверей.Количество() > 0 Тогда
		
		ОбластьДвериШапка = Макет.ПолучитьОбласть("ДвериШапка");
		ОбластьДвериСтрока = Макет.ПолучитьОбласть("ДвериСтрока");
		ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		
		ТабДок.Вывести(ОбластьПустаяСтрока);
		ТабДок.Вывести(ОбластьПустаяСтрока);
		ТабДок.Вывести(ОбластьДвериШапка);
		
		НомерДвери = 1;
		
		Для каждого СтрокаДверь Из Спецификация.СписокДверей Цикл
			
			СвойстваДвери = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаДверь.Двери, "Профиль, Количество, ШиринаДвери, ВысотаДвери");
			
			ОбластьДвериСтрока.Параметры.Номер = НомерДвери;
			ОбластьДвериСтрока.Параметры.ВертикальныйПрофиль = СвойстваДвери.Профиль;
			ОбластьДвериСтрока.Параметры.КоличествоДверей = СвойстваДвери.Количество;
			ОбластьДвериСтрока.Параметры.Ширина = СвойстваДвери.ШиринаДвери;
			ОбластьДвериСтрока.Параметры.Высота = СвойстваДвери.ВысотаДвери;
			
			ТабДок.Вывести(ОбластьДвериСтрока);
			НомерДвери =НомерДвери +1;
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПечатьСпецификации_СдалПринял(ТабДок)
	
	Макет = Документы.Спецификация.ПолучитьМакет("Спецификация2");	
	
	ОбластьСдалПринял = Макет.ПолучитьОбласть("СдалПринял");
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		
	ТабДок.Вывести(ОбластьПустаяСтрока);
	ТабДок.Вывести(ОбластьСдалПринял);

КонецПроцедуры

Функция ПечатьСпецификации(МассивДокументов, ОбъектыПечати, НазваниеЗоны) Экспорт
	  
	Метр = 1000;
	МетрКв = Метр * Метр;
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_Спецификация_"+НазваниеЗоны;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Спецификация = МассивДокументов[0];
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	ПечатьСпецификации_ВывестиШапку(Спецификация,ТабДок, НазваниеЗоны);
	
	Если НазваниеЗоны = "Зона ФРС" Тогда
		
		ПечатьСпецификации_Материалы(Спецификация, ТабДок, "Зона ФРС");
		ПечатьСпецификации_Услуги(Спецификация, ТабДок, "Зона ФРС");
		ПечатьСпецификации_Ящики(Спецификация, ТабДок);
		
	ИначеЕсли НазваниеЗоны = "Стекольная зона" Тогда
		
		ПечатьСпецификации_Материалы(Спецификация, ТабДок, "Стекольная зона");
		ПечатьСпецификации_Двери(Спецификация, ТабДок);
		ПечатьСпецификации_Услуги(Спецификация, ТабДок, "Стекольная зона");
		
	ИначеЕсли НазваниеЗоны = "Зона сборки" Тогда
		
		ПечатьСпецификации_Материалы(Спецификация, ТабДок, "Зона сборки");
		ПечатьСпецификации_Короба(Спецификация, ТабДок);
		ПечатьСпецификации_Услуги(Спецификация, ТабДок, "Зона сборки");
		
	ИначеЕсли НазваниеЗоны = "Зона ОТК" Тогда
		
		ПечатьСпецификации_МатериалЗаказчика(Спецификация, ТабДок);
		ПечатьСпецификации_Материалы(Спецификация, ТабДок, "Зона ОТК");
		ПечатьСпецификации_МерныйМатериал(ТабДок, Спецификация);
		ПечатьСпецификации_Комплектация(Спецификация, ТабДок);
		ПечатьСпецификации_Услуги(Спецификация, ТабДок, "Зона ОТК");
		
	КонецЕсли;
		
	ПечатьСпецификации_СдалПринял(ТабДок);

	ТабДок.ВерхнийКолонтитул.НачальнаяСтраница = 1;
	ТабДок.ВерхнийКолонтитул.ВертикальноеПоложение=ВертикальноеПоложение.Центр;
	ТабДок.ВерхнийКолонтитул.ТекстВЦентре = "Комплект 'Спецификация: " + НазваниеЗоны + "'. Страница [&НомерСтраницы] из [&СтраницВсего]. Спецификация № " + Спецификация.Номер;
	ТабДок.ВерхнийКолонтитул.Выводить=Истина;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Спецификация);
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьДверь(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_Двери";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Логотип = ЛексСервер.ПолучитьЛоготипСервер(МассивДокументов[0]);
	НомГруппы = Справочники.НоменклатурныеГруппы;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацияСписокДверей.Двери КАК Двери,
	|	СпецификацияСписокДверей.Ссылка.Контрагент КАК Контрагент,
	|	СпецификацияСписокДверей.Ссылка.Подразделение КАК Подразделение,
	|	СпецификацияСписокДверей.Ссылка.Автор КАК Автор,
	|	СпецификацияСписокДверей.Ссылка.Номер КАК Номер,
	|	СпецификацияСписокДверей.Ссылка.ДатаИзготовления КАК ДатаИзготовления,
	|	СпецификацияСписокДверей.Ссылка КАК Ссылка,
	|	СпецификацияСписокДверей.Двери.ВысотаПроема КАК ВысотаПроема,
	|	СпецификацияСписокДверей.Двери.ШиринаПроема КАК ШиринаПроема,
	|	СпецификацияСписокДверей.Двери.ШиринаДвери КАК ШиринаДвери,
	|	СпецификацияСписокДверей.Двери.ВысотаДвери КАК ВысотаДвери,
	|	СпецификацияСписокДверей.Двери.Количество КАК КоличествоДверей,
	|	СпецификацияСписокДверей.Двери.ВысотаПолотна КАК ВысотаПолотна,
	|	СпецификацияСписокДверей.Двери.ШиринаПолотна КАК ШиринаПолотна,
	|	ДвериСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	ДвериСписокНоменклатуры.Длина,
	|	ДвериСписокНоменклатуры.Количество КАК Количество,
	|	ДвериСписокНоменклатуры.Ширина,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокДверей.Ссылка.АдресМонтажа = ""Введите адрес""
	|			ТОГДА """"
	|		ИНАЧЕ СпецификацияСписокДверей.Ссылка.АдресМонтажа
	|	КОНЕЦ КАК АдресМонтажа,
	|	СпецификацияСписокДверей.Двери.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.Спецификация.СписокДверей КАК СпецификацияСписокДверей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Двери.СписокНоменклатуры КАК ДвериСписокНоменклатуры
	|		ПО СпецификацияСписокДверей.Двери = ДвериСписокНоменклатуры.Ссылка
	|ГДЕ
	|	СпецификацияСписокДверей.Ссылка В(&МассивДокументов)
	|	И ДвериСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|	И ДвериСписокНоменклатуры.Номенклатура.МестоОбработки <> ЗНАЧЕНИЕ(Перечисление.МестоОбработки.Отгрузка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДвериСписокНоменклатуры.Номенклатура.Наименование
	|ИТОГИ
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Автор),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(ДатаИзготовления),
	|	МАКСИМУМ(Ссылка),
	|	МАКСИМУМ(АдресМонтажа)
	|ПО
	|	Двери";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Макет = Документы.Спецификация.ПолучитьМакет("Дверь");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьСтрокаЖирный = Макет.ПолучитьОбласть("СтрокаЖирный");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьШапкаПрофиль = Макет.ПолучитьОбласть("ШапкаПрофиль");
	ОбластьСтрокаПрофиль = Макет.ПолучитьОбласть("СтрокаПрофиль");
	
	ОбластьМатериалЗаказчикаШапка = Макет.ПолучитьОбласть("МатериалЗаказчикаШапка");
	ОбластьМатериалЗаказчикаСтрока = Макет.ПолучитьОбласть("МатериалЗаказчикаСтрока");
	
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Логотип) = Тип("ДвоичныеДанные") Тогда
			ОбластьШапка.Рисунки.К1.Картинка = Новый Картинка(Логотип);
			ОбластьШапка.Рисунки.К1.ВыводитьНаПечать = Истина;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьШапка);
		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		Договор = ПолучитьДоговор(Выборка.Ссылка);
		ОбластьЗаголовок.Параметры.Комментарий = Выборка.Комментарий;
		ОбластьЗаголовок.Параметры.ДоговорАдрес = "Договор: " + Договор + " /  Адрес: " + Выборка.АдресМонтажа;
		ОбластьЗаголовок.Параметры.ДатаИзготовления = Формат(Выборка.ДатаИзготовления,"ДФ=dd.MM.yyyy");
		
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.ПовторятьПриПечатиСтроки = ТабДок.Область(1,,4,);
		ОбластьШапкаТаблицы.Параметры.Заполнить(Выборка);
		
		Спец = МассивДокументов[0];
		
		Если Спец.СписокМатериаловЗаказчика.Количество() > 0 Тогда
			
			ТабДок.Вывести(ОбластьПустаяСтрока);
			ТабДок.Вывести(ОбластьМатериалЗаказчикаШапка);
			
			Для Каждого МатЗаказчика Из Спец.СписокМатериаловЗаказчика Цикл
				
				ОбластьМатериалЗаказчикаСтрока.Параметры.Номенклатура = МатЗаказчика.Номенклатура;
				ОбластьМатериалЗаказчикаСтрока.Параметры.ЕдиницаИзмерения = МатЗаказчика.Номенклатура.ЕдиницаИзмерения;
				
				ТабДок.Вывести(ОбластьМатериалЗаказчикаСтрока);
				
			КонецЦикла;
			
			
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьПустаяСтрока);
		ТабДок.Вывести(ОбластьШапкаТаблицы);

		ВыборкаДверь = Выборка.Выбрать();
		
		Пока ВыборкаДверь.Следующий() Цикл
			
			Если ВыборкаДверь.Ширина > 0 И ВыборкаДверь.Длина > 0 Тогда
				Обл = ОбластьСтрокаЖирный;
			Иначе
				Обл = ОбластьСтрока;
			КонецЕсли;
			
			Обл.Параметры.Заполнить(ВыборкаДверь);
			
			НомГруппа = ВыборкаДверь.Номенклатура.НоменклатурнаяГруппа;
			
			Если НомГруппа = НомГруппы.ВертикальныйПрофиль
			 ИЛИ НомГруппа = НомГруппы.РамкаВерхняя 
			 ИЛИ НомГруппа = НомГруппы.РамкаНижняя
		     ИЛИ НомГруппа = НомГруппы.РамкаСредняяБезКрепления 
		     ИЛИ НомГруппа = НомГруппы.РамкаСредняяСКреплением Тогда
				 
				Обл.Параметры.Ширина = 0;
				Обл.Параметры.Длина = ВыборкаДверь.Ширина;
				
			КонецЕсли;
			
			ТабДок.Вывести(Обл);
			
		КонецЦикла;
		
		Если ЗначениеЗаполнено(Выборка.Двери.СтрокаДляФлэш) Тогда 
		
			ТабДок.Вывести(ОбластьПустаяСтрока);
			ТабДок.Вывести(ОбластьШапкаПрофиль);
				
			ДанныеПрофиля = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Выборка.Двери.СтрокаДляФлэш, "_");
			
			ОбластьСтрокаПрофиль.Параметры.Профиль = "Вертикальный профиль";
			ОбластьСтрокаПрофиль.Параметры.Ширина = ДанныеПрофиля[0];
			ОбластьСтрокаПрофиль.Параметры.Паз = ДанныеПрофиля[1];
			ТабДок.Вывести(ОбластьСтрокаПрофиль);
			
			ОбластьСтрокаПрофиль.Параметры.Профиль = "Рамка верхняя";
			ОбластьСтрокаПрофиль.Параметры.Ширина = ДанныеПрофиля[2];
			ОбластьСтрокаПрофиль.Параметры.Паз = ДанныеПрофиля[3];
			ТабДок.Вывести(ОбластьСтрокаПрофиль);
			
			ОбластьСтрокаПрофиль.Параметры.Профиль = "Рамка нижняя";
			ОбластьСтрокаПрофиль.Параметры.Ширина = ДанныеПрофиля[4];
			ОбластьСтрокаПрофиль.Параметры.Паз = ДанныеПрофиля[5];
			ТабДок.Вывести(ОбластьСтрокаПрофиль);
			
			ОбластьСтрокаПрофиль.Параметры.Профиль = "Рамка средняя";
			ОбластьСтрокаПрофиль.Параметры.Ширина = ДанныеПрофиля[6];
			ОбластьСтрокаПрофиль.Параметры.Паз = ДанныеПрофиля[7];
			ТабДок.Вывести(ОбластьСтрокаПрофиль);
			
		КонецЕсли;
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, 1, ОбъектыПечати, Выборка.Двери);
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьЧертежДвери(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = Документы.Договор.ПолучитьМакет("ЧертежДвери");
	ОбластьКартинка = Макет.ПолучитьОбласть("Картинка");
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	Для каждого Дверь Из МассивОбъектов.КартинкиДвери Цикл
		
		ЧертежДвери = Base64Значение(Дверь[0]);
		ОбластьКартинка.Рисунки.D1.Картинка = Новый Картинка(ЧертежДвери);
		ТабДок.Вывести(ОбластьКартинка);
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, МассивОбъектов.МассивОбъектов.Получить(0));
	
	Возврат ТабДок;
КонецФункции

Функция ПечатьСтеклянныеФасады(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_СтеклянныеФасады";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокМатериалы.Ссылка.Номер КАК НомерДокумента,
	|	СпецификацияСписокМатериалы.ВидДетали,
	|	СпецификацияСписокМатериалы.Номенклатура,
	|	СпецификацияСписокМатериалы.ШиринаДетали,
	|	СпецификацияСписокМатериалы.ВысотаДетали,
	|	СпецификацияСписокМатериалы.Обтачивать КАК Обтачивать,
	|	СпецификацияСписокМатериалы.Петли,
	|	СпецификацияСписокМатериалы.НоменклатураДляСклеивания КАК Ручка,
	|	СпецификацияСписокМатериалы.РадиусФасада,
	|	СпецификацияСписокМатериалы.Количество,
	|	СпецификацияСписокМатериалы.Ссылка,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах = ЗНАЧЕНИЕ(Справочник.РасположениеПазовИРучкиНаФасадах.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах.ПоложениеПазов
	|	КОНЕЦ КАК РасположениеПазов,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах = ЗНАЧЕНИЕ(Справочник.РасположениеПазовИРучкиНаФасадах.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах.ПоложениеРучки
	|	КОНЕЦ КАК ПоложениеРучки
	|ИЗ
	|	Документ.Спецификация.СписокМатериалы КАК СпецификацияСписокМатериалы
	|ГДЕ
	|	СпецификацияСписокМатериалы.Ссылка В(&МассивДокументов)
	|	И СпецификацияСписокМатериалы.РадиусФасада <> """"
	|	И СпецификацияСписокМатериалы.ВидДетали.ЭтоФасад
	|	И СпецификацияСписокМатериалы.ВидДетали.ЭтоСтекло";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Макет = Документы.Спецификация.ПолучитьМакет("СтеклянныеФасады");
	ОбластьСтрокаЯчейка = Макет.ПолучитьОбласть("Строка");
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		ОбластьСтрокаЯчейка.Параметры.Заполнить(Выборка);
		Картинка = Неопределено;
		
		ПоложениеРучки = Выборка.ПоложениеРучки;
		
		Если ПоложениеРучки = "Вертикально справа по центру" Тогда
			
			Картинка = БиблиотекаКартинок.ФасадСРадиусомРучкаПоЦентру;
			
		ИначеЕсли ПоложениеРучки = "Вертикально справа сверху" Тогда
			
			Картинка = БиблиотекаКартинок.ФасадСРадиусомРучкаСверху;
			
		ИначеЕсли ПоложениеРучки = "Вертикально справа снизу" Тогда
			
			Картинка = БиблиотекаКартинок.ФасадСРадиусомРучкаСнизу;
			
		Иначе
			
			Картинка = БиблиотекаКартинок.ФасадСРадиусомБезРучки;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Картинка) Тогда
			
			ОбластьСтрокаЯчейка.Рисунки[0].Картинка = Новый Картинка(Картинка.ПолучитьДвоичныеДанные());
			
		Иначе
			
			ОбластьСтрокаЯчейка.Рисунки[0].Картинка.Вид = ВидКартинки.Пустая;
			
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьСтрокаЯчейка);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции // ПечатьДвери()

Функция ПечатьФасады(МассивДокументов, ОбъектыПечати) Экспорт
	
	// { Васильев Александр Леонидович [22.06.2015]
	// Сделать.
	// Приличную печать.
	// Зачем там наряд задание к примеру.
	// Считаю, там много лишнего. Убрать или объяснить.
	// } Васильев Александр Леонидович [22.06.2015]
	
	Дилерский = МассивДокументов[0].Дилерский;
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_Фасады";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Логотип = ЛексСервер.ПолучитьЛоготипСервер(МассивДокументов[0]);
	
	МассивФасадов = Новый Массив;
	МассивФасадов.Добавить("ФасадАГТ");
	МассивФасадов.Добавить("ФасадАлюминиевый");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("МассивФасадов", МассивФасадов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	докСпецификация.Ссылка,
	|	НарядЗаданиеСписокСпецификаций.Ссылка КАК НарядЗадание,
	|	докСпецификация.Номер,
	|	докСпецификация.АдресМонтажа,
	|	докСпецификация.Автор,
	|	докСпецификация.Подразделение,
	|	докСпецификация.Контрагент,
	|	докСпецификация.ДатаИзготовления
	|ПОМЕСТИТЬ ВТ_Спецификации
	|ИЗ
	|	Документ.Спецификация КАК докСпецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НарядЗадание.СписокСпецификаций КАК НарядЗаданиеСписокСпецификаций
	|		ПО докСпецификация.Ссылка = НарядЗаданиеСписокСпецификаций.Ссылка
	|ГДЕ
	|	докСпецификация.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Спецификации.Ссылка КАК Ссылка,
	|	ВТ_Спецификации.НарядЗадание КАК НарядЗадание,
	|	СпецификацияСписокМатериалы.ВидДетали КАК ВидДетали,
	|	СпецификацияСписокМатериалы.ВысотаДетали,
	|	СпецификацияСписокМатериалы.Количество КАК Количество,
	|	СпецификацияСписокМатериалы.Комментарий,
	|	СпецификацияСписокМатериалы.Номенклатура,
	|	СпецификацияСписокМатериалы.ШиринаДетали,
	|	СпецификацияСписокМатериалы.ОтверстийПодРучку,
	|	СпецификацияСписокМатериалы.Петли,
	|	СпецификацияСписокМатериалы.КоличествоПетель,
	|	СпецификацияСписокМатериалы.ДиаметрПазов,
	|	СпецификацияСписокМатериалы.УниверсальнаяКромка,
	|	СпецификацияСписокМатериалы.НомерИзделия,
	|	СпецификацияСписокМатериалы.НоменклатураДляСклеивания КАК Ручка,
	|	ВТ_Спецификации.Номер КАК Номер,
	|	ВТ_Спецификации.АдресМонтажа КАК АдресМонтажа,
	|	ВТ_Спецификации.Автор КАК Автор,
	|	ВТ_Спецификации.Подразделение КАК Подразделение,
	|	ВТ_Спецификации.Контрагент КАК Контрагент,
	|	ВТ_Спецификации.ДатаИзготовления КАК ДатаИзготовления,
	|	""Детали"" КАК ТабличнаяЧасть,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах = ЗНАЧЕНИЕ(Справочник.РасположениеПазовИРучкиНаФасадах.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах.ПоложениеПазов
	|	КОНЕЦ КАК РасположениеПазов,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах = ЗНАЧЕНИЕ(Справочник.РасположениеПазовИРучкиНаФасадах.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СпецификацияСписокМатериалы.РасположениеПазовИРучкиНаФасадах.ПоложениеРучки
	|	КОНЕЦ КАК ПоложениеРучки
	|ИЗ
	|	ВТ_Спецификации КАК ВТ_Спецификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Спецификация.СписокМатериалы КАК СпецификацияСписокМатериалы
	|		ПО ВТ_Спецификации.Ссылка = СпецификацияСписокМатериалы.Ссылка
	|ГДЕ
	|	СпецификацияСписокМатериалы.ВидДетали.МатериалСтрока В(&МассивФасадов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Спецификации.Ссылка,
	|	ВТ_Спецификации.НарядЗадание,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокЯщики.КромкаФасадНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.АГТПрофиль)
	|			ТОГДА ""ФасадАГТ""
	|		КОГДА СпецификацияСписокЯщики.КромкаФасадНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.РамочныйАлюминий)
	|			ТОГДА ""ФасадАлюминиевый""
	|	КОНЕЦ,
	|	СпецификацияСписокЯщики.ВысотаФасад,
	|	СпецификацияСписокЯщики.КоличествоЯщиков,
	|	СпецификацияСписокЯщики.Комментарий,
	|	СпецификацияСписокЯщики.ФасадНоменклатура,
	|	СпецификацияСписокЯщики.ШиринаФасад,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СпецификацияСписокЯщики.КромкаФасадНоменклатура,
	|	СпецификацияСписокЯщики.НомерИзделия,
	|	СпецификацияСписокЯщики.РучкаНоменклатура,
	|	ВТ_Спецификации.Номер,
	|	ВТ_Спецификации.АдресМонтажа,
	|	ВТ_Спецификации.Автор,
	|	ВТ_Спецификации.Подразделение,
	|	ВТ_Спецификации.Контрагент,
	|	ВТ_Спецификации.ДатаИзготовления,
	|	""Ящик"",
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТ_Спецификации КАК ВТ_Спецификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Спецификация.СписокЯщики КАК СпецификацияСписокЯщики
	|		ПО ВТ_Спецификации.Ссылка = СпецификацияСписокЯщики.Ссылка
	|ГДЕ
	|	(СпецификацияСписокЯщики.КромкаФасадНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.АГТПрофиль)
	|			ИЛИ СпецификацияСписокЯщики.КромкаФасадНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.РамочныйАлюминий))
	|ИТОГИ
	|	МАКСИМУМ(НарядЗадание),
	|	СУММА(Количество),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(АдресМонтажа),
	|	МАКСИМУМ(Автор),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(ДатаИзготовления)
	|ПО
	|	Ссылка,
	|	ВидДетали";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = Документы.Спецификация.ПолучитьМакет("Фасады");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьКоличествоДеталей 	= Макет.ПолучитьОбласть("КоличествоДеталей");
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		Если ТипЗнч(Логотип) = Тип("ДвоичныеДанные") Тогда
			ОбластьШапка.Рисунки.К1.Картинка = Новый Картинка(Логотип);
			ОбластьШапка.Рисунки.К1.ВыводитьНаПечать = Истина;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьШапка);
		
		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ОбластьЗаголовок.Параметры.Комментарий = " Адрес: " + Выборка.АдресМонтажа;
		ОбластьЗаголовок.Параметры.ДатаИзготовления = Формат(Выборка.ДатаИзготовления,"ДФ=dd.MM.yyyy");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ТабДок.ПовторятьПриПечатиСтроки = ТабДок.Область(1,,4,);
		ВыборкаПоМатериалам = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		НомерСтроки = 0;
		
		Пока ВыборкаПоМатериалам.Следующий() Цикл
			
			ДетальныеЗаписи = ВыборкаПоМатериалам.Выбрать();
			
			ТабДок.Вывести(ОбластьПустаяСтрока);
			ОбластьШапка = Макет.ПолучитьОбласть("ШапкаАГТ");
			ОбластьШапка.Параметры.ВидФасада = ВыборкаПоМатериалам.ВидДетали;
			ТабДок.Вывести(ОбластьШапка);
			
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаАГТ");
			
			Пока ДетальныеЗаписи.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьСтрока.Параметры.Заполнить(ДетальныеЗаписи);
				ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
				
				Если ДетальныеЗаписи.ТабличнаяЧасть = "Детали" Тогда
					ТорцеваяЛента = Новый Структура;
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСверху", ДетальныеЗаписи.УниверсальнаяКромка);
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСнизу", ДетальныеЗаписи.УниверсальнаяКромка);
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСлева", ДетальныеЗаписи.УниверсальнаяКромка);
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСправа", ДетальныеЗаписи.УниверсальнаяКромка);
					Размеры = ПолучитьРазмерыМатериалов(ДетальныеЗаписи.Номенклатура, ТорцеваяЛента);
					
					ОбластьСтрока.Параметры.ШиринаДетали = ДетальныеЗаписи.ШиринаДетали + Размеры.ВычитаемоеДляШирины;
					ОбластьСтрока.Параметры.ВысотаДетали = ДетальныеЗаписи.ВысотаДетали + Размеры.ВычитаемоеДляВысоты;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ДетальныеЗаписи.Ручка) Тогда
					
					ОбластьСтрока.Параметры.ШиринаРучки = ДетальныеЗаписи.Ручка.ШиринаДетали;
					
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьСтрока);
				
			КонецЦикла;
			
			ОбластьКоличествоДеталей.Параметры.КоличествоДеталей = ВыборкаПоМатериалам.Количество;
			ТабДок.Вывести(ОбластьКоличествоДеталей);
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции // ПечатьДвери()

Функция ПечатьЗаказ(МассивДокументов, ОбъектыПечати) Экспорт
	
	// распечатывать можно только Заказ к Деталям
	РазрешитьПечать = Истина;
	
	Для каждого Док Из МассивДокументов Цикл
		
		Если Док.Изделие <> Справочники.Изделия.Детали И НЕ РольДоступна("АдминистраторСистемы") Тогда
			РазрешитьПечать = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Логотип = ЛексСервер.ПолучитьЛоготипСервер(МассивДокументов[0]);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_Заказ";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Если НЕ РазрешитьПечать Тогда
		ТабДок.Вывод = ИспользованиеВывода.Запретить;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Ссылка.Контрагент.ПолноеНаименование КАК ПолноеНаименованиеКонтрагента,
	|	СпецификацияСписокНоменклатуры.Ссылка.Подразделение,
	|	СпецификацияСписокНоменклатуры.Ссылка.Офис,
	|	СпецификацияСписокНоменклатуры.Ссылка.СуммаДокумента,
	|	МИНИМУМ(СпецификацияСписокНоменклатуры.Ссылка.Номер) КАК СпецификацияНомер,
	|	СпецификацияСписокНоменклатуры.Номенклатура,
	|	СпецификацияСписокНоменклатуры.ЕдиницаИзмерения,
	|	СУММА(СпецификацияСписокНоменклатуры.Количество) КАК Количество,
	|	МИНИМУМ(СпецификацияСписокНоменклатуры.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(СпецификацияСписокНоменклатуры.Цена) КАК Цена,
	|	СУММА(СпецификацияСписокНоменклатуры.РозничнаяСтоимость) КАК РозничнаяСтоимость,
	|	МИНИМУМ(СпецификацияСписокНоменклатуры.НомерСтроки) КАК НомерСтроки,
	|	СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры КАК НоменклатураВидНоменклатуры,
	|	СпецификацияСписокНоменклатуры.Ссылка КАК Ссылка,
	|	"""" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Фамилия + "" "" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Имя + "" "" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Отчество КАК ПолноеНаименование,
	|	СпецификацияСписокНоменклатуры.Ссылка.ДатаОтгрузки КАК ДатаОтгрузки
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура,
	|	СпецификацияСписокНоменклатуры.Ссылка.СуммаДокумента,
	|	СпецификацияСписокНоменклатуры.Ссылка.Контрагент.ПолноеНаименование,
	|	СпецификацияСписокНоменклатуры.Ссылка.Подразделение,
	|	СпецификацияСписокНоменклатуры.Ссылка.Офис,
	|	СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры,
	|	СпецификацияСписокНоменклатуры.Ссылка,
	|	"""" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Фамилия + "" "" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Имя + "" "" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Отчество,
	|	СпецификацияСписокНоменклатуры.Ссылка.ДатаОтгрузки,
	|	СпецификацияСписокНоменклатуры.ЕдиницаИзмерения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураВидНоменклатуры,
	|	СпецификацияСписокНоменклатуры.Номенклатура.Наименование
	|ИТОГИ ПО
	|	Ссылка КАК Документ,
	|	НоменклатураВидНоменклатуры КАК ВидНоменклатуры";
	
	ВыборкаПоДокументу = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = Документы.Спецификация.ПолучитьМакет("Заказ");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаНоменклатуры = Макет.ПолучитьОбласть("ШапкаНоменклатуры");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьМатериалы = Макет.ПолучитьОбласть("Материалы");
	ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ИтогСтоимостиМатериалов = 0;
	ИтогСтоимостиМатериаловСоСкидкой = 0;
	ИтогСтоимостиУслуг = 0;
	ИтогСтоимостиУслугСоСкидкой = 0;
	РозничнаяСтоимость = 0;
	НомерСтрокиУслуг = 0;
	НомерСтрокиМатериалов = 0;
	
	Пока ВыборкаПоДокументу.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		ОбластьШапка.Параметры.СпецификацияНомер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаПоДокументу.СпецификацияНомер);
		ТабДок.Вывести(ОбластьШапка);
		
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументу);
		ОбластьЗаголовок.Параметры.ПолноеНаименование = ?(ЗначениеЗаполнено(ВыборкаПоДокументу.ПолноеНаименованиеКонтрагента), ВыборкаПоДокументу.ПолноеНаименованиеКонтрагента, ВыборкаПоДокументу.ПолноеНаименование);
		
		Если ТипЗнч(Логотип) = Тип("ДвоичныеДанные") Тогда
			ОбластьЗаголовок.Рисунки.К1.Картинка = Новый Картинка(Логотип);
			ОбластьЗаголовок.Рисунки.К1.ВыводитьНаПечать = Истина;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ВыборкаПоВидуНоменклатуры = ВыборкаПоДокументу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		Пока ВыборкаПоВидуНоменклатуры.Следующий() Цикл
			
			ВидНомеклатуры = ВыборкаПоВидуНоменклатуры.НоменклатураВидНоменклатуры;
			
			Если ВидНомеклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
				
				ТабДок.Вывести(ОбластьМатериалы);
				ВыборкаМатериалов = ВыборкаПоВидуНоменклатуры.Выбрать();
				ТабДок.Вывести(ОбластьШапкаНоменклатуры);
				
				Пока ВыборкаМатериалов.Следующий() Цикл
					
					НомерСтрокиМатериалов = НомерСтрокиМатериалов + 1;
					РозничнаяСтоимость = 0;
					РозничнаяСтоимость = ВыборкаМатериалов.РозничнаяСтоимость;
					РозничнаяСтоимостьСоСкидкой = 0;
					
					ОбластьСтрока.Параметры.Цена = ВыборкаМатериалов.Цена;
					ОбластьСтрока.Параметры.Стоимость = РозничнаяСтоимость;
					РозничнаяСтоимостьСоСкидкой = РозничнаяСтоимость;
					ОбластьСтрока.Параметры.СтоимостьСоСкидкой = РозничнаяСтоимостьСоСкидкой;
					ИтогСтоимостиМатериалов = ИтогСтоимостиМатериалов + РозничнаяСтоимость;
					ИтогСтоимостиМатериаловСоСкидкой = ИтогСтоимостиМатериаловСоСкидкой + РозничнаяСтоимостьСоСкидкой;
					ОбластьСтрока.Параметры.Заполнить(ВыборкаМатериалов);
					ОбластьСтрока.Параметры.НомерСтроки = НомерСтрокиМатериалов;
					ТабДок.Вывести(ОбластьСтрока);
					
				КонецЦикла;
				
				ОбластьИтог.Параметры.ИтогСтоимости = ИтогСтоимостиМатериалов;
				ОбластьИтог.Параметры.ИтогСтоимостиСоСкидкой = ИтогСтоимостиМатериаловСоСкидкой;
				
				ТабДок.Вывести(ОбластьИтог);
				
			ИначеЕсли ВидНомеклатуры = Перечисления.ВидыНоменклатуры.Услуга Тогда
				
				ТабДок.Вывести(ОбластьУслуги);
				ВыборкаУслуг = ВыборкаПоВидуНоменклатуры.Выбрать();
				ТабДок.Вывести(ОбластьШапкаНоменклатуры);
				
				Пока ВыборкаУслуг.Следующий() Цикл
					
					НомерСтрокиУслуг = НомерСтрокиУслуг + 1;
					РозничнаяСтоимость = 0;
					РозничнаяСтоимость = ВыборкаУслуг.РозничнаяСтоимость;
					РозничнаяСтоимостьСоСкидкой = 0;
					ОбластьСтрока.Параметры.Цена = ВыборкаУслуг.Цена;
					ОбластьСтрока.Параметры.Стоимость = РозничнаяСтоимость;
					РозничнаяСтоимостьСоСкидкой = РозничнаяСтоимость;
					ОбластьСтрока.Параметры.СтоимостьСоСкидкой = РозничнаяСтоимостьСоСкидкой;
					ИтогСтоимостиУслуг = ИтогСтоимостиУслуг + РозничнаяСтоимость;
					ИтогСтоимостиУслугСоСкидкой = ИтогСтоимостиУслугСоСкидкой + РозничнаяСтоимостьСоСкидкой;
					ОбластьСтрока.Параметры.Заполнить(ВыборкаУслуг);
					
					ОбластьСтрока.Параметры.НомерСтроки = НомерСтрокиУслуг;
					ТабДок.Вывести(ОбластьСтрока);
					
				КонецЦикла;
				
				ОбластьИтог.Параметры.ИтогСтоимости = ИтогСтоимостиУслуг;
				
				ОбластьИтог.Параметры.ИтогСтоимостиСоСкидкой = ИтогСтоимостиУслугСоСкидкой;
				
				ТабДок.Вывести(ОбластьИтог);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ФормСтрока = "Л = ru_RU; ДП = Истина";
		ПарПредмета ="рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
		ИтогСтоимости = ИтогСтоимостиУслуг + ИтогСтоимостиМатериалов;
		ИтогСтоимостиСоСкидкой = ИтогСтоимостиУслугСоСкидкой + ИтогСтоимостиМатериаловСоСкидкой;
		ИтогПрописью = ЧислоПрописью(ИтогСтоимости, ФормСтрока, ПарПредмета);
		СоСкидкойПрописью = ЧислоПрописью(ИтогСтоимостиСоСкидкой, ФормСтрока, ПарПредмета);
		ОбластьПодвал.Параметры.ПолноеНаименование = ВыборкаПоДокументу.ПолноеНаименование;
		ОбластьПодвал.Параметры.ИтогСтоимости = ИтогСтоимости;
		ОбластьПодвал.Параметры.ИтогПрописью = ИтогПрописью;
		ТабДок.Вывести(ОбластьПодвал);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, МассивДокументов);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьАктГотовности(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_АктГотовности";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Логотип = ЛексСервер.ПолучитьЛоготипСервер(МассивДокументов[0]);
	
	Макет = Документы.Спецификация.ПолучитьМакет("АктГотовности");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЛинияОтрыва = Макет.ПолучитьОбласть("ЛинияОтрыва");
	ОбластьШапкаАктаВыпуска = Макет.ПолучитьОбласть("ШапкаАктаВыпуска");
	ОбластьПодписи = Макет.ПолучитьОбласть("ОбластьПодписи");
	
	УстановитьПривилегированныйРежим(Истина); // костыль
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(СпецификацияСписокДверей.Двери.Количество) КАК ДвериКоличество,
	|	СпецификацияСписокДверей.Ссылка
	|ПОМЕСТИТЬ КоличествоДверей
	|ИЗ
	|	Документ.Спецификация.СписокДверей КАК СпецификацияСписокДверей
	|ГДЕ
	|	СпецификацияСписокДверей.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокДверей.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА СпецификацияСписокМатериалы.НомерИзделия = 0
	|					ИЛИ НЕ СпецификацияСписокМатериалы.Ссылка.ЭтоКухня
	|				ТОГДА СпецификацияСписокМатериалы.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоДеталей,
	|	СпецификацияСписокМатериалы.Ссылка
	|ПОМЕСТИТЬ КоличествоДеталей
	|ИЗ
	|	Документ.Спецификация.СписокМатериалы КАК СпецификацияСписокМатериалы
	|ГДЕ
	|	СпецификацияСписокМатериалы.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокМатериалы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацияСкладГотовойПродукции.Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА СпецификацияСкладГотовойПродукции.КоличествоСклад > 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СкладКоличество,
	|	СУММА(ВЫБОР
	|			КОГДА СпецификацияСкладГотовойПродукции.КоличествоЦех > 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЦехКоличество
	|ПОМЕСТИТЬ КоличествоКомплектация
	|ИЗ
	|	Документ.Спецификация.СкладГотовойПродукции КАК СпецификацияСкладГотовойПродукции
	|ГДЕ
	|	СпецификацияСкладГотовойПродукции.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСкладГотовойПродукции.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА СпецификацияСписокИзделийПоКаталогу.Изделие.ВидИзделияПоКаталогу = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.КухняВерхний)
	|					ИЛИ СпецификацияСписокИзделийПоКаталогу.Изделие.ВидИзделияПоКаталогу = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.КухняНижний)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоКоробов
	|ПОМЕСТИТЬ КоличествоКоробов
	|ИЗ
	|	Документ.Спецификация.СписокИзделийПоКаталогу КАК СпецификацияСписокИзделийПоКаталогу
	|ГДЕ
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Специфик.Ссылка,
	|	ВЫБОР
	|		 КОГДА Специфик.Дилерский
	|		 ТОГДА
	|			  Специфик.Контрагент
	|		 ИНАЧЕ
	|             ВЫБОР
	|		      	КОГДА Договор.Контрагент.ЮридическоеЛицо
	|			  	ТОГДА Договор.Контрагент.Наименование
	|		      	ИНАЧЕ ПОДСТРОКА(Договор.Контрагент.Фамилия, 1, 20) + "" "" + ПОДСТРОКА(Договор.Контрагент.Имя, 1, 20) + "" "" + ПОДСТРОКА(Договор.Контрагент.Отчество, 1, 20)
	|	          КОНЕЦ
	|	КОНЕЦ КАК Заказчик,
	|	ВЫБОР
	|		 КОГДА Специфик.Дилерский
	|		 ТОГДА
	|			  Специфик.Контрагент.Телефон
	|		 ИНАЧЕ
	|             Договор.Контрагент.Телефон
	|	КОНЕЦ КАК Телефон,
	|	ВЫБОР
	|		КОГДА Специфик.АдресМонтажа = ""Введите адрес""
	|			ТОГДА """"
	|		ИНАЧЕ Специфик.АдресМонтажа
	|	КОНЕЦ КАК АдресЗаказчика,
	|	Специфик.Упаковка,
	|	Специфик.Комментарий,
	|	Специфик.СуммаНарядаСпецификации КАК СуммаНаряда,
	|	Специфик.Срочный,
	|	НАЧАЛОПЕРИОДА(Специфик.ДатаИзготовления, ДЕНЬ) КАК ДатаАдрес,
	|	Специфик.Номер КАК НомерСпецификации,
	|	Специфик.Подразделение,
	|	Двери.ДвериКоличество КАК КоличествоДверей,
	|	Детали.КоличествоДеталей,
	|	Специфик.ПакетУслуг,
	|	КоличествоКухонныхКоробов.КоличествоКоробов,
	|	КоличествоКомплектация.СкладКоличество,
	|	КоличествоКомплектация.ЦехКоличество,
	|	Специфик.ДовозОсуществил КАК ВодительЭкспедитор
	|ИЗ
	|	Документ.Спецификация КАК Специфик
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоДверей КАК Двери
	|		ПО Специфик.Ссылка = Двери.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоДеталей КАК Детали
	|		ПО Специфик.Ссылка = Детали.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоКомплектация КАК КоличествоКомплектация
	|		ПО (КоличествоКомплектация.Ссылка = Специфик.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоКоробов КАК КоличествоКухонныхКоробов
	|		ПО (КоличествоКухонныхКоробов.Ссылка = Специфик.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Договор КАК Договор
	|		ПО (Договор.Спецификация = Специфик.Ссылка)
	|ГДЕ
	|	Специфик.Ссылка В(&МассивДокументов)" ;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураНаряда = ПолучитьНарядЗадание(Выборка.Ссылка);
		Договор = Документы.Спецификация.ПолучитьДоговор(Выборка.Ссылка);
		Если ТипЗнч(Договор) = Тип("ДокументСсылка.Договор") И Договор <> Документы.Договор.ПустаяСсылка() Тогда
			ОбластьШапка.Параметры.СтрокаДоговор = Договор;
		КонецЕсли;
		
		ЕстьДетали = ЗначениеЗаполнено(Выборка.КоличествоДеталей);
		ЕстьКороба = ЗначениеЗаполнено(Выборка.КоличествоКоробов);
		ЕстьДвери = ЗначениеЗаполнено(Выборка.КоличествоДверей);
		ЕстьСкладКоличество = ЗначениеЗаполнено(Выборка.СкладКоличество);
		ЕстьЦехКоличество = ЗначениеЗаполнено(Выборка.ЦехКоличество);
		НомерСпецификации = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Выборка.НомерСпецификации, "0", "Слева");
		НаименованиеАктДоставки = "Акт доставки мебельного комплекта к";
		НаименованиеАктОтгрузки = "Акт отгрузки мебельного комплекта к";
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		ОбластьШапка.Параметры.Заполнить(Выборка);
		
		Телефон = Выборка.Телефон;
		
		Если НЕ ЗначениеЗаполнено(Телефон) Тогда
			
			Договор = Документы.Спецификация.ПолучитьДоговор(Выборка.Ссылка);
			
			Если ЗначениеЗаполнено(Договор) Тогда
				
				Телефон = "" + Договор.Контрагент.Телефон + "   " + Договор.Контрагент.ТелефонДополнительный;
				
			Иначе
				
				Телефон = "";
				
			КонецЕсли;
			
		КонецЕсли;
		
		ОбластьШапка.Параметры.Телефон = Телефон;
		
		Если НЕ ЕстьДетали Тогда
			ОбластьШапка.Параметры.КоличествоДеталей = 0;
		КонецЕсли;
		
		Если НЕ ЕстьКороба Тогда
			ОбластьШапка.Параметры.КоличествоКоробов = 0;
		КонецЕсли;
		
		Если НЕ ЕстьДвери Тогда
			ОбластьШапка.Параметры.КоличествоДверей = 0;
		КонецЕсли;
		
		МестКомплектации = 0;
		
		Если НЕ ЕстьСкладКоличество И НЕ ЕстьЦехКоличество Тогда
			ОбластьШапка.Параметры.МестКомплектации = 0;
		ИначеЕсли НЕ ЕстьСкладКоличество Тогда
			МестКомплектации = Выборка.ЦехКоличество;
		ИначеЕсли НЕ ЕстьЦехКоличество Тогда
			МестКомплектации = Выборка.СкладКоличество ;
		Иначе
			МестКомплектации = Выборка.СкладКоличество + Выборка.ЦехКоличество;
		КонецЕсли;
		
		ОбластьШапка.Параметры.НомерСпецификации = НомерСпецификации;
		ОбластьШапка.Параметры.МестКомплектации = МестКомплектации;
		
		Если Выборка.Упаковка Тогда
			ОбластьШапка.Параметры.Упаковка = "V";
		Иначе
			ОбластьШапка.Параметры.Упаковка = "";
		КонецЕсли;
		
		Если ТипЗнч(Логотип) = Тип("ДвоичныеДанные") Тогда
			ОбластьШапка.Рисунки.К1.Картинка = Новый Картинка(Логотип);
			ОбластьШапка.Рисунки.К1.ВыводитьНаПечать = Истина;
		КонецЕсли;
		
		Если Выборка.ПакетУслуг <> Перечисления.ПакетыУслуг.СамовывозОтПроизводителя Тогда			
			
			ОбластьШапка.Параметры.НаименованиеАкта = НаименованиеАктДоставки;
			ТабДок.Вывести(ОбластьШапка);
			ТабДок.Вывести(ОбластьЛинияОтрыва);
		КонецЕсли;
		
		ОбластьШапка.Параметры.НаименованиеАкта = НаименованиеАктОтгрузки;
		ТабДок.Вывести(ОбластьШапка);
		
		ТабДок.Вывести(ОбластьЛинияОтрыва);
		
		//////////////////////////////////////
		// ВНУТРЕННИЙ АКТ ВЫПУСКА
		
		ОбластьШапкаАктаВыпуска.Параметры.Заполнить(Выборка);
		ОбластьШапкаАктаВыпуска.Параметры.НомерСпецификации = НомерСпецификации;
		
		Если ЗначениеЗаполнено(СтруктураНаряда) Тогда
			
			Номер = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(СтруктураНаряда.Номер, "0");
			ОбластьШапкаАктаВыпуска.Параметры.НомерНаряда = Номер;
			ОбластьШапкаАктаВыпуска.Параметры.ДатаНаряда = СтруктураНаряда.ДатаНаряда;
			ОбластьШапкаАктаВыпуска.Параметры.ДатаИзготовления = СтруктураНаряда.ДатаИзготовления;
			
		КонецЕсли;
		
		Если ТипЗнч(Логотип) = Тип("ДвоичныеДанные") Тогда
			ОбластьШапкаАктаВыпуска.Рисунки.К2.Картинка = Новый Картинка(Логотип);
			ОбластьШапкаАктаВыпуска.Рисунки.К2.ВыводитьНаПечать = Истина;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьШапкаАктаВыпуска);
		
		Если ЕстьДетали ИЛИ ЕстьКороба Тогда
			
			Если ЕстьДетали Тогда
				ОбластьПодписи.Параметры.Строка1 = "Количесто деталей: " + Выборка.КоличествоДеталей;
				Если ЕстьКороба Тогда
					ОбластьПодписи.Параметры.Строка2 = "Количество кухонных коробов: " + Выборка.КоличествоКоробов;
				КонецЕсли;
			Иначе
				ОбластьПодписи.Параметры.Строка1 = "Количество кухонных коробов: " + Выборка.КоличествоКоробов;
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьПодписи);
			
			Если ЕстьДвери Тогда
				
				ОбластьПодписи.Параметры.Строка1 = "Количество дверей: " + Выборка.КоличествоДверей;
				ОбластьПодписи.Параметры.Строка2 = "";
				ТабДок.Присоединить(ОбластьПодписи);
				
				Если ЕстьСкладКоличество ИЛИ ЕстьЦехКоличество Тогда
					
					Если ЕстьСкладКоличество Тогда
						
						ОбластьПодписи.Параметры.Строка1 = "Комплектация склад(количество): " + Выборка.СкладКоличество;
						
						Если ЕстьЦехКоличество Тогда
							
							ОбластьПодписи.Параметры.Строка2 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
							
						КонецЕсли;
						
					Иначе
						
						ОбластьПодписи.Параметры.Строка1 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
						ОбластьПодписи.Параметры.Строка2 = "";
						
					КонецЕсли;
					
					ТабДок.Присоединить(ОбластьПодписи);
					
				КонецЕсли;
				
			ИначеЕсли ЕстьСкладКоличество или ЕстьЦехКоличество Тогда
				
				Если ЕстьСкладКоличество Тогда
					
					ОбластьПодписи.Параметры.Строка1 = "Комплектация склад(количество): " + Выборка.СкладКоличество;
					
					Если ЕстьЦехКоличество Тогда
						
						ОбластьПодписи.Параметры.Строка2 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
						
					КонецЕсли;
					
				Иначе
					
					ОбластьПодписи.Параметры.Строка1 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
					ОбластьПодписи.Параметры.Строка2 = "";
					
				КонецЕсли;
				
				ТабДок.Присоединить(ОбластьПодписи);
				
			КонецЕсли;
			
		ИначеЕсли ЕстьДвери Тогда
			
			ОбластьПодписи.Параметры.Строка1 = "Количество дверей: " + Выборка.КоличествоДверей;
			ОбластьПодписи.Параметры.Строка2 = "";
			ТабДок.Присоединить(ОбластьПодписи);
			
			Если ЕстьСкладКоличество или ЕстьЦехКоличество Тогда
				
				Если ЕстьСкладКоличество Тогда
					
					ОбластьПодписи.Параметры.Строка1 = "Комплектация склад(количество): " + Выборка.СкладКоличество;
					
					Если ЕстьЦехКоличество Тогда
						
						ОбластьПодписи.Параметры.Строка2 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
						
					КонецЕсли;
					
				Иначе
					
					ОбластьПодписи.Параметры.Строка1 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
					ОбластьПодписи.Параметры.Строка2 = "";
					
				КонецЕсли;
				
				ТабДок.Присоединить(ОбластьПодписи);
				
			КонецЕсли;
			
		ИначеЕсли ЕстьСкладКоличество ИЛИ ЕстьЦехКоличество Тогда
			
			Если ЕстьСкладКоличество Тогда
				
				ОбластьПодписи.Параметры.Строка1 = "Комплектация склад(количество): " + Выборка.СкладКоличество;
				
				Если ЕстьЦехКоличество Тогда
					
					ОбластьПодписи.Параметры.Строка2 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
					
				КонецЕсли;
				
			Иначе
				
				ОбластьПодписи.Параметры.Строка1 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
				ОбластьПодписи.Параметры.Строка2 = "";
				
			КонецЕсли;
			
			ТабДок.Присоединить(ОбластьПодписи);
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, МассивДокументов);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции // ПечатьАктГотовности()

Функция ПечатьУпаковочныйЛист(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_УпаковочныйЛист";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = Документы.Спецификация.ПолучитьМакет("УпаковочныйЛист");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЛинияОтрыва = Макет.ПолучитьОбласть("ЛинияОтрыва");
	ОбластьТаблица = Макет.ПолучитьОбласть("Таблица");
	
	Логотип = ЛексСервер.ПолучитьЛоготипСервер(МассивДокументов[0]);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спецификация.Ссылка,
	|	Спецификация.Контрагент.Наименование КАК Заказчик,
	|	Спецификация.Номер,
	|	Спецификация.ДатаОтгрузки
	|ПОМЕСТИТЬ втСпецификации
	|ИЗ
	|	Документ.Спецификация КАК Спецификация
	|ГДЕ
	|	Спецификация.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(СпецификацияСписокНоменклатуры.ЗарплатаЦеха) КАК ЗарплатаЦеха,
	|	СпецификацияСписокНоменклатуры.Ссылка
	|ПОМЕСТИТЬ втСтоимостьУпаковки
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка В
	|			(ВЫБРАТЬ
	|				т.Ссылка
	|			ИЗ
	|				втСпецификации КАК т)
	|	И (СпецификацияСписокНоменклатуры.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.УпаковкаДеталей)
	|			ИЛИ СпецификацияСписокНоменклатуры.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.УпаковкаКороба)
	|			ИЛИ СпецификацияСписокНоменклатуры.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.УпаковкаДверей))
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСпецификации.Ссылка,
	|	втСпецификации.Заказчик,
	|	втСпецификации.Номер,
	|	втСпецификации.ДатаОтгрузки,
	|	втСтоимостьУпаковки.ЗарплатаЦеха КАК НарядЗаУпаковку
	|ИЗ
	|	втСпецификации КАК втСпецификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьУпаковки КАК втСтоимостьУпаковки
	|		ПО втСпецификации.Ссылка = втСтоимостьУпаковки.Ссылка" ;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Номер = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Выборка.Номер, "0");
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		ОбластьТаблица.Параметры.Заполнить(Выборка);
		ОбластьТаблица.Параметры.Номер = Номер;
		
		// номер, заказчик, дата отгрузки
		
		Если ТипЗнч(Логотип) = Тип("ДвоичныеДанные") Тогда
			ОбластьШапка.Рисунки.К1.Картинка = Новый Картинка(Логотип);
			ОбластьШапка.Рисунки.К1.ВыводитьНаПечать = Истина;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьШапка);
		ТабДок.Вывести(ОбластьТаблица);
		////ТабДок.Вывести(ОбластьЛинияОтрыва);
		////ТабДок.Вывести(ОбластьШапка);
		////ТабДок.Вывести(ОбластьТаблица);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, МассивДокументов);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции // ПечатьАктГотовности()

Функция ПечатьИзделиеПоКаталогу(МассивДокументов, ОбъектыПечати) Экспорт
	
	Макет = Документы.Спецификация.ПолучитьМакет("ИзделиеПоКаталогу");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьТело = Макет.ПолучитьОбласть("Тело");
	ОбластьШапкаФасады = Макет.ПолучитьОбласть("ШапкаФасады");
	ОбластьСтрокаФасады = Макет.ПолучитьОбласть("СтрокаФасады");
	ОбластьФурнитура = Макет.ПолучитьОбласть("Фурнитура|КолонкиФурнитура");
	ОбластьШапкаДетали = Макет.ПолучитьОбласть("ШапкаДетали|КолонкиДеталей");
	ОбластьСтрокаДетали = Макет.ПолучитьОбласть("СтрокаДетали|КолонкиДеталей");
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	
	МассивСтрок = Новый Массив;
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ИзделиеПоКаталогу";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку= Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Логотип = ЛексСервер.ПолучитьЛоготипСервер(МассивДокументов[0]);
	
	ВидыФайлов = Новый Массив;
	ВидыФайлов.Добавить(Перечисления.ВидыПрисоединенныхФайлов.ОсновнаяКартинка);
	ВидыФайлов.Добавить(Перечисления.ВидыПрисоединенныхФайлов.КартинкаЛевая);
	ВидыФайлов.Добавить(Перечисления.ВидыПрисоединенныхФайлов.КартинкаПравая);
	ВидыФайлов.Добавить(Перечисления.ВидыПрисоединенныхФайлов.ВзрывСхемаОсновная);
	ВидыФайлов.Добавить(Перечисления.ВидыПрисоединенныхФайлов.ВзрывСхемаЛевая);
	ВидыФайлов.Добавить(Перечисления.ВидыПрисоединенныхФайлов.ВзрывСхемаПравая);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидыФайлов", ВидыФайлов);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацияСписокИзделийПоКаталогу.Изделие
	|ПОМЕСТИТЬ втИзделия
	|ИЗ
	|	Документ.Спецификация.СписокИзделийПоКаталогу КАК СпецификацияСписокИзделийПоКаталогу
	|ГДЕ
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Файлы.Ссылка КАК спрФайлыСсылка,
	|	Файлы.ВладелецФайла КАК Изделие,
	|	Файлы.ВидФайла,
	|	Файлы.ТекущаяВерсия
	|ПОМЕСТИТЬ втФайлы
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	НЕ Файлы.ПометкаУдаления
	|	И Файлы.ВладелецФайла В
	|			(ВЫБРАТЬ
	|				т.Изделие
	|			ИЗ
	|				втИзделия КАК т)
	|	И Файлы.ВидФайла В(&ВидыФайлов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втФайлы.Изделие,
	|	втФайлы.ВидФайла,
	|	ХранимыеФайлыВерсий.ХранимыйФайл
	|ПОМЕСТИТЬ втКартинки
	|ИЗ
	|	втФайлы КАК втФайлы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ХранимыеФайлыВерсий КАК ХранимыеФайлыВерсий
	|		ПО втФайлы.ТекущаяВерсия = ХранимыеФайлыВерсий.ВерсияФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА СпецификацияСписокИзделийПоКаталогу.Изделие.ВидИзделияПоКаталогу = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.КухняНижний)
	|			ТОГДА СпецификацияСписокИзделийПоКаталогу.ВысотаИзделия - 100 - СпецификацияСписокИзделийПоКаталогу.Столешница
	|		ИНАЧЕ СпецификацияСписокИзделийПоКаталогу.ВысотаИзделия
	|	КОНЕЦ КАК ВысотаКороба,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокИзделийПоКаталогу.Изделие.ВидИзделияПоКаталогу = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.КухняНижний)
	|			ТОГДА СпецификацияСписокИзделийПоКаталогу.ГлубинаИзделия - 56
	|		ИНАЧЕ СпецификацияСписокИзделийПоКаталогу.ГлубинаИзделия
	|	КОНЕЦ КАК ГлубинаКороба,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокИзделийПоКаталогу.Изделие.Угловой
	|			ТОГДА СпецификацияСписокИзделийПоКаталогу.ШиринаИзделия - 26
	|		ИНАЧЕ СпецификацияСписокИзделийПоКаталогу.ШиринаИзделия
	|	КОНЕЦ КАК ШиринаКороба,
	|	СпецификацияСписокИзделийПоКаталогу.ГлубинаИзделия КАК ГлубинаИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.ВысотаИзделия КАК ВысотаИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.ШиринаИзделия КАК ШиринаИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.Комментарий,
	|	СпецификацияСписокИзделийПоКаталогу.Изделие КАК Изделие,
	|	СпецификацияСписокИзделийПоКаталогу.НомерСтроки КАК НомерКороба,
	|	СпецификацияСписокИзделийПоКаталогу.Изделие.Наименование КАК Наименование,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Номер КАК Номер,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Автор КАК Автор,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Подразделение КАК Подразделение,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Контрагент КАК Контрагент,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.ДатаИзготовления КАК ДатаИзготовления,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка КАК Ссылка,
	|	СпецификацияСписокИзделийПоКаталогу.НоменклатураЛДСП,
	|	СпецификацияСписокИзделийПоКаталогу.НоменклатураДВП,
	|	СпецификацияСписокИзделийПоКаталогу.КромкаЛДСП,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Изделие.ВидИзделия КАК ВидИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.Сушка,
	|	СпецификацияСписокИзделийПоКаталогу.Мойка,
	|	СпецификацияСписокИзделийПоКаталогу.Расположение,
	|	СпецификацияСписокИзделийПоКаталогу.Европаз,
	|	СпецификацияСписокИзделийПоКаталогу.Столешница,
	|	СпецификацияСписокИзделийПоКаталогу.НоменклатураЛДСП.ГлубинаДетали КАК ГлубинаМатериала,
	|	СпецификацияСписокИзделийПоКаталогу.НоменклатураЛДСПДоп.ГлубинаДетали КАК ГлубинаМатериалаДоп,
	|	СпецификацияСписокИзделийПоКаталогу.Сборка,
	|	СпецификацияСписокИзделийПоКаталогу.UID,
	|	втКартинкиРисунок.ХранимыйФайл КАК РисунокКороба,
	|	втКартинкиСхема.ХранимыйФайл КАК СхемаКороба
	|ИЗ
	|	Документ.Спецификация.СписокИзделийПоКаталогу КАК СпецификацияСписокИзделийПоКаталогу
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКартинки КАК втКартинкиРисунок
	|		ПО СпецификацияСписокИзделийПоКаталогу.Изделие = втКартинкиРисунок.Изделие
	|			И (ВЫБОР
	|				КОГДА СпецификацияСписокИзделийПоКаталогу.Расположение = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаПравая)
	|					ТОГДА втКартинкиРисунок.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаПравая)
	|				ИНАЧЕ втКартинкиРисунок.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаЛевая)
	|						ИЛИ втКартинкиРисунок.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.ОсновнаяКартинка)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКартинки КАК втКартинкиСхема
	|		ПО СпецификацияСписокИзделийПоКаталогу.Изделие = втКартинкиСхема.Изделие
	|			И (ВЫБОР
	|				КОГДА СпецификацияСписокИзделийПоКаталогу.Расположение = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаПравая)
	|					ТОГДА втКартинкиСхема.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.ВзрывСхемаПравая)
	|				ИНАЧЕ втКартинкиСхема.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.ВзрывСхемаЛевая)
	|						ИЛИ втКартинкиСхема.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.ВзрывСхемаОсновная)
	|			КОНЕЦ)
	|ГДЕ
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка В(&МассивДокументов)
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Автор),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(ДатаИзготовления),
	|	МАКСИМУМ(ВидИзделия)
	|ПО
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		СписокДеталей = Выборка.Ссылка.СписокМатериалы.Выгрузить();
		СписокФасадов = Выборка.Ссылка.ФасадыКаталога.Выгрузить();
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ОбластьЗаголовок.Параметры.ДатаИзготовления = Формат(Выборка.ДатаИзготовления,"ДФ=dd.MM.yyyy");
		Если ТипЗнч(Логотип) = Тип("ДвоичныеДанные") Тогда
			ОбластьЗаголовок.Рисунки.К1.Картинка = Новый Картинка(Логотип);
			ОбластьЗаголовок.Рисунки.К1.ВыводитьНаПечать = Истина;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ВыборкаПоИзделиям = Выборка.Выбрать();
		Пока ВыборкаПоИзделиям.Следующий() Цикл
			
			ОбластьТело.Параметры.Заполнить(ВыборкаПоИзделиям);
			
			Если ВыборкаПоИзделиям.Сборка Тогда
				ОбластьТело.Параметры.Сборка = "Собрать в цеху";
			Иначе
				ОбластьТело.Параметры.Сборка = "Без сборки";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоИзделиям.РисунокКороба) Тогда
				ДвоичныеДанные = ВыборкаПоИзделиям.РисунокКороба.Получить();
				РисунокИзделияКартинка = Новый Картинка(ДвоичныеДанные);
			Иначе
				РисунокИзделияКартинка = Новый Картинка;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоИзделиям.СхемаКороба) Тогда
				ДвоичныеДанные = ВыборкаПоИзделиям.СхемаКороба.Получить();
				СхемаИзделияКартинка = Новый Картинка(ДвоичныеДанные);
			Иначе
				СхемаИзделияКартинка = Новый Картинка;
			КонецЕсли;
			
			ОбластьТело.Рисунки.РисунокИзделия.Картинка = РисунокИзделияКартинка;
			ОбластьТело.Рисунки.СхемаИзделия.Картинка = СхемаИзделияКартинка;
			
			ТабДок.Вывести(ОбластьТело);
			ТабДокФурнитураИДеталей = Новый ТабличныйДокумент;
			
			СписокНоменклатуры = ВыборкаПоИзделиям.Изделие.СписокНоменклатуры;
			ФурнитураВСборе = "";
			ФурнитураОтдельно = "";
			ГлубинаИзделия = ВыборкаПоИзделиям.ГлубинаИзделия;
			ВысотаИзделия = ВыборкаПоИзделиям.ВысотаИзделия;
			ШиринаИзделия = ВыборкаПоИзделиям.ШиринаИзделия;
			
			Для Каждого СтрокаНоменклатуры Из СписокНоменклатуры Цикл
				КоличествоНоменклатуры = 0;
				Попытка
					Выполнить("КоличествоНоменклатуры = " + СтрокаНоменклатуры.Количество);
				Исключение
					КоличествоНоменклатуры = СтрокаНоменклатуры.Количество;
				КонецПопытки;
				
				Если СтрокаНоменклатуры.ВСборе Тогда
					ФурнитураВСборе = СокрЛП(ФурнитураВСборе) + Символы.ПС + СтрокаНоменклатуры.Номенклатура + " - " + КоличествоНоменклатуры + " шт.";
				Иначе
					ФурнитураОтдельно = СокрЛП(ФурнитураОтдельно) + Символы.ПС + СтрокаНоменклатуры.Номенклатура + " - " + КоличествоНоменклатуры + " шт.";
				КонецЕсли;
			КонецЦикла;
			
			Если ЗначениеЗаполнено(ВыборкаПоИзделиям.Сушка) Тогда
				ФурнитураВСборе = ФурнитураВСборе + Символы.ПС + ВыборкаПоИзделиям.Сушка + " - 1 шт.";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоИзделиям.Мойка) Тогда
				ФурнитураОтдельно = ФурнитураОтдельно + Символы.ПС + ВыборкаПоИзделиям.Мойка + " - 1 шт.";
			КонецЕсли;
			
			ОбластьФурнитура.Параметры.ФурнитураОтдельно = СокрЛП(ФурнитураОтдельно);
			ОбластьФурнитура.Параметры.ФурнитураВСборе = СокрЛП(ФурнитураВСборе);
			
			ТабДокФурнитураИДеталей.Вывести(ОбластьФурнитура);
			
			////////////////
			
			СписокМатериалыКороба = ВыборкаПоИзделиям.Изделие.СписокМатериалы.Выгрузить();
			
			Если СписокМатериалыКороба.Количество() > 0 Тогда
				
				ТабДокДеталей = Новый ТабличныйДокумент;
				ТабДокДеталей.Вывести(ОбластьШапкаДетали);
				
				Для Каждого ЭлементКороба Из СписокМатериалыКороба Цикл
					
					МассивДеталиКороба = СписокДеталей.НайтиСтроки(Новый Структура("НомерИзделия, НомерДеталиИзделия", ВыборкаПоИзделиям.НомерКороба, ЭлементКороба.НомерСтроки));
					
					Если МассивДеталиКороба.Количество() = 1 Тогда
						
						ТекущаяДеталь = МассивДеталиКороба[0];
						
						ТорцеваяЛента = Новый Структура;
						
						ТорцеваяЛента.Вставить("ТорцеваяЛентаСверху", ТекущаяДеталь.ВыборМебельнойКромкиСверху);
						ТорцеваяЛента.Вставить("ТорцеваяЛентаСнизу", ТекущаяДеталь.ВыборМебельнойКромкиСнизу);
						ТорцеваяЛента.Вставить("ТорцеваяЛентаСлева", ТекущаяДеталь.ВыборМебельнойКромкиСлева);
						ТорцеваяЛента.Вставить("ТорцеваяЛентаСправа", ТекущаяДеталь.ВыборМебельнойКромкиСправа);
						
						РазмерыКромок = ПолучитьРазмерыМатериалов(ТекущаяДеталь.Номенклатура, ТорцеваяЛента);
						
						НадписьДетали = ПолучитьНадпись(ТекущаяДеталь);
						
						НоваяВысотаДетали = 0;
						НоваяШиринаДетали = 0;
						НоваяКоличество = 0;
						
						//Размеры изделия
						ШиринаИзделия = ВыборкаПоИзделиям.ШиринаИзделия;
						ВысотаИзделия = ВыборкаПоИзделиям.ВысотаИзделия;
						ГлубинаИзделия = ВыборкаПоИзделиям.ГлубинаИзделия;
						Европаз = ВыборкаПоИзделиям.Европаз;
						Столешница = ВыборкаПоИзделиям.Столешница;
						ГлубинаМатериала = ВыборкаПоИзделиям.ГлубинаМатериала;
						ГлубинаМатериалаДоп = ВыборкаПоИзделиям.ГлубинаМатериалаДоп;
						
						Попытка
							Выполнить("НоваяВысотаДетали = " + ЭлементКороба.ВысотаДетали);
							НоваяВысотаДетали = НоваяВысотаДетали - РазмерыКромок.ВычитаемоеДляВысоты;
						Исключение
							НоваяВысотаДетали = ТекущаяДеталь.ВысотаДетали;
						КонецПопытки;
						
						Попытка
							Выполнить("НоваяШиринаДетали = " + ЭлементКороба.ШиринаДетали);
							НоваяШиринаДетали = НоваяШиринаДетали - РазмерыКромок.ВычитаемоеДляШирины;
						Исключение
							НоваяШиринаДетали = ТекущаяДеталь.ШиринаДетали;
						КонецПопытки;
						
						Попытка
							Выполнить("НоваяКоличество = " + ЭлементКороба.Количество);
						Исключение
							НоваяКоличество = ТекущаяДеталь.Количество;
						КонецПопытки;
						
						Редактирована = ТекущаяДеталь.Материал <> ЭлементКороба.Материал
						ИЛИ ТекущаяДеталь.ДиаметрПазов <> ЭлементКороба.ДиаметрПазов
						ИЛИ ТекущаяДеталь.КоличествоПетель <> ЭлементКороба.КоличествоПетель
						ИЛИ ТекущаяДеталь.Обтачивать <> ЭлементКороба.Обтачивать
						ИЛИ ТекущаяДеталь.Петли <> ЭлементКороба.Петли
						ИЛИ ТекущаяДеталь.Срез <> ЭлементКороба.Срез
						ИЛИ ТекущаяДеталь.Количество <> НоваяКоличество
						ИЛИ ТекущаяДеталь.ВысотаДетали <> НоваяВысотаДетали
						ИЛИ ТекущаяДеталь.ШиринаДетали <> НоваяШиринаДетали;
						
						ОбластьСтрокаДетали.Параметры.НомерДетали = ЭлементКороба.НомерСтроки;
						ОбластьСтрокаДетали.Параметры.МатериалДетали = ТекущаяДеталь.Номенклатура;
						ОбластьСтрокаДетали.Параметры.ВысотаДетали = ТекущаяДеталь.ВысотаДетали + РазмерыКромок.ВычитаемоеДляВысоты;
						ОбластьСтрокаДетали.Параметры.ШиринаДетали = ТекущаяДеталь.ШиринаДетали + РазмерыКромок.ВычитаемоеДляШирины;
						ОбластьСтрокаДетали.Параметры.КолвоДетали = ТекущаяДеталь.Количество;
						ОбластьСтрокаДетали.Параметры.НадписьДетали = НадписьДетали;
						ОбластьСтрокаДетали.Параметры.Редактирована = Редактирована;
						
						ТабДокДеталей.Вывести(ОбластьСтрокаДетали);
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			ТабДок.Вывести(ТабДокДеталей.ПолучитьОбласть(1, 1, ТабДокДеталей.ВысотаТаблицы, ТабДокДеталей.ШиринаТаблицы));
			
			ТабДок.Присоединить(ТабДокФурнитураИДеталей.ПолучитьОбласть(1, 1, ТабДокФурнитураИДеталей.ВысотаТаблицы, ТабДокФурнитураИДеталей.ШиринаТаблицы));
			
			ТабДок.Вывести(ОбластьПустаяСтрока);
			
			КоличествоФасадов = 0;

			Если СписокФасадов.Количество() > 0 Тогда
				ТаблицаФасадов = СписокФасадов.НайтиСтроки(Новый Структура("sUID", ВыборкаПоИзделиям.UID));
				КоличествоФасадов = ТаблицаФасадов.Количество();
			КонецЕсли;
			
			Если КоличествоФасадов > 0 Тогда
				
				ТабДок.Вывести(ОбластьШапкаФасады);
				
				СписокМатериалы = ВыборкаПоИзделиям.Изделие.СписокМатериалы;
				СписокЯщики = ВыборкаПоИзделиям.Изделие.СписокЯщики;
				
				Для Каждого Строка Из ТаблицаФасадов Цикл
					
					ОбластьСтрокаФасады.Параметры.ИмяФасада = Строка.ИмяФасада;
					ОбластьСтрокаФасады.Параметры.ЦветФасада = ?(ЗначениеЗаполнено(Строка.НоменклатураФасада.КраткоеНаименование), Строка.НоменклатураФасада.КраткоеНаименование, Строка.НоменклатураФасада);
					ОбластьСтрокаФасады.Параметры.Обрамление = ?(ЗначениеЗаполнено(Строка.ОбрамлениеФасада.КраткоеНаименование), Строка.ОбрамлениеФасада.КраткоеНаименование, Строка.ОбрамлениеФасада);
					ОбластьСтрокаФасады.Параметры.Ручка = ?(ЗначениеЗаполнено(Строка.НоменклатураРучки.КраткоеНаименование), Строка.НоменклатураРучки.КраткоеНаименование, Строка.НоменклатураРучки);
					ОбластьСтрокаФасады.Параметры.РасположениеРучки = Строка.РасположениеПазовИРучкиНаФасадах.ПоложениеРучки;
					ОбластьСтрокаФасады.Параметры.Механизм1 = ?(ЗначениеЗаполнено(Строка.МеханизмФасада.КраткоеНаименование), Строка.МеханизмФасада.КраткоеНаименование, Строка.МеханизмФасада);
					ОбластьСтрокаФасады.Параметры.Демпфер = ?(ЗначениеЗаполнено(Строка.Демпфер.КраткоеНаименование), Строка.Демпфер.КраткоеНаименование, Строка.Демпфер);
					ОбластьСтрокаФасады.Параметры.КоличествоМеханизм1 = Строка.КоличествоМеханизмФасада;
					ОбластьСтрокаФасады.Параметры.КоличествоДемпфер = Строка.КоличествоДемпфер;
					ОбластьСтрокаФасады.Параметры.ВыдвижнойЭлемент = Строка.СхемаЯщика;
					ОбластьСтрокаФасады.Параметры.ЛДСП = ?(ЗначениеЗаполнено(Строка.НоменклатураЭлемента.КраткоеНаименование), Строка.НоменклатураЭлемента.КраткоеНаименование, Строка.НоменклатураЭлемента);
					ОбластьСтрокаФасады.Параметры.Торцовка = ?(ЗначениеЗаполнено(Строка.ТорцовкаЭлемента.КраткоеНаименование), Строка.ТорцовкаЭлемента.КраткоеНаименование, Строка.ТорцовкаЭлемента);
					ОбластьСтрокаФасады.Параметры.ДопЭлемент = ?(ЗначениеЗаполнено(Строка.ДопЭлемент.КраткоеНаименование), Строка.ДопЭлемент.КраткоеНаименование, Строка.ДопЭлемент);
					ОбластьСтрокаФасады.Параметры.Петля = Неопределено;

					Если Строка.ВидЭлемента = "Ящик" Тогда

						Глубина = 0;
						
						Попытка
							Выполнить("Глубина = " + СписокЯщики.Найти(Строка.ИмяФасада, "ИмяЯщика").ГлубинаЯщика);
						Исключение
							Глубина = ВыборкаПоИзделиям.ГлубинаКороба;
						КонецПопытки;
						
						Направляющие = НайтиНаправляющиеНоменклатура(ВыборкаПоИзделиям.Подразделение, Строка.МеханизмЭлемента, Глубина);
						ОбластьСтрокаФасады.Параметры.Механизм = ?(ЗначениеЗаполнено(Направляющие), Направляющие.КраткоеНаименование, "");
						
					Иначе
						
						Попытка
							ОбластьСтрокаФасады.Параметры.Петля = ?(ЗначениеЗаполнено(Строка.Петли.КраткоеНаименование), Строка.Петли.КраткоеНаименование, Строка.Петли);
						Исключение
							ОбластьСтрокаФасады.Параметры.Петля = СписокМатериалы.Найти(Строка.ИмяФасада,"ИмяДетали").Петли.КраткоеНаименование;
						КонецПопытки;
						
					КонецЕсли;
					
					ТабДок.Вывести(ОбластьСтрокаФасады);
					
				КонецЦикла;
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьПустаяСтрока);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьШкафПоКаталогу(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ШкафПоКаталогу";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = Документы.Спецификация.ПолучитьМакет("ШкафПоКаталогу");
	ОбластьОсновноеПоле = Макет.ПолучитьОбласть("ОсновноеПоле");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХранимыеФайлыВерсий.ХранимыйФайл КАК Изображение,
	|	ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВладелецФайла КАК Изделие,
	|	ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла КАК ВидФайла
	|ПОМЕСТИТЬ ФайлыКаталога
	|ИЗ
	|	РегистрСведений.ХранимыеФайлыВерсий КАК ХранимыеФайлыВерсий
	|ГДЕ
	|	ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВладелецФайла ССЫЛКА Справочник.КаталогИзделий
	|	И ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ТекущаяВерсия.НомерВерсии = ХранимыеФайлыВерсий.ВерсияФайла.НомерВерсии
	|	И (ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.ОсновнаяКартинка)
	|			ИЛИ ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаЛевая)
	|			ИЛИ ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаПравая))
	|	И НЕ ХранимыеФайлыВерсий.ВерсияФайла.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацияСписокИзделийПоКаталогу.ВысотаИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.ГлубинаИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.Изделие,
	|	СпецификацияСписокИзделийПоКаталогу.ШиринаИзделия КАК ШиринаИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.НомерСтроки,
	|	ФайлыКаталога.Изображение КАК Изображение,
	|	СпецификацияСписокИзделийПоКаталогу.ВидИзделия КАК ВидИзделия,
	|	ФайлыКаталога.ВидФайла,
	|	СпецификацияСписокИзделийПоКаталогу.Комментарий,
	|	СпецификацияСписокИзделийПоКаталогу.НоменклатураЛДСП,
	|	СпецификацияСписокИзделийПоКаталогу.КромкаЛДСП,
	|	СпецификацияСписокИзделийПоКаталогу.Ручка,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Подразделение КАК Подразделение,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Контрагент КАК Контрагент,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Номер КАК Номер,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка КАК Ссылка,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Автор КАК Автор,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.ДатаИзготовления КАК ДатаИзготовления,
	|	СпецификацияСписокИзделийПоКаталогу.Изделие.НеВлияетНаОсновной КАК НеВлияетНаОсновной,
	|	СпецификацияСписокИзделийПоКаталогу.Завал,
	|	СпецификацияСписокИзделийПоКаталогу.ВидСтены,
	|	СпецификацияСписокИзделийПоКаталогу.Изделие.ВидИзделияПоКаталогу КАК ВидИзделияПоКаталогу
	|ИЗ
	|	Документ.Спецификация.СписокИзделийПоКаталогу КАК СпецификацияСписокИзделийПоКаталогу
	|		ЛЕВОЕ СОЕДИНЕНИЕ ФайлыКаталога КАК ФайлыКаталога
	|		ПО СпецификацияСписокИзделийПоКаталогу.Изделие = ФайлыКаталога.Изделие
	|			И (ВЫБОР
	|				КОГДА СпецификацияСписокИзделийПоКаталогу.ВидИзделия = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент)
	|					ТОГДА ФайлыКаталога.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаЛевая)
	|				КОГДА СпецификацияСписокИзделийПоКаталогу.ВидИзделия = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент)
	|					ТОГДА ФайлыКаталога.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаПравая)
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ГДЕ
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка В(&МассивДокументов)
	|ИТОГИ
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Автор),
	|	МАКСИМУМ(ДатаИзготовления)
	|ПО
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ОбластьОсновноеПоле.Параметры.Заполнить(Выборка);
		
		ОбластьОсновноеПоле.Параметры.НомерСпецификации = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Выборка.Номер, "0");
		ОбластьОсновноеПоле.Параметры.ДатаИзготовления = Формат(Выборка.ДатаИзготовления,"ДФ=dd.MM.yyyy");
		
		КоличествоДверей = "Нет";
		ВысотаПроема = 0;
		ШиринаПроема = 0;
		Для Каждого ЭлементДвери Из Выборка.Ссылка.СписокДверей Цикл
			Если ЭлементДвери.ПоКаталогу Тогда
				КоличествоДверей = ЭлементДвери.Двери.Количество;
				ВысотаПроема = ЭлементДвери.Двери.ВысотаПроема;
				ШиринаПроема = ЭлементДвери.Двери.ШиринаПроема;
			КонецЕсли;
		КонецЦикла;
		ОбластьОсновноеПоле.Параметры.КоличествоДверей = КоличествоДверей;
		ОбластьОсновноеПоле.Параметры.ВысотаПроема = ВысотаПроема;
		ОбластьОсновноеПоле.Параметры.ШиринаПроема = ШиринаПроема;
		
		Комментарий = "";
		ШиринаИзделия = 0;
		ВысотаИзделия = 0;
		ГлубинаИзделия = 0;
		
		ВыборкаПоКоробам = Выборка.Выбрать();
		Пока ВыборкаПоКоробам.Следующий() Цикл
			
			Комментарий = СокрЛП(Комментарий) + Символы.ПС + ВыборкаПоКоробам.Комментарий;
			ГлубинаИзделия = Макс(ГлубинаИзделия, ВыборкаПоКоробам.ГлубинаИзделия);
			
			Если ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.Потолок Тогда
				
				Рисунок = ОбластьОсновноеПоле.Области.Крыша;
				ВысотаИзделия = ВысотаИзделия + ?(НЕ ВыборкаПоКоробам.НеВлияетНаОсновной, ВыборкаПоКоробам.ВысотаИзделия, 0);
				ОбластьОсновноеПоле.Параметры.ЗавалПотолок = ВыборкаПоКоробам.Завал;
				ОбластьОсновноеПоле.Параметры.ИзделиеПотолок = ВыборкаПоКоробам.Изделие;
				ОбластьОсновноеПоле.Параметры.СтенаПотолок = ВыборкаПоКоробам.ВидСтены;
				
				// +++ { [22.05.2015]
				// Жульдиков
				
				Если (ВыборкаПоКоробам.ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.КрышаКороб)
					ИЛИ(ВыборкаПоКоробам.ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.КрышаЧерезОпорнуюПланку) Тогда
					
					ОбластьОсновноеПоле.Параметры.КоробПотолок = ВыборкаПоКоробам.ВысотаИзделия;
				Иначе
					ОбластьОсновноеПоле.Параметры.КоробПотолок = 0;
				КонецЕсли;
				
				// +++ { [22.05.2015]
				
			ИначеЕсли ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ОсновнойЭлемент Тогда
				
				Рисунок = ОбластьОсновноеПоле.Области.Основной;
				ОбластьОсновноеПоле.Параметры.ЛДСП = ВыборкаПоКоробам.НоменклатураЛДСП;
				ОбластьОсновноеПоле.Параметры.Торцовка = ВыборкаПоКоробам.КромкаЛДСП;
				ОбластьОсновноеПоле.Параметры.Ручки = ВыборкаПоКоробам.Ручка;
				ВысотаИзделия = ВысотаИзделия + ВыборкаПоКоробам.ВысотаИзделия;
				ШиринаИзделия = ШиринаИзделия + ВыборкаПоКоробам.ШиринаИзделия;
				ОбластьОсновноеПоле.Параметры.ЗавалСтенка = ВыборкаПоКоробам.Завал;
				ОбластьОсновноеПоле.Параметры.ИзделиеСтенка = ВыборкаПоКоробам.Изделие;
				ОбластьОсновноеПоле.Параметры.СтенаСтенка = ВыборкаПоКоробам.ВидСтены;
				
			ИначеЕсли ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент Тогда
				
				Рисунок = ОбластьОсновноеПоле.Области.Левый;
				ОбластьОсновноеПоле.Параметры.Ручки = ?(ЗначениеЗаполнено(ОбластьОсновноеПоле.Параметры.Ручки), ОбластьОсновноеПоле.Параметры.Ручки, ВыборкаПоКоробам.Ручка);
				ШиринаИзделия = ШиринаИзделия + ?(НЕ ВыборкаПоКоробам.НеВлияетНаОсновной, ВыборкаПоКоробам.ШиринаИзделия, 0);
				ОбластьОсновноеПоле.Параметры.ЗавалЛевый = ВыборкаПоКоробам.Завал;
				ОбластьОсновноеПоле.Параметры.ИзделиеЛевый = ВыборкаПоКоробам.Изделие;
				ОбластьОсновноеПоле.Параметры.СтенаЛевый = ВыборкаПоКоробам.ВидСтены;
				
				// +++ { [22.05.2015]
				// Жульдиков
				
				Если (ВыборкаПоКоробам.ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.КоробБоковойСлева) 
					ИЛИ (ВыборкаПоКоробам.ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.БоковаяПанельЧерезОтбойнуюПланкуСлева)
					ИЛИ (ВыборкаПоКоробам.ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ОтбойнаяПланкаСлева) Тогда
					
					Значение = ВыборкаПоКоробам.ШиринаИзделия;;
				Иначе
					Значение = 0;
				КонецЕсли;
				
				ОбластьОсновноеПоле.Параметры.КоробЛевый =Значение;
				
				// +++ { [22.05.2015]
				
			ИначеЕсли ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент Тогда
				
				Рисунок = ОбластьОсновноеПоле.Области.Правый;
				ОбластьОсновноеПоле.Параметры.Ручки = ?(ЗначениеЗаполнено(ОбластьОсновноеПоле.Параметры.Ручки), ОбластьОсновноеПоле.Параметры.Ручки, ВыборкаПоКоробам.Ручка);
				ШиринаИзделия = ШиринаИзделия + ?(НЕ ВыборкаПоКоробам.НеВлияетНаОсновной, ВыборкаПоКоробам.ШиринаИзделия, 0);
				ОбластьОсновноеПоле.Параметры.ЗавалПравый = ВыборкаПоКоробам.Завал;
				ОбластьОсновноеПоле.Параметры.ИзделиеПравый = ВыборкаПоКоробам.Изделие;
				ОбластьОсновноеПоле.Параметры.СтенаПравый = ВыборкаПоКоробам.ВидСтены;
				
				// +++ { [22.05.2015]
				// Жульдиков
				
				Если (ВыборкаПоКоробам.ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.КоробБоковойСлева)
					ИЛИ (ВыборкаПоКоробам.ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.БоковаяПанельЧерезОтбойнуюПланкуСправа)
					ИЛИ (ВыборкаПоКоробам.ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ОтбойнаяПланкаСправа) Тогда
					
					Значение = ВыборкаПоКоробам.ШиринаИзделия;
					
				Иначе
					
					Значение = 0;
					
				КонецЕсли;
				
				ОбластьОсновноеПоле.Параметры.КоробПравый = Значение;
				
				// Жульдиков
				
			ИначеЕсли ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.Пол Тогда
				
				Рисунок = ОбластьОсновноеПоле.Области.Пол;
				ВысотаИзделия = ВысотаИзделия + ?(НЕ ВыборкаПоКоробам.НеВлияетНаОсновной, ВыборкаПоКоробам.ВысотаИзделия, 0);
				ОбластьОсновноеПоле.Параметры.ЗавалПол = ВыборкаПоКоробам.Завал;
				ОбластьОсновноеПоле.Параметры.ИзделиеПол = ВыборкаПоКоробам.Изделие;
				ОбластьОсновноеПоле.Параметры.СтенаПол = ВыборкаПоКоробам.ВидСтены;
				
				// +++ { [22.05.2015]
				// Жульдиков
				
				Если(ВыборкаПоКоробам.ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ПолКороб)
					ИЛИ (ВыборкаПоКоробам.ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ПолПодиум) Тогда
					
					Значение = ВыборкаПоКоробам.ВысотаИзделия;
					
				Иначе
					
					Значение = 0;
					
				КонецЕсли;
				
				ОбластьОсновноеПоле.Параметры.КоробПол = Значение;
				
				// } +++ [22.05.2015]
				
			ИначеЕсли ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ЗадняяСтенка Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Если Рисунок <> Неопределено Тогда
				
				Если ЗначениеЗаполнено(ВыборкаПоКоробам.Изображение) Тогда
					Рисунок.Картинка = Новый Картинка(ВыборкаПоКоробам.Изображение.Получить());
				Иначе
					Рисунок.Картинка = Новый Картинка;
				КонецЕсли;
				Рисунок.РазмерКартинки = РазмерКартинки.Пропорционально;
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьОсновноеПоле.Параметры.ШиринаИзделия = ШиринаИзделия;
		ОбластьОсновноеПоле.Параметры.ВысотаИзделия = ВысотаИзделия;
		ОбластьОсновноеПоле.Параметры.ГлубинаИзделия = ГлубинаИзделия;
		ОбластьОсновноеПоле.Параметры.Комментарий = Комментарий;
		ТабДок.Вывести(ОбластьОсновноеПоле);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьКриволинейныеДетали(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДок.ТочностьПечати=ТочностьПечати.Точная;
	
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСправа = 2;
	
	ТабДок.РазмерКолонтитулаСверху = 0;
	ТабДок.РазмерКолонтитулаСнизу = 0;
	
	Макет = Документы.Спецификация.ПолучитьМакет("Раскрой");
	ОбластьКартинка = Макет.ПолучитьОбласть("Картинка");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаскройДеталей.Объект КАК Ссылка,
	|	РаскройДеталей.РисунокКривогоПила
	|ИЗ
	|	РегистрСведений.РаскройДеталей КАК РаскройДеталей
	|ГДЕ
	|	РаскройДеталей.Объект В(&Объект)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		МассивПараметровКривогоПила = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(Выборка.РисунокКривогоПила,"save☻", ""), "☺");
		
		Для Каждого Строка Из МассивПараметровКривогоПила Цикл
			
			ДанныеКривогоПила = Base64Значение(Строка);
			
			ОбластьКартинка.Рисунки.D1.Картинка = Новый Картинка(ДанныеКривогоПила);
			ТабДок.Вывести(ОбластьКартинка);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьКриволинейныеДеталиИзРедактора(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДок.ТочностьПечати=ТочностьПечати.Точная;
	
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСправа = 2;
	
	ТабДок.РазмерКолонтитулаСверху = 0;
	ТабДок.РазмерКолонтитулаСнизу = 0;
	
	Макет = Документы.Спецификация.ПолучитьМакет("Раскрой");
	ОбластьКартинка = Макет.ПолучитьОбласть("Картинка");
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	ДанныеКривогоПила = Base64Значение(СтрЗаменить(МассивДокументов.СтрокаКартинка,"save☻", ""));
	
	ОбластьКартинка.Рисунки.D1.Картинка = Новый Картинка(ДанныеКривогоПила);
	ТабДок.Вывести(ОбластьКартинка);
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Неопределено);
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьРаскройСпецификации(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДок.ТочностьПечати=ТочностьПечати.Точная;
	
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСправа = 2;
	
	ТабДок.РазмерКолонтитулаСверху = 0;
	ТабДок.РазмерКолонтитулаСнизу = 0;
	
	Макет = Документы.Спецификация.ПолучитьМакет("Раскрой");
	ОбластьКартинка = Макет.ПолучитьОбласть("Картинка");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаскройДеталей.РисунокРаскроя,
	|	РаскройДеталей.Объект КАК Ссылка,
	|	РаскройДеталей.РисунокКривогоПила
	|ИЗ
	|	РегистрСведений.РаскройДеталей КАК РаскройДеталей
	|ГДЕ
	|	РаскройДеталей.Объект В(&Объект)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		МассивПараметров = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(Выборка.РисунокРаскроя,"save☻", ""), "☺");
		МассивПараметровКривогоПила = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(Выборка.РисунокКривогоПила,"save☻", ""), "☺");
		
		Для Каждого Строка Из МассивПараметровКривогоПила Цикл
			
			ДанныеКривогоПила = Base64Значение(Строка);
			
			ОбластьКартинка.Рисунки.D1.Картинка = Новый Картинка(ДанныеКривогоПила);
			ТабДок.Вывести(ОбластьКартинка);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
		
		Для Каждого Элемент Из МассивПараметров Цикл
			
			Данные = Base64Значение(Элемент);
			
			ОбластьКартинка.Рисунки.D1.Картинка = Новый Картинка(Данные);
			ТабДок.Вывести(ОбластьКартинка);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СпецификацияФРС") Тогда
		
		ПодготовитьПечатнуюФорму("СпецификацияФРС", "Спецификация: Зона ФРС", "Документ.Спецификация.Спецификация", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СпецификацияСтекольная") Тогда
		
		ПодготовитьПечатнуюФорму("СпецификацияСтекольная", "Спецификация: Cтекольная зона", "Документ.Спецификация.Спецификация", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СпецификацияСборка") Тогда
		
		ПодготовитьПечатнуюФорму("СпецификацияСборка", "Спецификация: Зона сборка", "Документ.Спецификация.Спецификация", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СпецификацияОТК") Тогда
		
		ПодготовитьПечатнуюФорму("СпецификацияОТК", "Спецификация: Зона ОТК", "Документ.Спецификация.Спецификация", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МатериалЗаказчика") Тогда
		
		ПодготовитьПечатнуюФорму("МатериалЗаказчика", "ПечатьМатериалЗаказчика", "Документ.Спецификация.ПечатьМатериалЗаказчика",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктГотовности") Тогда
		
		ПодготовитьПечатнуюФорму("АктГотовности", "Акт готовности", "Документ.Спецификация.АктГотовности",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИзделиеПоКаталогу") Тогда
		
		ПодготовитьПечатнуюФорму("ИзделиеПоКаталогу", "Изделие по каталогу", "Документ.Спецификация.ИзделиеПоКаталогу",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ШкафПоКаталогу") Тогда
		
		ПодготовитьПечатнуюФорму("ШкафПоКаталогу", "Шкаф по каталогу", "Документ.Спецификация.ШкафПоКаталогу",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Дверь") Тогда
		
		ПодготовитьПечатнуюФорму("Дверь", "Дверь", "Документ.Спецификация.Дверь",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СтеклянныеФасады") Тогда
		
		ПодготовитьПечатнуюФорму("СтеклянныеФасады", "Стеклянные фасады", "Документ.Спецификация.СтеклянныеФасады",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Фасады") Тогда
		
		ПодготовитьПечатнуюФорму("Фасады", "АГТ и алюминиевые фасады", "Документ.Спецификация.Фасады",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заказ") Тогда
		
		ПодготовитьПечатнуюФорму("Заказ", "Заказ", "Документ.Спецификация.Заказ",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УпаковочныйЛист") Тогда
		
		ПодготовитьПечатнуюФорму("УпаковочныйЛист", "Упаковочный лист", "Документ.Спецификация.УпаковочныйЛист",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктГотовности") Тогда
		
		ПодготовитьПечатнуюФорму("АктГотовности", "Акт готовности", "Документ.Спецификация.АктГотовности",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
		
		ПодготовитьПечатнуюФорму("Торг12", "Торг12", "Документ.РеализацияМатериалов.ПечатьТорг12",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Раскрой") Тогда
		
		ПодготовитьПечатнуюФорму("Раскрой", "Раскрой", "Документ.Спецификация.Раскрой",   
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КриволинейныеДетали") Тогда
		
		ПодготовитьПечатнуюФорму("КриволинейныеДетали", "КриволинейныеДетали", "Документ.Спецификация.Раскрой",   
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КриволинейныеДеталиИзРедактора") Тогда
		
		Параметры = Новый Структура;
		Параметры.Вставить("СтрокаКартинка",ПараметрыПечати.СтрокаКартинка);
		Параметры.Вставить("МассивОбъектов",МассивОбъектов);
		
		ПодготовитьПечатнуюФорму("КриволинейныеДеталиИзРедактора", "КриволинейныеДеталиИзРедактора", "Документ.Спецификация.Раскрой",   
		Параметры, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Эскиз") Тогда
		
		ПодготовитьПечатнуюФорму("Эскиз", "Эскиз", "Документ.Договор.Эскиз",   
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗамерныйЛист") Тогда
		
		ПодготовитьПечатнуюФорму("ЗамерныйЛист", "Замерный Лист", "Документ.Спецификация.ПечатьКартинки",   
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МонтажнаяСхема") Тогда
		
		ПодготовитьПечатнуюФорму("МонтажнаяСхема", "Монтажная Схема", "Документ.Спецификация.ПечатьКартинки",   
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЦеховаяСхема") Тогда
		
		ПодготовитьПечатнуюФорму("ЦеховаяСхема", "Цеховая Схема", "Документ.Спецификация.ПечатьКартинки",   
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Комплектация") Тогда
		
		ПодготовитьПечатнуюФорму("Комплектация", "Комплектация", "Документ.Спецификация.Спецификация",   
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЧертежДвери") Тогда
		
		Параметры = Новый Структура;
		Параметры.Вставить("КартинкиДвери",ПараметрыПечати.КартинкиДвери);
		Параметры.Вставить("МассивОбъектов",МассивОбъектов);
		
		ПодготовитьПечатнуюФорму("ЧертежДвери", "Чертеж двери", "",
		Параметры, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Обточка") Тогда
		
		ПодготовитьПечатнуюФорму("Обточка", "Обточка", "Документ.Спецификация.Обточка",   
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

Функция ПечатьМатериалЗаказчика(МассивДокументов, ОбъектыПечати) Экспорт
	
	Макет = Документы.Спецификация.ПолучитьМакет("МатериалЗаказчика");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСписокНоменклатурыШапка = Макет.ПолучитьОбласть("ШапкаНоменклатуры");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Ссылка.ДатаИзготовления КАК ДатаИзготовления,
	|	СпецификацияСписокНоменклатуры.Ссылка.Номер,
	|	СпецификацияСписокНоменклатуры.Ссылка.Контрагент КАК Контрагент,
	|	СпецификацияСписокНоменклатуры.Номенклатура,
	|	СпецификацияСписокНоменклатуры.Количество,
	|	СпецификацияСписокНоменклатуры.Номенклатура.ЕдиницаИзмерения Как ЕдиницаИзмерения
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.ПредоставитЗаказчик
	|	И СпецификацияСписокНоменклатуры.Ссылка В(&МассивДокументов)";
	
	Запрос.Параметры.Вставить("МассивДокументов", МассивДокументов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВставлятьРазделительСтраниц = Ложь;
	НомерСтроки = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтроки = НомерСтроки + 1;
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		Если ВставлятьРазделительСтраниц Тогда
			
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ОбластьШапка.Параметры.Заполнить(Выборка);
		ОбластьШапка.Параметры.СпецификацияНомер = Формат(Число(Выборка.Номер), "ЧГ=");
		ОбластьШапка.Параметры.ДатаИзготовления = Формат(Выборка.ДатаИзготовления, "ДЛФ=DD");
		ТабДок.Вывести(ОбластьШапка, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьСписокНоменклатурыШапка);
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		ТабДок.Вывести(ОбластьСтрока);
		
		ОбластьПодвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьПодвал);
		
		ВставлятьРазделительСтраниц = Истина;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, МассивДокументов);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Процедура ПодготовитьПечатнуюФорму(Знач ИмяМакета, ПредставлениеМакета, ПолныйПутьКМакету = "", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	Если ИмяМакета = "СпецификацияФРС" Тогда
		
		ТабДок = ПечатьСпецификации(МассивОбъектов, ОбъектыПечати, "Зона ФРС");
		
	ИначеЕсли ИмяМакета = "СпецификацияСтекольная" Тогда
		
		ТабДок = ПечатьСпецификации(МассивОбъектов, ОбъектыПечати, "Стекольная зона");
		
	ИначеЕсли ИмяМакета = "СпецификацияСборка" Тогда
		
		ТабДок = ПечатьСпецификации(МассивОбъектов, ОбъектыПечати, "Зона сборки");
	
	ИначеЕсли ИмяМакета = "СпецификацияОТК" Тогда
		
		ТабДок = ПечатьСпецификации(МассивОбъектов, ОбъектыПечати, "Зона ОТК");
		
	ИначеЕсли ИмяМакета = "Фасады" Тогда
		
		ТабДок = ПечатьФасады(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "АктГотовности" Тогда
		
		ТабДок = ПечатьАктГотовности(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "МатериалЗаказчика" Тогда
		
		ТабДок = ПечатьМатериалЗаказчика(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "Дверь" Тогда
		
		ТабДок = ПечатьДверь(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "СтеклянныеФасады" Тогда
		
		ТабДок = ПечатьСтеклянныеФасады(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "ИзделиеПоКаталогу" Тогда
		
		ТабДок = ПечатьИзделиеПоКаталогу(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "ШкафПоКаталогу" Тогда
		
		ТабДок = ПечатьШкафПоКаталогу(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "Заказ" Тогда
		
		ТабДок = ПечатьЗаказ(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "УпаковочныйЛист" Тогда
		
		ТабДок = ПечатьУпаковочныйЛист(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "АктГотовности" Тогда
		
		ТабДок = ПечатьАктГотовности(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "Торг12" Тогда
		
		ТабДок = ЛексСервер.ПечататьТорг12(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "Раскрой" Тогда
		
		ТабДок = ПечатьРаскройСпецификации(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "КриволинейныеДетали" Тогда
		
		ТабДок = ПечатьКриволинейныеДетали(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "КриволинейныеДеталиИзРедактора" Тогда
		
		ТабДок = ПечатьКриволинейныеДеталиИзРедактора(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "ЧертежДвери" Тогда
		
		ТабДок = ПечатьЧертежДвери(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "Эскиз" Тогда
		
		ТабДок = ПечатьЭскиз(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "ЗамерныйЛист" Тогда
		
		ТабДок = ПечатьЗамерныйЛист(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "МонтажнаяСхема" Тогда
		
		ТабДок = ПечатьМонтажнаяСхема(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "ЦеховаяСхема" Тогда
		
		ТабДок = ПечатьЦеховаяСхема(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "Комплектация" Тогда
		
		ТабДок = ПечатьКомплектации(МассивОбъектов, ОбъектыПечати);
		
	ИначеЕсли ИмяМакета = "Обточка" Тогда
		
		ТабДок = ПечатьОбточка(МассивОбъектов, ОбъектыПечати);
		
	КонецЕсли;
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
	
КонецПроцедуры

Функция ПолучитьОсновныеИзСписокНоменклатуры(Спецификация, НомГруппа)
	
	Мас=Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("НомГруппа", НомГруппа);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписНом.Номенклатура КАК Номенклатура,
	|	СписНом.Номенклатура.НоменклатурнаяГруппа КАК НомГруппа,
	|	СписНом.Номенклатура.НоменклатурнаяГруппа.Родитель КАК НомГруппаРод,
	|	СУММА(СписНом.Количество) КАК Сум
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СписНом
	|ГДЕ
	|	СписНом.Ссылка = &Спецификация
	|	И СписНом.Номенклатура.НоменклатурнаяГруппа В ИЕРАРХИИ (&НомГруппа)
	|СГРУППИРОВАТЬ ПО
	|	СписНом.Номенклатура
	|УПОРЯДОЧИТЬ ПО
	|	НомГруппа";
	
	ВыборкаМат = Запрос.Выполнить().Выбрать();
	Пока ВыборкаМат.Следующий() Цикл
		
		СТ=Новый Структура;
		СТ.Вставить("Номенклатура", ВыборкаМат.Номенклатура);
		СТ.Вставить("НомГруппа", ВыборкаМат.НомГруппа);
		СТ.Вставить("НомГруппаРод", ВыборкаМат.НомГруппаРод);
		СТ.Вставить("Количество", ВыборкаМат.Сум);
		Мас.Добавить(СТ);
		
	КонецЦикла;
	
	Возврат Мас;
	
КонецФункции

Процедура ЗаполнитьПараметрМакетаЭскиз(Мас, ПарамМакета)
	
	Если Мас.Количество()>0 Тогда
		
		Инд2=0;
		Инд=0;
		Кол=0;
		
		Для каждого Элем Из Мас Цикл
			Если Элем[1]>Кол Тогда
				Кол=Элем[1];
				Инд=Инд2;
			КонецЕсли;
			Инд2=Инд2+1;
		КонецЦикла;
		
		ПарамМакета=Мас[Инд][0];
		
		Мас.Удалить(Инд);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьЭскиз(Выборка, ОбъектыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_Эскиз";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТабДок.ТочностьПечати=ТочностьПечати.Точная;
	
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСнизу = 5;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСправа = 5;
	
	ТабДок.РазмерКолонтитулаСверху = 1;
	ТабДок.РазмерКолонтитулаСнизу = 1;
	
	Спецификация=Выборка[0];
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	
	Если Спецификация.Дилерский Тогда
		УстановитьПривилегированныйРежим(Истина);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДоговорДилера.Ссылка
		|ИЗ
		|	Документ.ДоговорДилера КАК ДоговорДилера
		|ГДЕ
		|	ДоговорДилера.Спецификация = &Спецификация";
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Договор.Ссылка
		|ИЗ
		|	Документ.Договор КАК Договор
		|ГДЕ
		|	Договор.Спецификация = &Спецификация";
		
	КонецЕсли;
	
	ВыборкаДоговор = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаДоговор.Количество() > 0 Тогда
		
		ВыборкаДоговор.Следующий();
		Договор = ВыборкаДоговор.Ссылка;
		
	КонецЕсли;
	
	Контрагент=Спецификация.Контрагент;
	СписокДверей=Спецификация.СписокДверей;
	
	ПараметрыМакета=Новый Структура;
	
	ПараметрыМакета.Вставить("НомерСпецификации",Спецификация);
	Если ЗначениеЗаполнено(Договор) Тогда
		ПараметрыМакета.Вставить("НомерДоговора",Договор);
	Иначе
		ПараметрыМакета.Вставить("НомерДоговора","");
	КонецЕсли;
	
	Если Спецификация.Дилерский Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	ПараметрыМакета.Вставить("АдресМонтажа",Спецификация.АдресМонтажа);
	ПараметрыМакета.Вставить("Телефон",Контрагент.Телефон);
	ПараметрыМакета.Вставить("ДатаМонтажа",Формат(Спецификация.ДатаМонтажа,"ДФ=dd.MM.yy"));
	ПараметрыМакета.Вставить("ОсновнойЛДСП","----");
	ПараметрыМакета.Вставить("ДополнительныйЛДСП","----");
	ПараметрыМакета.Вставить("ОсновнойДВП","----");
	ПараметрыМакета.Вставить("ОсновнойМДФ","----");
	ПараметрыМакета.Вставить("ДополнительныйМДФ","----");
	ПараметрыМакета.Вставить("Кромка","----");
	ПараметрыМакета.Вставить("ДополнительнаяКромка","----");
	ПараметрыМакета.Вставить("АлПрофиль","----");
	ПараметрыМакета.Вставить("Ручка","----");
	ПараметрыМакета.Вставить("КромкаМДФ","----");
	ПараметрыМакета.Вставить("АГТ","----");
	ПараметрыМакета.Вставить("Мойка","----");
	ПараметрыМакета.Вставить("Пристенок","----");
	ПараметрыМакета.Вставить("Столешница","----");
	ПараметрыМакета.Вставить("Цоколь","----");
	ПараметрыМакета.Вставить("Примечание",Спецификация.Комментарий);
	ПараметрыМакета.Вставить("Проемы","");
	
	НомГруппы=Справочники.НоменклатурныеГруппы;
	
	МассивНомГрупп=Новый Массив;
	МассивНомГрупп.Добавить(НомГруппы.ЛДСП);
	МассивНомГрупп.Добавить(НомГруппы.ДВП);
	МассивНомГрупп.Добавить(НомГруппы.МДФ);
	МассивНомГрупп.Добавить(НомГруппы.Мойка);
	МассивНомГрупп.Добавить(НомГруппы.Ручка);
	МассивНомГрупп.Добавить(НомГруппы.Столешница);
	МассивНомГрупп.Добавить(НомГруппы.ВертикальныйПрофиль);
	МассивНомГрупп.Добавить(НомГруппы.Цоколь);
	МассивНомГрупп.Добавить(НомГруппы.АГТПрофиль);
	МассивНомГрупп.Добавить(НомГруппы.Кромка);
	МассивНомГрупп.Добавить(НомГруппы.Кант);
	МассивНомГрупп.Добавить(НомГруппы.КромкаМДФ);
	МассивНомГрупп.Добавить(НомГруппы.Пристенок);
	
	НомВыборка = ПолучитьОсновныеИзСписокНоменклатуры(Спецификация,МассивНомГрупп);
	
	МасЛДСП=Новый Массив;
	МасДВП=Новый Массив;
	МасМДФ=Новый Массив;
	МасМойка=Новый Массив;
	МасРучка=Новый Массив;
	МасСтолешница=Новый Массив;
	МасАлюминиевыйПрофиль=Новый Массив;
	МасЦоколь=Новый Массив;
	МасАГТ=Новый Массив;
	МасКромка=Новый Массив;
	МасКромкаМДФ=Новый Массив;
	МасПристенок=Новый Массив;
	
	Для каждого Элемент Из НомВыборка Цикл
		
		Мас=Новый Массив;
		Мас.Добавить(Элемент.Номенклатура);
		Мас.Добавить(Элемент.Количество);
		
		Если Элемент.НомГруппаРод = НомГруппы.ЛДСП Тогда
			МасЛДСП.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
		Если Элемент.НомГруппа = НомГруппы.ДВП Тогда 
			МасДВП.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
		Если Элемент.НомГруппаРод = НомГруппы.МДФ Тогда 
			МасМДФ.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
		Если Элемент.НомГруппа = НомГруппы.Мойка Тогда 
			МасМойка.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
		Если Элемент.НомГруппа=НомГруппы.Ручка Тогда 
			МасРучка.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
		Если Элемент.НомГруппа=НомГруппы.Столешница Тогда 
			МасСтолешница.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
		Если Элемент.НомГруппа=НомГруппы.ВертикальныйПрофиль Тогда 
			МасАлюминиевыйПрофиль.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
		Если Элемент.НомГруппа=НомГруппы.Цоколь Тогда 
			МасЦоколь.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
		Если Элемент.НомГруппа=НомГруппы.АГТПрофиль Тогда 
			МасАГТ.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
		Если Элемент.НомГруппа=НомГруппы.Пристенок Тогда 
			МасПристенок.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
		Если ((Элемент.НомГруппаРод=НомГруппы.Кромка) ИЛИ (Элемент.НомГруппаРод=НомГруппы.Кант)) И НЕ(Элемент.НомГруппа=НомГруппы.КромкаМДФ)  Тогда 
			МасКромка.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
		Если Элемент.НомГруппа=НомГруппы.КромкаМДФ  Тогда 
			МасКромкаМДФ.Добавить(Мас);
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьПараметрМакетаЭскиз(МасЛДСП,ПараметрыМакета.ОсновнойЛДСП);
	ЗаполнитьПараметрМакетаЭскиз(МасЛДСП,ПараметрыМакета.ДополнительныйЛДСП);
	ЗаполнитьПараметрМакетаЭскиз(МасДВП,ПараметрыМакета.ОсновнойДВП);
	ЗаполнитьПараметрМакетаЭскиз(МасМДФ,ПараметрыМакета.ОсновнойМДФ);
	ЗаполнитьПараметрМакетаЭскиз(МасМДФ,ПараметрыМакета.ДополнительныйМДФ);
	ЗаполнитьПараметрМакетаЭскиз(МасМойка,ПараметрыМакета.Мойка);
	ЗаполнитьПараметрМакетаЭскиз(МасРучка,ПараметрыМакета.Ручка);
	ЗаполнитьПараметрМакетаЭскиз(МасСтолешница,ПараметрыМакета.Столешница);
	ЗаполнитьПараметрМакетаЭскиз(МасАлюминиевыйПрофиль,ПараметрыМакета.АлПрофиль);
	ЗаполнитьПараметрМакетаЭскиз(МасЦоколь,ПараметрыМакета.Цоколь);
	ЗаполнитьПараметрМакетаЭскиз(МасАГТ,ПараметрыМакета.АГТ);
	ЗаполнитьПараметрМакетаЭскиз(МасКромка,ПараметрыМакета.Кромка);
	ЗаполнитьПараметрМакетаЭскиз(МасКромка,ПараметрыМакета.ДополнительнаяКромка);
	ЗаполнитьПараметрМакетаЭскиз(МасКромкаМДФ,ПараметрыМакета.КромкаМДФ);
	ЗаполнитьПараметрМакетаЭскиз(МасПристенок,ПараметрыМакета.Пристенок);
	
	Если СписокДверей.Количество()>0 Тогда
		
		ПрСтр="Размеры проемов: ";
		Для каждого Дв Из СписокДверей Цикл
			
			ПрСтр=ПрСтр+Формат(Дв.Двери.ВысотаПроема, "ЧГ=0")+"x"+Формат(Дв.Двери.ШиринаПроема, "ЧГ=0")+"   ";
			
		КонецЦикла;
		
		ПараметрыМакета.Проемы = ПрСтр;
		
	КонецЕсли;
	
	Макет = Документы.Спецификация.ПолучитьМакет("Эскиз");
	
	ОбластьТело = Макет.ПолучитьОбласть("Тело");
	ОбластьТело.Параметры.Заполнить(ПараметрыМакета);
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("ВидФайла", Перечисления.ВидыПрисоединенныхФайлов.Эскиз);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Файлы.Ссылка КАК ПрикрепленныйФайл
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	Файлы.ВладелецФайла = &Спецификация
	|	И НЕ Файлы.ПометкаУдаления
	|	И Файлы.ВидФайла = &ВидФайла";
	
	ВыборкаФайлов = Запрос.Выполнить().Выбрать();
	МассивФайлов = Новый Массив;
	
	Пока ВыборкаФайлов.Следующий() Цикл
		
		Файл = ВыборкаФайлов.ПрикрепленныйФайл;
		ОбластьТело.Параметры.Примечание = ПараметрыМакета.Примечание + ". " + Файл.Описание;
		
		Рисунок = ОбластьТело.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
		Рисунок.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
		Рисунок.РазмерКартинки = РазмерКартинки.Пропорционально;
		Рисунок.Верх = 16;
		Рисунок.Лево = 98;
		Рисунок.Высота = 164;
		Рисунок.Ширина = 155;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Версия", Файл.ТекущаяВерсия);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХранимыеФайлыВерсий.ХранимыйФайл КАК Файл,
		|	ХранимыеФайлыВерсий.ВерсияФайла
		|ИЗ
		|	РегистрСведений.ХранимыеФайлыВерсий КАК ХранимыеФайлыВерсий
		|ГДЕ
		|	ХранимыеФайлыВерсий.ВерсияФайла = &Версия";
		
		НоваяВыборка = Запрос.Выполнить().Выбрать();
		НоваяВыборка.Следующий();
		Картинка = НоваяВыборка.Файл.Получить();
		Расширение = НоваяВыборка.ВерсияФайла.Расширение;
		
		Если РасширениеКартинки(Расширение) Тогда
			
			Рисунок.Картинка = Новый Картинка(Картинка);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДок.Вывести(ОбластьТело);
			
		КонецЕсли;
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка[0]);
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьЗамерныйЛист(Выборка, ОбъектыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ЗамерныйЛист";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТабДок.ТочностьПечати=ТочностьПечати.Точная;
	
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСнизу = 5;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСправа = 5;
	
	ТабДок.РазмерКолонтитулаСверху = 1;
	ТабДок.РазмерКолонтитулаСнизу = 1;
	
	Спецификация=Выборка[0];
	
	
	Макет = Документы.Спецификация.ПолучитьМакет("ЗамерныйЛист");
	ОбластьКартинка = Макет.ПолучитьОбласть("Картинка");
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Замер", Спецификация.ДокументОснование);
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("ВидФайла", Перечисления.ВидыПрисоединенныхФайлов.ЗамерныйЛист);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Файлы.Ссылка КАК ПрикрепленныйФайл
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	(Файлы.ВладелецФайла = &Замер
	|	ИЛИ Файлы.ВладелецФайла = &Спецификация)
	|	И НЕ Файлы.ПометкаУдаления
	|	И Файлы.ВидФайла = &ВидФайла";
	
	ВыборкаФайлов = Запрос.Выполнить().Выбрать();
	МассивФайлов = Новый Массив;
	
	Пока ВыборкаФайлов.Следующий() Цикл
		
		Файл = ВыборкаФайлов.ПрикрепленныйФайл;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Версия", Файл.ТекущаяВерсия);
		Запрос.УстановитьПараметр("Замер", Спецификация.ДокументОснование);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХранимыеФайлыВерсий.ХранимыйФайл КАК Файл,
		|	ХранимыеФайлыВерсий.ВерсияФайла
		|ИЗ
		|	РегистрСведений.ХранимыеФайлыВерсий КАК ХранимыеФайлыВерсий
		|ГДЕ
		|	ХранимыеФайлыВерсий.ВерсияФайла = &Версия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Файлы.ВидФайла
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	ВЫРАЗИТЬ(Файлы.ВладелецФайла КАК Документ.Замер) = &Замер
		|	И (Файлы.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.ФотоЗамера)
		|	   ИЛИ Файлы.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.БытоваяТехника))
		|	И Файлы.ПометкаУдаления = ЛОЖЬ";
		
		Результат = Запрос.ВыполнитьПакет();
		
		НоваяВыборка = Результат[0].Выбрать();
		НоваяВыборка.Следующий();
		Картинка = НоваяВыборка.Файл.Получить();
		Расширение = НоваяВыборка.ВерсияФайла.Расширение;
		
		Если РасширениеКартинки(Расширение) Тогда
			
			ОбластьКартинка.Рисунки.К1.Картинка = Новый Картинка(Картинка);
			ОбластьКартинка.Рисунки.К1.РазмерКартинки = РазмерКартинки.Пропорционально;
			ОбластьКартинка.Рисунки.К1.ВыводитьНаПечать = Истина;
			
			ОбластьКартинка.Параметры.Спец = Спецификация;
			ОбластьКартинка.Параметры.Замер = Спецификация.ДокументОснование;
			
			Если Результат[1].Выгрузить().Количество() > 0 Тогда
				
				ОбластьКартинка.Параметры.ЕстьФото = "Имеется фото замера или бытовой техники. " + Файл.Описание;
				
			Иначе
				
				ОбластьКартинка.Параметры.ЕстьФото = Файл.Описание;
				
			КонецЕсли;
			
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДок.Вывести(ОбластьКартинка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка[0]);
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьМонтажнаяСхема(Выборка, ОбъектыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_МонтажнаяСхема";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТабДок.ТочностьПечати=ТочностьПечати.Точная;
	
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСнизу = 0;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСправа = 0;
	
	ТабДок.РазмерКолонтитулаСверху = 1;
	ТабДок.РазмерКолонтитулаСнизу = 1;
	
	Спецификация=Выборка[0];
	
	
	Макет = Документы.Спецификация.ПолучитьМакет("МонтажнаяСхема");
	ОбластьКартинка = Макет.ПолучитьОбласть("Картинка");
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("ВидФайла", Перечисления.ВидыПрисоединенныхФайлов.МонтажнаяСхема);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Файлы.Ссылка КАК ПрикрепленныйФайл
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	Файлы.ВладелецФайла = &Спецификация
	|	И НЕ Файлы.ПометкаУдаления
	|	И Файлы.ВидФайла = &ВидФайла";
	
	ВыборкаФайлов = Запрос.Выполнить().Выбрать();
	МассивФайлов = Новый Массив;
	
	Пока ВыборкаФайлов.Следующий() Цикл
		
		Файл = ВыборкаФайлов.ПрикрепленныйФайл;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Версия", Файл.ТекущаяВерсия);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХранимыеФайлыВерсий.ХранимыйФайл КАК Файл,
		|	ХранимыеФайлыВерсий.ВерсияФайла
		|ИЗ
		|	РегистрСведений.ХранимыеФайлыВерсий КАК ХранимыеФайлыВерсий
		|ГДЕ
		|	ХранимыеФайлыВерсий.ВерсияФайла = &Версия";
		
		НоваяВыборка = Запрос.Выполнить().Выбрать();
		НоваяВыборка.Следующий();
		Картинка = НоваяВыборка.Файл.Получить();
		Расширение = НоваяВыборка.ВерсияФайла.Расширение;
		
		Если РасширениеКартинки(Расширение) Тогда
			
			ОбластьКартинка.Рисунки.К1.Картинка = Новый Картинка(Картинка);
			ОбластьКартинка.Рисунки.К1.РазмерКартинки = РазмерКартинки.Пропорционально;
			ОбластьКартинка.Рисунки.К1.Верх = 3;
			ОбластьКартинка.Рисунки.К1.Лево = 3;
			ОбластьКартинка.Рисунки.К1.ВыводитьНаПечать = Истина;
			
			ОбластьКартинка.Параметры.Спец = Строка(Спецификация) + ".  " + Файл.Описание;
			
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДок.Вывести(ОбластьКартинка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка[0]);
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьЦеховаяСхема(Выборка, ОбъектыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ЦеховаяСхема";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТабДок.ТочностьПечати=ТочностьПечати.Точная;
	
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСнизу = 0;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСправа = 0;
	
	ТабДок.РазмерКолонтитулаСверху = 1;
	ТабДок.РазмерКолонтитулаСнизу = 1;
	
	Спецификация=Выборка[0];
	
	Макет = Документы.Спецификация.ПолучитьМакет("ЦеховаяСхема");
	ОбластьКартинка = Макет.ПолучитьОбласть("Картинка");
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("ВидФайла", Перечисления.ВидыПрисоединенныхФайлов.ЦеховаяСхема);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Файлы.Ссылка КАК ПрикрепленныйФайл
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	Файлы.ВладелецФайла = &Спецификация
	|	И НЕ Файлы.ПометкаУдаления
	|	И Файлы.ВидФайла = &ВидФайла";
	
	ВыборкаФайлов = Запрос.Выполнить().Выбрать();
	МассивФайлов = Новый Массив;
	
	Пока ВыборкаФайлов.Следующий() Цикл
		
		Файл = ВыборкаФайлов.ПрикрепленныйФайл;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Версия", Файл.ТекущаяВерсия);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХранимыеФайлыВерсий.ХранимыйФайл КАК Файл,
		|	ХранимыеФайлыВерсий.ВерсияФайла
		|ИЗ
		|	РегистрСведений.ХранимыеФайлыВерсий КАК ХранимыеФайлыВерсий
		|ГДЕ
		|	ХранимыеФайлыВерсий.ВерсияФайла = &Версия";
		
		НоваяВыборка = Запрос.Выполнить().Выбрать();
		НоваяВыборка.Следующий();
		Картинка = НоваяВыборка.Файл.Получить();
		Расширение = НоваяВыборка.ВерсияФайла.Расширение;
		
		Если РасширениеКартинки(Расширение) Тогда
			
			ОбластьКартинка.Рисунки.К1.Картинка = Новый Картинка(Картинка);
			ОбластьКартинка.Рисунки.К1.Верх = 3;
			ОбластьКартинка.Рисунки.К1.Лево = 3;
			ОбластьКартинка.Рисунки.К1.ВыводитьНаПечать = Истина;
			
			ОбластьКартинка.Параметры.Спец = Строка(Спецификация) + ".  " + Файл.Описание;
			
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДок.Вывести(ОбластьКартинка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка[0]);
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьКомплектации(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_РасходныйКассовыйОрдер";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	Макет = Документы.Комплектация.ПолучитьМакет("ПечатьКомплектации");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Комплектация.Ссылка,
	|	Комплектация.Дата,
	|	Комплектация.Комментарий,
	|	Комплектация.Номер,
	|	Комплектация.Спецификация,
	|	Комплектация.СписокНоменклатуры.(
	|		НомерСтроки,
	|		КоличествоСклад,
	|		КоличествоЦех,
	|		Номенклатура,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|	),
	|	Комплектация.Спецификация.Контрагент КАК Контрагент,
	|	Комплектация.Спецификация.Подразделение КАК ПодразделениеСпецификации,
	|	Комплектация.Спецификация.ЦветЛДСПОсновной КАК ЦветЛДСПОсновной
	|ИЗ
	|	Документ.Комплектация КАК Комплектация
	|ГДЕ
	|	Комплектация.Спецификация В(&МассивДокументов)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСписокНоменклатурыШапка = Макет.ПолучитьОбласть("СписокНоменклатурыШапка");
	ОбластьСписокНоменклатуры = Макет.ПолучитьОбласть("СписокНоменклатуры");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		Спец = Выборка.Спецификация;
		
		Если ВставлятьРазделительСтраниц Тогда
			
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Выборка.Номер);
		ОбластьЗаголовок.Параметры.Дата = Формат(Выборка.Дата, "ДЛФ=D");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.КомментарииДвери = СформироватьКомментарииДвери(Выборка.Спецификация);
		Шапка.Параметры.ОсновнойЦветЛДСП = Выборка.ЦветЛДСПОсновной;
		
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьСписокНоменклатурыШапка);
		ВыборкаСписокНоменклатуры = Выборка.СписокНоменклатуры.Выбрать();
		
		Пока ВыборкаСписокНоменклатуры.Следующий() Цикл
			
			ОбластьСписокНоменклатуры.Параметры.Заполнить(ВыборкаСписокНоменклатуры);
			ТабДок.Вывести(ОбластьСписокНоменклатуры, ВыборкаСписокНоменклатуры.Уровень());
			
		КонецЦикла;
		
		ЗапросФ = Новый Запрос;
		ЗапросФ.УстановитьПараметр("Документ", Спец);
		ЗапросФ.УстановитьПараметр("ДокументОснование", Спец.ДокументОснование);
		ЗапросФ.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Файлы.ВидФайла
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	( ВЫРАЗИТЬ(Файлы.ВладелецФайла КАК Документ.Спецификация) = &Документ
		|	  ИЛИ ВЫРАЗИТЬ(Файлы.ВладелецФайла КАК Документ.Замер) = &ДокументОснование )
		|	И Файлы.ПометкаУдаления = Ложь";
		
		КоличествоПрикрепленныхФайлов = ЗапросФ.Выполнить().Выбрать().Количество();
		
		Если КоличествоПрикрепленныхФайлов > 0 Тогда
			
			ОбластьПрикрепленныеФайлы = Макет.ПолучитьОбласть("ПрикрепленныеФайлы");
			ОбластьПрикрепленныеФайлы.Параметры.Количество = КоличествоПрикрепленныхФайлов;
			ТабДок.Вывести(ОбластьПрикрепленныеФайлы);
			
		КонецЕсли;
		
		ТабДок.Вывести(Подвал);
		ВставлятьРазделительСтраниц = Истина;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьОбточка(Выборка, ОбъектыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_Обточка";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ТочностьПечати=ТочностьПечати.Точная;
	
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСнизу = 0;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСправа = 0;
	
	ТабДок.РазмерКолонтитулаСверху = 1;
	ТабДок.РазмерКолонтитулаСнизу = 1;
	
	Спецификация=Выборка[0];
	
	Логотип = ЛексСервер.ПолучитьЛоготипСервер(Спецификация);
	
	Макет = Документы.Спецификация.ПолучитьМакет("Обточка");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаСтекла = Макет.ПолучитьОбласть("ШапкаСтекла");
	ОбластьСтрокаСтекла = Макет.ПолучитьОбласть("СтрокаСтекла");
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	Если ТипЗнч(Логотип) = Тип("ДвоичныеДанные") Тогда
		ОбластьШапка.Рисунки.К2.Картинка = Новый Картинка(Логотип);
		ОбластьШапка.Рисунки.К2.ВыводитьНаПечать = Истина;
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьШапка);
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спецификация.Ссылка КАК Номер,
	|	Спецификация.Подразделение,
	|	Спецификация.Комментарий,
	|	Спецификация.Автор
	|ИЗ
	|	Документ.Спецификация КАК Спецификация
	|ГДЕ
	|	Спецификация.Ссылка = &Спецификация";
	
	ВыборкаСпец = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаСпец.Следующий() Тогда
		
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаСпец);
		
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаСтекла);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Маты.Номенклатура КАК Номенклатура,
	|	Маты.Количество КАК Количество,
	|	Маты.ВысотаДетали КАК ВысотаДетали,
	|	Маты.ШиринаДетали КАК ШиринаДетали,
	|	Маты.НомерСтроки КАК Номер,
	|	Маты.РадиусЛевоВерх КАК РадиусЛевоВерх,
	|	Маты.РадиусПравоВерх КАК РадиусПравоВерх,
	|	Маты.РадиусПравоНиз КАК РадиусПравоНиз,
	|	Маты.РадиусЛевоНиз КАК РадиусЛевоНиз,
	|	Маты.Срез КАК Срез,
	|	Маты.НомерСтроки КАК НомерСтроки,
	|	Маты.НомерИзделия КАК НомерИзделия,
	|	Маты.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.Спецификация.СписокМатериалы КАК Маты
	|ГДЕ
	|	Маты.Обтачивать
	|	И Маты.Ссылка = &Спецификация
	|	И (Маты.Номенклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.СтеклоДляСкругляемогоФасада)
	|			ИЛИ Маты.Номенклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.Стекло)
	|			ИЛИ Маты.Номенклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.Зеркало))";
	
	ВыборкаДеталей = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДеталей.Следующий() Цикл
		
		ОбластьСтрокаСтекла.Параметры.Заполнить(ВыборкаДеталей);
		
		Если ВыборкаДеталей.РадиусЛевоНиз > 0 И ВыборкаДеталей.Срез Тогда
			
			ОбластьСтрокаСтекла.Параметры.РадиусЛевоНиз = "S: "+ВыборкаДеталей.РадиусЛевоНиз;
			
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьСтрокаСтекла);
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка[0]);
	
	Возврат ТабДок;
	
КонецФункции

Функция СформироватьКомментарииДвери(СпецификацияСсылка)
	
	Результат = "";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СпецификацияСсылка", СпецификацияСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокДверей.Двери.Код КАК Код,
	|	СпецификацияСписокДверей.Двери.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.Спецификация.СписокДверей КАК СпецификацияСписокДверей
	|ГДЕ
	|	СпецификацияСписокДверей.Ссылка = &СпецификацияСсылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат = Результат + Выборка.Код + " - " + Выборка.Комментарий + " ";
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция РасширениеКартинки(Знач Расширение)
	
	Расширение = НРег(Расширение);
	ЭтоКартинка = Ложь;
	
	Если Расширение = "jpg" 
		ИЛИ Расширение = "jpeg" 
		ИЛИ Расширение = "jp2" 
		ИЛИ Расширение = "jpe" 
		ИЛИ Расширение = "bmp" 
		ИЛИ Расширение = "gif" 
		ИЛИ Расширение = "png"
		ИЛИ Расширение = "tiff"
		ИЛИ Расширение = "tif" Тогда
		
		ЭтоКартинка = Истина;
		
	КонецЕсли;
	
	Возврат ЭтоКартинка;
	
КонецФункции

Функция ПечатьСпецификации_МерныйМатериал(ТабДок, Ссылка) Экспорт
	
	// { Васильев Александр Леонидович [09.10.2015]
	// Сделать.
	// Убрать механизм кантов, удалить табличную часть МерныйМатериал.
	// Переделать всю эту корявую функцию. Стыдоба.
	// } Васильев Александр Леонидович [09.10.2015]
	
	Макет = Документы.Спецификация.ПолучитьМакет("Спецификация2");
	ОбластьМерныйМатериалШапка = Макет.ПолучитьОбласть("МерныйМатериалШапка");
	ОбластьМерныйМатериалСтрока = Макет.ПолучитьОбласть("МерныйМатериалСтрока");
	
	ТЗМерныйМатериал = Ссылка.МерныйМатериал;
	ТЗКомплектация = Ссылка.Комплектация;
	
	ПечататьШапку = Ложь;
	
	Если ТЗКомплектация.Количество() <> 0 Тогда
		
		Для каждого Строка Из ТЗКомплектация Цикл
			
			Если Строка.Номенклатура.МестоОбработки = Перечисления.МестоОбработки.Цех Тогда
				
				ПечататьШапку= Истина;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПечататьШапку = ПечататьШапку ИЛИ ТЗМерныйМатериал.Количество() > 0;
	
	Если ПечататьШапку Тогда
		
		ТабДок.Вывести(ОбластьМерныйМатериалШапка);
		
	КонецЕсли;
	
	Если ТЗМерныйМатериал.Количество() <> 0 Тогда
		
		Для каждого Строка Из ТЗМерныйМатериал Цикл
			ОбластьМерныйМатериалСтрока.Параметры.Заполнить(Строка);
			ОбластьМерныйМатериалСтрока.Параметры.ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаИзмерения;
			ОбластьМерныйМатериалСтрока.Параметры.ЦеховаяЗона = Строка.Номенклатура.ЦеховаяЗона;
			ТабДок.Вывести(ОбластьМерныйМатериалСтрока);
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТЗКомплектация.Количество() <> 0 Тогда
		
		Для каждого Строка Из ТЗКомплектация Цикл
			
			Если Строка.Номенклатура.МестоОбработки = Перечисления.МестоОбработки.Цех Тогда
				ОбластьМерныйМатериалСтрока.Параметры.Заполнить(Строка);
				ОбластьМерныйМатериалСтрока.Параметры.ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаИзмерения;
				ОбластьМерныйМатериалСтрока.Параметры.ЦеховаяЗона = Строка.Номенклатура.ЦеховаяЗона;
				ТабДок.Вывести(ОбластьМерныйМатериалСтрока);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДанныеДетали(ТипДетали)
	
	Стр = Новый Структура;
	
	Стр.Вставить("Клееная", ТипДетали.Клееная);
	Стр.Вставить("ОбтачиватьПоУмолчанию", ТипДетали.ОбтачиватьПоУмолчанию);
	Стр.Вставить("ИспользоватьСоответствиеНоменклатуры", ТипДетали.ИспользоватьСоответствиеНоменклатуры);
	Стр.Вставить("МатериалСтрока", ТипДетали.МатериалСтрока);
	Стр.Вставить("ПрипускСклейка", ТипДетали.ПрипускСклейка);
	Стр.Вставить("ПрипускПостформинг", ТипДетали.ПрипускПостформинг);
	Стр.Вставить("ЭтоФасад", ТипДетали.ЭтоФасад);
	Стр.Вставить("ЭтоСтолешница", ТипДетали.ЭтоСтолешница);
	Стр.Вставить("ЭтоСтекло", ТипДетали.ЭтоСтекло);
	Стр.Вставить("ЭтоПуфик", ТипДетали.ЭтоПуфик);
	Стр.Вставить("МинимальнаяШирина", ТипДетали.МинимальнаяШирина);
	Стр.Вставить("МинимальнаяВысота", ТипДетали.МинимальнаяВысота);
	Стр.Вставить("СчитатьПлощадь", ТипДетали.СчитатьПлощадь);
	Стр.Вставить("РазмерТекстура", ТипДетали.РазмерТекстура);
	Стр.Вставить("РазмерДопНоменклатура", ТипДетали.РазмерДопНоменклатура);
	Стр.Вставить("УчитыватьКратность", ТипДетали.УчитыватьКратность);
	Стр.Вставить("СпецФасад", ТипДетали.СпецФасад);
	Стр.Вставить("ШиринаТекстура", ТипДетали.ШиринаТекстура);
	Стр.Вставить("ВысотаТекстура", ТипДетали.ВысотаТекстура);
	Стр.Вставить("ШиринаДопНоменклатура", ТипДетали.ШиринаДопНоменклатура);
	Стр.Вставить("ВысотаДопНоменклатура", ТипДетали.ВысотаДопНоменклатура);
	Стр.Вставить("ЦеховаяЗона", ТипДетали.ЦеховаяЗона);
	
	НомГруппы = Новый СписокЗначений;
	
	Для Каждого Эл Из ТипДетали.НоменклатурныеГруппы Цикл
		
		Стр2 = Новый Структура;
		Стр2.Вставить("ПолеВыбора", Эл.ПолеВыбора);
		Стр2.Вставить("Группа", Эл.Группа);
		
		НомГруппы.Добавить(Стр2);
		
	КонецЦикла;
	
	Стр.Вставить("НомГруппы", НомГруппы);
	
	Услуги = Новый СписокЗначений;
	
	Для Каждого Эл Из ТипДетали.Услуги Цикл
		
		Стр2 = Новый Структура;
		Стр2.Вставить("Услуга", Эл.Услуга);
		Стр2.Вставить("Количество", Эл.Количество);
		
		Услуги.Добавить(Стр2);
		
	КонецЦикла;
	
	Стр.Вставить("Услуги", Услуги);
	
	Комплектация = Новый СписокЗначений;
	
	Для Каждого Эл Из ТипДетали.Комплектация Цикл
		
		Стр2 = Новый Структура;
		Стр2.Вставить("Номенклатура", Эл.Номенклатура);
		Стр2.Вставить("Количество", Эл.Количество);
		
		Комплектация.Добавить(Стр2);
		
	КонецЦикла;
	
	Стр.Вставить("Комплектация", Комплектация);
	
	Возврат Стр;
	
КонецФункции

Функция ПолучитьНадпись(Деталь) Экспорт
	
	ДанныеДетали = Деталь.ВидДетали;
	
	СтрокаИдентификатор = Строка(Деталь.НомерСтроки) 
	+ ?(ЗначениеЗаполнено(Деталь.НомерИзделия), "/" + Деталь.НомерИзделия, "") 
	+ ?(ЗначениеЗаполнено(Деталь.Идентификатор), "/" + Деталь.Идентификатор, "");
	
	Надпись = "";
	
	Если Деталь.Постформинг И ДанныеДетали.ЭтоСтолешница Тогда
		
		Надпись = Надпись + "Ст (Скр)";
		
	ИначеЕсли Деталь.Обтачивать И ДанныеДетали.ЭтоСтекло Тогда
		
		Надпись = Надпись + "Обтачивать";
		
	ИначеЕсли НЕ Деталь.Обтачивать И ДанныеДетали.ЭтоСтекло Тогда
		
		Надпись = Надпись + "Без обточки";
		
	ИначеЕсли ДанныеДетали.ЭтоСтекло И ДанныеДетали.ЭтоФасад И Деталь.РадиусФасада <> "" Тогда
		
		Надпись = Надпись + СтрокаИдентификатор + "Скр. " + Деталь.РадиусФасада;
		
	Иначе
		
		Надпись = Надпись + СтрокаИдентификатор;
		
	КонецЕсли;
	
	Надпись = ?(ДанныеДетали.Клееная, Надпись + " скл ", Надпись);
	
	Если Деталь.НеТорцевать Тогда
		Надпись = Надпись + ", НЕ ТОРЦЕВАТЬ ПО ДЛИНЕ";
	КонецЕсли;
	
	Если ДанныеДетали.ЭтоПуфик Тогда
		Надпись = Надпись + " пуф";
	КонецЕсли;
	
	Возврат Надпись;
	
КонецФункции
#КонецОбласти

#Область События

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка) Экспорт
	
	ЛексСервер.ПолучитьПредставлениеДокумента(Данные, Представление, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти
