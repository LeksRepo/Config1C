
Функция ПолучитьСуммаСДилерскимиНаценками(СпецификацияСсылка) Экспорт
	
	РеквизитыСпецификации = ЛексСервер.ЗначенияРеквизитовОбъекта(СпецификацияСсылка, "Контрагент,СуммаДокумента");
	
	НаценкиДилера = ЛексСервер.ЗначенияРеквизитовОбъекта(РеквизитыСпецификации.Контрагент, "ПроцентНаценки,СуммаНаценки");
	Сумма = РеквизитыСпецификации.СуммаДокумента + РеквизитыСпецификации.СуммаДокумента * (НаценкиДилера.ПроцентНаценки / 100) + НаценкиДилера.СуммаНаценки;
	
	Возврат Сумма;
	
КонецФункции

Функция ПолучитьОсновнуюНоменклатуру(СпецификацияСсылка, НоменклатурнаяГруппа) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Спецификация", СпецификацияСсылка);
	Запрос.УстановитьПараметр("Группа", НоменклатурнаяГруппа);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СпецификацияСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(СпецификацияСписокНоменклатуры.Количество) КАК Количество
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка = &Спецификация
	|	И СпецификацияСписокНоменклатуры.Номенклатура.НоменклатурнаяГруппа В ИЕРАРХИИ(&Группа)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ОсновнаяНоменклатура = "В спецификации отсутствует " + НоменклатурнаяГруппа;
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ОсновнаяНоменклатура = Выборка.Номенклатура;
		
	КонецЕсли;
	
	Возврат ОсновнаяНоменклатура;
	
КонецФункции

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка) Экспорт
	
	ЛексСервер.ПолучитьПредставлениеДокумента(Данные, Представление, СтандартнаяОбработка);
	
КонецПроцедуры

Функция ПечатьСпецификации(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_Спецификация";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Для каждого Спецификация Из МассивДокументов Цикл
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Спецификация", Спецификация);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СпецификацияСписокМатериалы.Материал КАК Материал,
		|	СпецификацияСписокМатериалы.Ссылка КАК Ссылка,
		|	СпецификацияСписокМатериалы.НомерСтроки,
		|	СпецификацияСписокМатериалы.ВыборМебельнойКромкиСверху,
		|	СпецификацияСписокМатериалы.ВыборМебельнойКромкиСлева,
		|	СпецификацияСписокМатериалы.ВыборМебельнойКромкиСнизу,
		|	СпецификацияСписокМатериалы.ВыборМебельнойКромкиСправа,
		|	СпецификацияСписокМатериалы.ВысотаДетали,
		|	СпецификацияСписокМатериалы.ДлинаКривогоПила,
		|	СпецификацияСписокМатериалы.Кант,
		|	СпецификацияСписокМатериалы.Количество,
		|	СпецификацияСписокМатериалы.Комментарий,
		|	СпецификацияСписокМатериалы.КривойПилСверху,
		|	СпецификацияСписокМатериалы.КривойПилСлева,
		|	СпецификацияСписокМатериалы.КривойПилСнизу,
		|	СпецификацияСписокМатериалы.КривойПилСправа,
		|	СпецификацияСписокМатериалы.Кромка045мм,
		|	СпецификацияСписокМатериалы.Кромка2мм,
		|	СпецификацияСписокМатериалы.Номенклатура,
		|	СпецификацияСписокМатериалы.НоменклатураДляСклеивания,
		|	СпецификацияСписокМатериалы.ПереключательКромкаСверху,
		|	СпецификацияСписокМатериалы.ПереключательКромкаСлева,
		|	СпецификацияСписокМатериалы.ПереключательКромкаСнизу,
		|	СпецификацияСписокМатериалы.ПереключательКромкаСправа,
		|	СпецификацияСписокМатериалы.РадиусЛевоВерх,
		|	СпецификацияСписокМатериалы.РадиусЛевоНиз,
		|	СпецификацияСписокМатериалы.РадиусПравоВерх,
		|	СпецификацияСписокМатериалы.РадиусПравоНиз,
		|	СпецификацияСписокМатериалы.СоблюдениеТекстуры,
		|	СпецификацияСписокМатериалы.Срез,
		|	СпецификацияСписокМатериалы.ШиринаДетали,
		|	СпецификацияСписокМатериалы.Обтачивать,
		|	СпецификацияСписокМатериалы.НеТорцевать,
		|	СпецификацияСписокМатериалы.Периметр,
		|	СпецификацияСписокМатериалы.РадиусФасада,
		|	СпецификацияСписокМатериалы.ПоложениеРучки,
		|	СпецификацияСписокМатериалы.ОтверстийПодРучку,
		|	СпецификацияСписокМатериалы.Петли,
		|	СпецификацияСписокМатериалы.КоличествоПетель,
		|	СпецификацияСписокМатериалы.ДиаметрПазов,
		|	СпецификацияСписокМатериалы.РасположениеПазов,
		|	СпецификацияСписокМатериалы.ДетальРедактированная,
		|	СпецификацияСписокМатериалы.УниверсальнаяКромка,
		|	СпецификацияСписокМатериалы.НомерИзделия,
		|	ВЫБОР
		|		КОГДА СпецификацияСписокМатериалы.НоменклатураДляСклеивания.КраткоеНаименование > """"
		|			ТОГДА СпецификацияСписокМатериалы.НоменклатураДляСклеивания.КраткоеНаименование
		|		ИНАЧЕ СпецификацияСписокМатериалы.НоменклатураДляСклеивания
		|	КОНЕЦ КАК Ручка,
		|	СпецификацияСписокМатериалы.Обтачивать КАК Скругление,
		|	СпецификацияСписокМатериалы.Ссылка.Комментарий КАК ОбщийКомментарий,
		|	СпецификацияСписокМатериалы.Ссылка.Автор,
		|	СпецификацияСписокМатериалы.Ссылка.Подразделение,
		|	СпецификацияСписокМатериалы.Ссылка.Номер,
		|	СпецификацияСписокМатериалы.Ссылка.АдресМонтажа,
		|	СпецификацияСписокМатериалы.Ссылка.Контрагент,
		|	СпецификацияСписокМатериалы.Ссылка.Изделие.ВидИзделия КАК ВидИзделия,
		|	СпецификацияСписокМатериалы.Ссылка.Быстрый КАК Быстрый
		|ИЗ
		|	Документ.Спецификация.СписокМатериалы КАК СпецификацияСписокМатериалы
		|ГДЕ
		|	СпецификацияСписокМатериалы.Ссылка = &Спецификация
		|ИТОГИ ПО
		|	Материал";
		
		Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Телефон = "";
		ДокументОснование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Спецификация, "ДокументОснование");
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.Замер") Тогда
			
			УстановитьПривилегированныйРежим(Истина);
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА (ВЫРАЗИТЬ(Замер.Замерщик.ТелефонРабочий КАК СТРОКА(11))) > """"
			|			ТОГДА Замер.Замерщик.ТелефонРабочий
			|		ИНАЧЕ Замер.Замерщик.Телефон
			|	КОНЕЦ КАК Телефон
			|ИЗ
			|	Документ.Замер КАК Замер
			|ГДЕ
			|	Замер.Ссылка = &Ссылка";
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Телефон = ВыборкаДетальныеЗаписи.Телефон;
				
			КонецЦикла;
			
			УстановитьПривилегированныйРежим(Ложь);
			
		КонецЕсли;
		
		Макет = Документы.Спецификация.ПолучитьМакет("Спецификация");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		ОбластьКоличествоДеталей = Макет.ПолучитьОбласть("КоличествоДеталей");
		ОбластьИтогФасады = Макет.ПолучитьОбласть("ИтогФасады");
		Договор = ПолучитьДоговор(Спецификация);
		НарядЗадание = ПолучитьНарядЗадание(Спецификация);
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		Если Спецификация.Быстрый Тогда
			СтрокаСрочный = " SUPER QUICK";
		Иначе
			СтрокаСрочный = "";
		КонецЕсли;
		ОбластьШапка.Параметры.СтрокаСрочный = СтрокаСрочный;
		
		ТабДок.Вывести(ОбластьШапка);
		ОбластьЗаголовок.Параметры.Номер = Спецификация.Номер;
		ОбластьЗаголовок.Параметры.ДоговорАдрес = "" + Договор +"/Адрес: " + Спецификация.АдресМонтажа;
		ОбластьЗаголовок.Параметры.Комментарий = Спецификация.Комментарий;
		ОбластьЗаголовок.Параметры.ТелефонЗамерщика = Телефон;
		ОбластьЗаголовок.Параметры.НарядЗадание = НарядЗадание;
		ОбластьЗаголовок.Параметры.Автор = Спецификация.Автор;
		ОбластьЗаголовок.Параметры.Подразделение = Спецификация.Подразделение;
		ОбластьЗаголовок.Параметры.Контрагент = Спецификация.Контрагент;
		ОбластьЗаголовок.Параметры.ДатаИзготовления = Формат(Спецификация.ДатаИзготовления,"ДФ=dd.MM.yyyy");
		ОбластьЗаголовок.Параметры.МонтажСумма = СформироватьСтрокуМонтажСумма(Спецификация);
		
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.ПовторятьПриПечатиСтроки = ТабДок.Область(1,,4,);
		
		Пока Выборка.Следующий() Цикл
			
			Если Спецификация.Упаковка Тогда
				
				ОбластьЗаголовок.Параметры.НадписьУпаковка = "Box";
				
			КонецЕсли;
			
			Материал = Выборка.Материал;
			
			ТабДок.Вывести(ОбластьПустаяСтрока);
			
			МатериалЛДСП = (Материал = "10 ЛДСП" ИЛИ Материал = "16 ЛДСП" ИЛИ Материал = "10 ЛДСП+10 ЛДСП" ИЛИ Материал = "16 ЛДСП+10 ЛДСП" ИЛИ Материал = "16 ЛДСП+16 ЛДСП");
			Пуфик = Материал = "Пуфик";
			
			Если Материал = "ФасадАГТ" ИЛИ Материал = "ФасадМДФ" ИЛИ Материал = "ФасадЛДСП" ИЛИ Материал = "ФасадАлюминиевый" Тогда
				
				ОбластьШапка = Макет.ПолучитьОбласть("ШапкаФасады");
				
				Если Материал = "ФасадАГТ" Тогда
					
					ОбластьШапка.Параметры.ВидФасада = "Фасад АГТ";
					
				ИначеЕсли Материал = "ФасадМДФ" Тогда
					
					ОбластьШапка.Параметры.ВидФасада = "Фасад МДФ";
					
				ИначеЕсли Материал = "ФасадЛДСП" Тогда
					
					ОбластьШапка.Параметры.ВидФасада = "Фасад ЛДСП";
					
				ИначеЕсли Материал = "ФасадАлюминиевый" Тогда
					
					ОбластьШапка.Параметры.ВидФасада = "Фасад алюминиевый";
					
				КонецЕсли;
				
				ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаФасады");
				
			ИначеЕсли МатериалЛДСП ИЛИ Материал = "ДВП" ИЛИ Материал = "МДФ" ИЛИ Материал = "АГТПанель" Тогда
				
				ОбластьШапка = Макет.ПолучитьОбласть("ШапкаЛДСП");
				ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаЛДСП");
				
			ИначеЕсли Материал = "ФасадСтеклянный" ИЛИ Материал = "ФасадСтеклянныйЗакругленный" Тогда 
				
				ТабДок.Вывести(ОбластьПустаяСтрока);
				ОбластьШапка = Макет.ПолучитьОбласть("ШапкаСТФасад");
				ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСТФасад");
				
			ИначеЕсли Материал = "Стекло" Тогда
				
				ОбластьШапка = Макет.ПолучитьОбласть("ШапкаСтекла");
				ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСтекла");
				
			ИначеЕсли Материал = "Столешница" ИЛИ Материал = "Пристенок" Тогда
				
				ОбластьШапка = Макет.ПолучитьОбласть("ШапкаСтолешница");
				ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСтолешница");
				
			ИначеЕсли Материал = "Пуфик" Тогда
				
				ОбластьШапка = Макет.ПолучитьОбласть("ПуфикиШапка");
				ОбластьСтрока = Макет.ПолучитьОбласть("ПуфикиСтрока");
				
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьШапка);
			
			КоличествоДеталей = 0;
			Фасад = Ложь;
			
			ВыборкаПоМатериалам = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоМатериалам.Следующий() Цикл
				
				// { Васильев Александр Леонидович [26.08.2014]
				// Не понимаю условие ниже:
				// НЕ (МатериалЛДСП И ЗначениеЗаполнено(ВыборкаПоМатериалам.НомерИзделия) И ВыборкаПоМатериалам.ВидИзделия <> Перечисления.ВидыИзделий.ШкафКупе)
				// Напишу свою обёртку
				// } Васильев Александр Леонидович [26.08.2014]
				
				Если Пуфик Тогда
					
					ОбластьСтрока.Параметры.НомерСтроки = ВыборкаПоМатериалам.НомерСтроки;
					ОбластьСтрока.Параметры.Количество = ВыборкаПоМатериалам.Количество;
					ОбластьСтрока.Параметры.ШиринаДеталиЛДСП = ВыборкаПоМатериалам.ШиринаДетали - 15;
					ОбластьСтрока.Параметры.ВысотаДеталиЛДСП = ВыборкаПоМатериалам.ВысотаДетали - 15;
					ОбластьСтрока.Параметры.ШиринаДеталиКожа = ВыборкаПоМатериалам.ШиринаДетали + 200;
					ОбластьСтрока.Параметры.ВысотаДеталиКожа = ВыборкаПоМатериалам.ВысотаДетали + 200;
					ОбластьСтрока.Параметры.НоменклатураЛДСП = ВыборкаПоМатериалам.Номенклатура;
					ОбластьСтрока.Параметры.НоменклатураКожа = ВыборкаПоМатериалам.НоменклатураДляСклеивания;
					ТабДок.Вывести(ОбластьСтрока);
					
				Иначе // тут как было раньше
					
					Если НЕ (МатериалЛДСП И ЗначениеЗаполнено(ВыборкаПоМатериалам.НомерИзделия) И ВыборкаПоМатериалам.ВидИзделия <> Перечисления.ВидыИзделий.ШкафКупе) Тогда
						
						ТорцеваяЛента = Новый Структура;
						ТорцеваяЛента.Вставить("ТорцеваяЛентаСверху", ВыборкаПоМатериалам.ВыборМебельнойКромкиСверху);
						ТорцеваяЛента.Вставить("ТорцеваяЛентаСнизу", ВыборкаПоМатериалам.ВыборМебельнойКромкиСнизу);
						ТорцеваяЛента.Вставить("ТорцеваяЛентаСлева", ВыборкаПоМатериалам.ВыборМебельнойКромкиСлева);
						ТорцеваяЛента.Вставить("ТорцеваяЛентаСправа", ВыборкаПоМатериалам.ВыборМебельнойКромкиСправа);
						Размеры = ПолучитьРазмерыМатериалов(ВыборкаПоМатериалам.Номенклатура, ТорцеваяЛента);
						КромкаПоШирине = Размеры.ВычитаемоеДляШирины;
						КромкаПоВысоте = Размеры.ВычитаемоеДляВысоты;
						
						ОбластьСтрока.Параметры.Заполнить(ВыборкаПоМатериалам);
						//ОбластьСтрока.Параметры.Комментарий = ВыборкаПоМатериалам.Комментарий;
						
						Если ВыборкаПоМатериалам.Материал = "ФасадЛДСП" Тогда
							
							ОбластьСтрока.Параметры.УниверсальнаяКромка = ВыборкаПоМатериалам.Кромка2мм;
							
						КонецЕсли;
						
						Материал = ВыборкаПоМатериалам.Материал;
						Фасад = Материал = "ФасадАГТ" ИЛИ Материал = "ФасадМДФ" ИЛИ Материал = "ФасадЛДСП" ИЛИ Материал = "ФасадАлюминиевый";
						
						КоличествоДеталей = КоличествоДеталей + ВыборкаПоМатериалам.Количество;
						
						Если ЗначениеЗаполнено(ВыборкаПоМатериалам.НоменклатураДляСклеивания) И Фасад Тогда
							
							ОбластьСтрока.Параметры.ШиринаРучки = ВыборкаПоМатериалам.НоменклатураДляСклеивания.ШиринаДетали;
							
						КонецЕсли;
						
						ОбластьСтрока.Параметры.ШиринаДетали = ВыборкаПоМатериалам.ШиринаДетали + КромкаПоШирине;
						ОбластьСтрока.Параметры.ВысотаДетали = ВыборкаПоМатериалам.ВысотаДетали + КромкаПоВысоте;
						ТабДок.Вывести(ОбластьСтрока);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			// { Васильев Александр Леонидович [26.08.2014]
			// Этопиздецнахуйблять
			// ещё я итоги по типу детали не подгадывал!11
			// } Васильев Александр Леонидович [26.08.2014]
			
			Если НЕ Пуфик Тогда
				Если Фасад Тогда
					
					ОбластьИтогФасады.Параметры.КоличествоДеталей = КоличествоДеталей;
					ТабДок.Вывести(ОбластьИтогФасады);
					
				Иначе
					
					ОбластьКоличествоДеталей.Параметры.КоличествоДеталей = КоличествоДеталей;
					ТабДок.Вывести(ОбластьКоличествоДеталей);
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла; // Выборка.Следующий()
		
		ОбластьКоличествоДеталейЯщики = Макет.ПолучитьОбласть("КоличествоДеталейЯщики");
		
		///////////////////////Ящики
		ЗапросПоЯщикам = Новый Запрос;
		ЗапросПоЯщикам.УстановитьПараметр("Ссылка", Спецификация);
		ЗапросПоЯщикам.Текст =
		"ВЫБРАТЬ
		|	СпецификацияСписокЯщики.НомерИзделия,
		|	СпецификацияСписокЯщики.Номенклатура КАК ЛДСП,
		|	СпецификацияСписокЯщики.КромкаНоменклатура КАК Кромка,
		|	СпецификацияСписокЯщики.НаправляющиеНоменклатура КАК МТбоксы,
		|	СпецификацияСписокЯщики.ДноНоменклатура КАК Дно,
		|	СпецификацияСписокЯщики.ВысотаЯщика,
		|	СпецификацияСписокЯщики.ГлубинаЯщика,
		|	СпецификацияСписокЯщики.ШиринаДно КАК ШиринаЯщика,
		|	СпецификацияСписокЯщики.ДлинаДно,
		|	СпецификацияСписокЯщики.ДлинаРебро,
		|	СпецификацияСписокЯщики.ШиринаБоковойСтороны,
		|	ВЫБОР
		|		КОГДА СпецификацияСписокЯщики.ДлинаРебро > 0
		|			ТОГДА СпецификацияСписокЯщики.ВысотаЯщика - 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ШиринаРебро,
		|	ВЫБОР
		|		КОГДА СпецификацияСписокЯщики.ВидЯщика = ЗНАЧЕНИЕ(Перечисление.ВидыЯщика.Обычный)
		|			ТОГДА 2 * СпецификацияСписокЯщики.КоличествоЯщиков
		|		ИНАЧЕ 1 * СпецификацияСписокЯщики.КоличествоЯщиков
		|	КОНЕЦ КАК КоличествоБоковыхСторон,
		|	ВЫБОР
		|		КОГДА СпецификацияСписокЯщики.ДлинаРебро > 0
		|			ТОГДА 1 * СпецификацияСписокЯщики.КоличествоЯщиков
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоРебер,
		|	СпецификацияСписокЯщики.ФасадНоменклатура КАК ФасадНаполнение,
		|	СпецификацияСписокЯщики.КромкаФасадНоменклатура КАК ФасадНаименование,
		|	СпецификацияСписокЯщики.РучкаНоменклатура КАК Ручка,
		|	СпецификацияСписокЯщики.КоличествоРучек КАК ФасадКоличествоРучек,
		|	СпецификацияСписокЯщики.ВысотаФасад,
		|	СпецификацияСписокЯщики.ШиринаФасад,
		|	СпецификацияСписокЯщики.ВидФасада,
		|	СпецификацияСписокЯщики.КоличествоЯщиков КАК КоличествоЯщиков,
		|	СпецификацияСписокЯщики.КоличествоЯщиков КАК ФасадКоличество,
		|	СпецификацияСписокЯщики.ШиринаДно,
		|	СпецификацияСписокЯщики.ДлинаБоковойСтороны,
		|	СпецификацияСписокЯщики.Комментарий
		|ИЗ
		|	Документ.Спецификация.СписокЯщики КАК СпецификацияСписокЯщики
		|ГДЕ
		|	СпецификацияСписокЯщики.Ссылка = &Ссылка";
		ВыборкаЯщиков = ЗапросПоЯщикам.Выполнить().Выбрать();
		
		/////////////////услуги/////////////////////
		ЗапросПоУслугам = Новый Запрос;
		ЗапросПоУслугам.УстановитьПараметр("Ссылка", Спецификация);
		ЗапросПоУслугам.Текст =
		"ВЫБРАТЬ
		|	СпецификацияСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(СпецификацияСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(СпецификацияСписокНоменклатуры.ЗарплатаЦеха) КАК Сумма
		|ИЗ
		|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
		|ГДЕ
		|	СпецификацияСписокНоменклатуры.Ссылка = &Ссылка
		|	И СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
		|	И СпецификацияСписокНоменклатуры.Номенклатура.ЦеховаяЗона <> ЗНАЧЕНИЕ(Перечисление.ЦеховыеЗоны.ВнешниеУслуги)
		|
		|СГРУППИРОВАТЬ ПО
		|	СпецификацияСписокНоменклатуры.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	СпецификацияСписокНоменклатуры.Номенклатура.Наименование";
		ВыборкаУслуг = ЗапросПоУслугам.Выполнить().Выбрать();
		
		//////////////////////////////////////////////////////////////
		
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.ПовторятьПриПечатиСтроки = ТабДок.Область(1,,4,);
		
		Если ВыборкаЯщиков.Количество() > 0 Тогда
			
			ОбластьШапкаФасадовЯщиков = Макет.ПолучитьОбласть("ШапкаФасадЯщики");
			ОбластьШапкаЯщиков = Макет.ПолучитьОбласть("ШапкаЯщики");
			ОбластьСтрокаФасадовЯщиков = Макет.ПолучитьОбласть("СтрокаФасадаЯщики");
			ОбластьСтрокаЯщиков = Макет.ПолучитьОбласть("СтрокаЯщики");
			ТаблицаФасадовЯщиков = Новый ТаблицаЗначений;
			ТаблицаФасадовЯщиков.Колонки.Добавить("НомерСтроки");
			ТаблицаФасадовЯщиков.Колонки.Добавить("ФасадНаименование");
			ТаблицаФасадовЯщиков.Колонки.Добавить("ФасадНаполнение");
			ТаблицаФасадовЯщиков.Колонки.Добавить("Ручка");
			ТаблицаФасадовЯщиков.Колонки.Добавить("ФасадКоличествоРучек");
			ТаблицаФасадовЯщиков.Колонки.Добавить("ФасадКоличество");
			ТаблицаФасадовЯщиков.Колонки.Добавить("ВысотаФасад");
			ТаблицаФасадовЯщиков.Колонки.Добавить("ВысотаВставки");
			ТаблицаФасадовЯщиков.Колонки.Добавить("ШиринаФасад");
			ТаблицаФасадовЯщиков.Колонки.Добавить("ШиринаВставки");
			ОбластьПустаСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
			ТабДок.Вывести(ОбластьПустаСтрока);
			ТабДок.Вывести(ОбластьШапкаЯщиков);
			НомерСтроки = 0;
			НомерСтрокиФасада = 0;
			КоличествоДеталейЯщика = 0;
			КоличествоФасадов = 0;
			
			Пока ВыборкаЯщиков.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				КоличествоДеталейЯщика = КоличествоДеталейЯщика + ВыборкаЯщиков.КоличествоЯщиков;
				
				Если НЕ ВыборкаЯщиков.ВидФасада = "Нет" Тогда
					
					НомерСтрокиФасада = НомерСтрокиФасада + 1;
					КоличествоФасадов = КоличествоФасадов + ВыборкаЯщиков.ФасадКоличество;
					ТорцеваяЛента = Новый Структура;
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСверху", ВыборкаЯщиков.ФасадНаименование);
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСнизу", ВыборкаЯщиков.ФасадНаименование);
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСлева", ВыборкаЯщиков.ФасадНаименование);
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСправа", ВыборкаЯщиков.ФасадНаименование);
					Размеры = ПолучитьРазмерыМатериалов(ВыборкаЯщиков.ФасадНаполнение, ТорцеваяЛента);
					КромкаПоШирине = Размеры.ВычитаемоеДляШирины;
					КромкаПоВысоте = Размеры.ВычитаемоеДляВысоты;
					
					НоваяСтрока = ТаблицаФасадовЯщиков.Добавить();
					НоваяСтрока.НомерСтроки = НомерСтрокиФасада;
					НоваяСтрока.ФасадНаименование = ВыборкаЯщиков.ФасадНаименование;
					НоваяСтрока.ФасадНаполнение = ВыборкаЯщиков.ФасадНаполнение;
					НоваяСтрока.Ручка = ВыборкаЯщиков.Ручка;
					НоваяСтрока.ФасадКоличествоРучек = ВыборкаЯщиков.ФасадКоличествоРучек;
					НоваяСтрока.ФасадКоличество = ВыборкаЯщиков.ФасадКоличество;
					НоваяСтрока.ВысотаФасад = ВыборкаЯщиков.ВысотаФасад;
					НоваяСтрока.ВысотаВставки = ВыборкаЯщиков.ВысотаФасад - КромкаПоШирине;
					НоваяСтрока.ШиринаФасад = ВыборкаЯщиков.ШиринаФасад;
					НоваяСтрока.ШиринаВставки = ВыборкаЯщиков.ШиринаФасад - КромкаПоВысоте;
					
				КонецЕсли;
				
				ОбластьСтрокаЯщиков.Параметры.Заполнить(ВыборкаЯщиков);
				ОбластьСтрокаЯщиков.Параметры.НомерСтроки = НомерСтроки;
				ТабДок.Вывести(ОбластьСтрокаЯщиков);
				
			КонецЦикла;
			
			ОбластьКоличествоДеталейЯщики.Параметры.КоличествоДеталей = КоличествоДеталейЯщика;
			ТабДок.Вывести(ОбластьКоличествоДеталейЯщики);
			
			Если ТаблицаФасадовЯщиков.Количество() > 0 Тогда
				
				ТабДок.Вывести(ОбластьШапкаФасадовЯщиков);
				
				Для каждого Строка Из ТаблицаФасадовЯщиков Цикл
					
					ОбластьСтрокаФасадовЯщиков.Параметры.Заполнить(Строка);
					ТабДок.Вывести(ОбластьСтрокаФасадовЯщиков);
					
				КонецЦикла;
				
				ОбластьКоличествоДеталейЯщики.Параметры.КоличествоДеталей = КоличествоФасадов;
				ТабДок.Вывести(ОбластьКоличествоДеталейЯщики);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВыборкаУслуг.Количество() > 0 Тогда
			
			ОбластьШапкаУслуг = Макет.ПолучитьОбласть("ШапкаУслуги");
			ОбластьСтрокаУслуг = Макет.ПолучитьОбласть("СтрокаУслуги");
			ОбластьИтог = Макет.ПолучитьОбласть("Итог");
			ОбластьПустаСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
			ТабДок.Вывести(ОбластьПустаСтрока);
			ТабДок.Вывести(ОбластьШапкаУслуг);
			НомерСтроки = 0;
			ИтогоСумма = 0;
			ИтогоКоличество = 0;
			
			Пока ВыборкаУслуг.Следующий() Цикл
				
				Если ВыборкаУслуг.Сумма > 0 Тогда
					
					НомерСтроки = НомерСтроки + 1;
					ОбластьСтрокаУслуг.Параметры.Заполнить(ВыборкаУслуг);
					ОбластьСтрокаУслуг.Параметры.НомерСтроки = НомерСтроки;
					ТабДок.Вывести(ОбластьСтрокаУслуг);
					ИтогоКоличество = ИтогоКоличество + ВыборкаУслуг.Количество;
					ИтогоСумма = ИтогоСумма + ВыборкаУслуг.Сумма;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ОбластьИтог.Параметры.ИтогоСумма = ИтогоСумма;
			ОбластьИтог.Параметры.ИтогоКоличество = ИтогоКоличество;
			ТабДок.Вывести(ОбластьИтог);
			
		КонецЕсли;
		
		/////////////////////////////Комплектация//////////////
		
		ВыборкаКомплектации = Документы.Спецификация.ПерезаполнитьКомплектацию(Спецификация);
		
		Если ВыборкаКомплектации.Количество() > 0 Тогда
			
			ОбластьШапкаКомплектации = Макет.ПолучитьОбласть("ШапкаКомплектация");
			ОбластьСтрокаКомплектации = Макет.ПолучитьОбласть("СтрокаКомплектация");
			ТабДок.Вывести(ОбластьПустаяСтрока);
			ТабДок.Вывести(ОбластьШапкаКомплектации);
			НомерСтроки = 0;
			
			Пока ВыборкаКомплектации.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				ОбластьСтрокаКомплектации.Параметры.Заполнить(ВыборкаКомплектации);
				ОбластьСтрокаКомплектации.Параметры.ЕдиницаИзмерения = ВыборкаКомплектации.Номенклатура.ЕдиницаИзмерения;
				ОбластьСтрокаКомплектации.Параметры.НомерСтроки = НомерСтроки;
				ТабДок.Вывести(ОбластьСтрокаКомплектации);
				
			КонецЦикла;
			
		КонецЕсли;
		
		ВывестиМерныйМатериал(ТабДок, Спецификация);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьДверь(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_Двери";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацияСписокДверей.Двери КАК Двери,
	|	СпецификацияСписокДверей.Ссылка.Контрагент КАК Контрагент,
	|	СпецификацияСписокДверей.Ссылка.Подразделение КАК Подразделение,
	|	СпецификацияСписокДверей.Ссылка.Автор КАК Автор,
	|	СпецификацияСписокДверей.Ссылка.Номер КАК Номер,
	|	СпецификацияСписокДверей.Ссылка.ДатаИзготовления КАК ДатаИзготовления,
	|	СпецификацияСписокДверей.Ссылка КАК Ссылка,
	|	СпецификацияСписокДверей.Двери.ВысотаПроема КАК ВысотаПроема,
	|	СпецификацияСписокДверей.Двери.ШиринаПроема КАК ШиринаПроема,
	|	СпецификацияСписокДверей.Двери.ШиринаДвери КАК ШиринаДвери,
	|	СпецификацияСписокДверей.Двери.ВысотаДвери КАК ВысотаДвери,
	|	СпецификацияСписокДверей.Двери.Количество КАК КоличествоДверей,
	|	СпецификацияСписокДверей.Двери.ВысотаПолотна КАК ВысотаПолотна,
	|	СпецификацияСписокДверей.Двери.ШиринаПолотна КАК ШиринаПолотна,
	|	ДвериСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	ДвериСписокНоменклатуры.Длина,
	|	ДвериСписокНоменклатуры.Количество КАК Количество,
	|	ДвериСписокНоменклатуры.Ширина,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокДверей.Ссылка.АдресМонтажа = ""Введите адрес""
	|			ТОГДА """"
	|		ИНАЧЕ СпецификацияСписокДверей.Ссылка.АдресМонтажа
	|	КОНЕЦ КАК АдресМонтажа,
	|	СпецификацияСписокДверей.Двери.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.Спецификация.СписокДверей КАК СпецификацияСписокДверей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Двери.СписокНоменклатуры КАК ДвериСписокНоменклатуры
	|		ПО СпецификацияСписокДверей.Двери = ДвериСписокНоменклатуры.Ссылка
	|ГДЕ
	|	СпецификацияСписокДверей.Ссылка В(&МассивДокументов)
	|	И ДвериСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|	И ДвериСписокНоменклатуры.Номенклатура.МестоОбработки <> ЗНАЧЕНИЕ(Перечисление.МестоОбработки.Отгрузка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДвериСписокНоменклатуры.Номенклатура.Наименование
	|ИТОГИ
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Автор),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(ДатаИзготовления),
	|	МАКСИМУМ(Ссылка),
	|	МАКСИМУМ(АдресМонтажа)
	|ПО
	|	Двери";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Макет = Документы.Спецификация.ПолучитьМакет("Дверь");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПустаСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьСтрокаЖирный = Макет.ПолучитьОбласть("СтрокаЖирный");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	Пока Выборка.Следующий() Цикл
		
		ТабДок.Вывести(ОбластьШапка);
		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		Договор = ПолучитьДоговор(Выборка.Ссылка);
		ОбластьЗаголовок.Параметры.Комментарий = Выборка.Комментарий;
		ОбластьЗаголовок.Параметры.ДоговорАдрес = "Договор: " + Договор + " /  Адрес: " + Выборка.АдресМонтажа;
		ОбластьЗаголовок.Параметры.ДатаИзготовления = Формат(Выборка.ДатаИзготовления,"ДФ=dd.MM.yyyy");
		
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.ПовторятьПриПечатиСтроки = ТабДок.Область(1,,4,);
		ОбластьШапкаТаблицы.Параметры.Заполнить(Выборка);
		
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		
		ВыборкаДверь = Выборка.Выбрать();
		
		Пока ВыборкаДверь.Следующий() Цикл
			
			Если ВыборкаДверь.Ширина > 0 И ВыборкаДверь.Длина > 0 Тогда
				Обл = ОбластьСтрокаЖирный;
			Иначе
				Обл = ОбластьСтрока;
			КонецЕсли;
			
			Обл.Параметры.Заполнить(ВыборкаДверь);
			ТабДок.Вывести(Обл);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ВывестиМерныйМатериал(ТабДок, МассивДокументов[0]);
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, 1, ОбъектыПечати, Выборка.Двери);
	
	Возврат ТабДок;
	
КонецФункции // ПечатьДвери()

Функция ПечатьСтеклянныеФасады(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок 										= Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати 	= "ПараметрыПечати_СтеклянныеФасады";
	ТабДок.АвтоМасштаб 					= Истина;
	ТабДок.ОтображатьСетку 			= Ложь;
	ТабДок.Защита 							= Истина;
	ТабДок.ТолькоПросмотр 				= Истина;
	ТабДок.ОтображатьЗаголовки 		= Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокМатериалы.Ссылка.Номер КАК НомерДокумента,
	|	СпецификацияСписокМатериалы.Материал,
	|	СпецификацияСписокМатериалы.Номенклатура,
	|	СпецификацияСписокМатериалы.ШиринаДетали,
	|	СпецификацияСписокМатериалы.ВысотаДетали,
	|	СпецификацияСписокМатериалы.Обтачивать КАК Обтачивать,
	|	СпецификацияСписокМатериалы.Петли,
	|	СпецификацияСписокМатериалы.ПоложениеРучки,
	|	СпецификацияСписокМатериалы.РасположениеПазов,
	|	СпецификацияСписокМатериалы.НоменклатураДляСклеивания КАК Ручка,
	|	СпецификацияСписокМатериалы.РадиусФасада,
	|	СпецификацияСписокМатериалы.Количество,
	|	СпецификацияСписокМатериалы.Ссылка
	|ИЗ
	|	Документ.Спецификация.СписокМатериалы КАК СпецификацияСписокМатериалы
	|ГДЕ
	|	СпецификацияСписокМатериалы.Ссылка В(&МассивДокументов)
	|	И (СпецификацияСписокМатериалы.Материал = ""ФасадСтеклянный""
	|			ИЛИ СпецификацияСписокМатериалы.Материал = ""ФасадСтеклянныйЗакругленный"")
	|	И СпецификацияСписокМатериалы.РадиусФасада <> """"";
	
	Выборка 						= Запрос.Выполнить().Выбрать();
	Макет 							= Документы.Спецификация.ПолучитьМакет("СтеклянныеФасады");
	ОбластьСтрокаЯчейка 		= Макет.ПолучитьОбласть("Строка");
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1; 
		ОбластьСтрокаЯчейка.Параметры.Заполнить(Выборка);
		Картинка = Неопределено;
		
		ПоложениеРучки = ВРег(Выборка.ПоложениеРучки);
		
		Если ПоложениеРучки = "ПО ЦЕНТРУ" Тогда
			
			Картинка = БиблиотекаКартинок.ФасадСРадиусомРучкаПоЦентру;
			
		ИначеЕсли ПоложениеРучки = "СВЕРХУ" Тогда
			
			Картинка = БиблиотекаКартинок.ФасадСРадиусомРучкаСверху;
			
		ИначеЕсли ПоложениеРучки = "СНИЗУ" Тогда
			
			Картинка = БиблиотекаКартинок.ФасадСРадиусомРучкаСнизу;
			
		Иначе
			
			Картинка = БиблиотекаКартинок.ФасадСРадиусомБезРучки;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Картинка) Тогда
			
			ОбластьСтрокаЯчейка.Рисунки[0].Картинка = Новый Картинка(Картинка.ПолучитьДвоичныеДанные());
			
		Иначе
			
			ОбластьСтрокаЯчейка.Рисунки[0].Картинка.Вид = ВидКартинки.Пустая;
			
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьСтрокаЯчейка);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции // ПечатьДвери()

Функция ПечатьФасады(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_Фасады";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	МассивФасадов = Новый Массив;
	МассивФасадов.Добавить("ФасадАГТ");
	МассивФасадов.Добавить("ФасадАлюминиевый");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("МассивФасадов", МассивФасадов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	докСпецификация.Ссылка,
	|	докДоговор.Ссылка КАК Договор,
	|	НарядЗаданиеСписокСпецификаций.Ссылка КАК НарядЗадание,
	|	докСпецификация.Номер,
	|	докСпецификация.АдресМонтажа,
	|	докСпецификация.Автор,
	|	докСпецификация.Подразделение,
	|	докСпецификация.Контрагент,
	|	докСпецификация.ДатаИзготовления
	|ПОМЕСТИТЬ ВТ_Спецификации
	|ИЗ
	|	Документ.Спецификация КАК докСпецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Договор КАК докДоговор
	|		ПО (докДоговор.Спецификация = докСпецификация.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НарядЗадание.СписокСпецификаций КАК НарядЗаданиеСписокСпецификаций
	|		ПО докСпецификация.Ссылка = НарядЗаданиеСписокСпецификаций.Ссылка
	|ГДЕ
	|	докСпецификация.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Спецификации.Ссылка КАК Ссылка,
	|	ВТ_Спецификации.Договор КАК Договор,
	|	ВТ_Спецификации.НарядЗадание КАК НарядЗадание,
	|	СпецификацияСписокМатериалы.Материал КАК Материал,
	|	СпецификацияСписокМатериалы.ВысотаДетали,
	|	СпецификацияСписокМатериалы.Количество КАК Количество,
	|	СпецификацияСписокМатериалы.Комментарий,
	|	СпецификацияСписокМатериалы.Номенклатура,
	|	СпецификацияСписокМатериалы.ШиринаДетали,
	|	СпецификацияСписокМатериалы.ПоложениеРучки,
	|	СпецификацияСписокМатериалы.ОтверстийПодРучку,
	|	СпецификацияСписокМатериалы.Петли,
	|	СпецификацияСписокМатериалы.КоличествоПетель,
	|	СпецификацияСписокМатериалы.ДиаметрПазов,
	|	СпецификацияСписокМатериалы.РасположениеПазов,
	|	СпецификацияСписокМатериалы.УниверсальнаяКромка,
	|	СпецификацияСписокМатериалы.НомерИзделия,
	|	СпецификацияСписокМатериалы.НоменклатураДляСклеивания КАК Ручка,
	|	ВТ_Спецификации.Номер КАК Номер,
	|	ВТ_Спецификации.АдресМонтажа КАК АдресМонтажа,
	|	ВТ_Спецификации.Автор КАК Автор,
	|	ВТ_Спецификации.Подразделение КАК Подразделение,
	|	ВТ_Спецификации.Контрагент КАК Контрагент,
	|	ВТ_Спецификации.ДатаИзготовления КАК ДатаИзготовления
	|ИЗ
	|	ВТ_Спецификации КАК ВТ_Спецификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Спецификация.СписокМатериалы КАК СпецификацияСписокМатериалы
	|		ПО ВТ_Спецификации.Ссылка = СпецификацияСписокМатериалы.Ссылка
	|ГДЕ
	|	СпецификацияСписокМатериалы.Материал В(&МассивФасадов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Спецификации.Ссылка,
	|	ВТ_Спецификации.Договор,
	|	ВТ_Спецификации.НарядЗадание,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокЯщики.КромкаФасадНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.АГТПрофиль)
	|			ТОГДА ""ФасадАГТ""
	|		КОГДА СпецификацияСписокЯщики.КромкаФасадНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.РамочныйАлюминий)
	|			ТОГДА ""ФасадАлюминиевый""
	|	КОНЕЦ,
	|	СпецификацияСписокЯщики.ВысотаФасад,
	|	СпецификацияСписокЯщики.КоличествоЯщиков,
	|	СпецификацияСписокЯщики.Комментарий,
	|	СпецификацияСписокЯщики.ФасадНоменклатура,
	|	СпецификацияСписокЯщики.ШиринаФасад,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокЯщики.КоличествоРучек <> 0
	|			ТОГДА ""Ручка на ящике""
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СпецификацияСписокЯщики.КромкаФасадНоменклатура,
	|	СпецификацияСписокЯщики.НомерИзделия,
	|	СпецификацияСписокЯщики.РучкаНоменклатура,
	|	ВТ_Спецификации.Номер,
	|	ВТ_Спецификации.АдресМонтажа,
	|	ВТ_Спецификации.Автор,
	|	ВТ_Спецификации.Подразделение,
	|	ВТ_Спецификации.Контрагент,
	|	ВТ_Спецификации.ДатаИзготовления
	|ИЗ
	|	ВТ_Спецификации КАК ВТ_Спецификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Спецификация.СписокЯщики КАК СпецификацияСписокЯщики
	|		ПО ВТ_Спецификации.Ссылка = СпецификацияСписокЯщики.Ссылка
	|ГДЕ
	|	(СпецификацияСписокЯщики.КромкаФасадНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.АГТПрофиль)
	|			ИЛИ СпецификацияСписокЯщики.КромкаФасадНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.РамочныйАлюминий))
	|ИТОГИ
	|	МАКСИМУМ(Договор),
	|	МАКСИМУМ(НарядЗадание),
	|	СУММА(Количество),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(АдресМонтажа),
	|	МАКСИМУМ(Автор),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(ДатаИзготовления)
	|ПО
	|	Ссылка,
	|	Материал";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = Документы.Спецификация.ПолучитьМакет("Фасады");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьКоличествоДеталей 	= Макет.ПолучитьОбласть("КоличествоДеталей");
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		ТабДок.Вывести(ОбластьШапка);
		
		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ОбластьЗаголовок.Параметры.Комментарий = "" + Выборка.Договор + " /  Адрес: " + Выборка.АдресМонтажа;
		ОбластьЗаголовок.Параметры.ДатаИзготовления = Формат(Выборка.ДатаИзготовления,"ДФ=dd.MM.yyyy");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ТабДок.ПовторятьПриПечатиСтроки = ТабДок.Область(1,,4,);
		ВыборкаПоМатериалам = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		НомерСтроки = 0;
		
		Пока ВыборкаПоМатериалам.Следующий() Цикл
			
			Материал = ВыборкаПоМатериалам.Материал;
			
			ДетальныеЗаписи = ВыборкаПоМатериалам.Выбрать();
			
			ТабДок.Вывести(ОбластьПустаяСтрока);
			ОбластьШапка = Макет.ПолучитьОбласть("ШапкаАГТ");
			ОбластьШапка.Параметры.ВидФасада = ?(Материал = "ФасадАГТ", "Фасад АГТ",  "Фасад алюминиевый");
			ТабДок.Вывести(ОбластьШапка);
			
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаАГТ");
			
			Пока ДетальныеЗаписи.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ТорцеваяЛента = Новый Структура;
				ТорцеваяЛента.Вставить("ТорцеваяЛентаСверху", ДетальныеЗаписи.УниверсальнаяКромка);
				ТорцеваяЛента.Вставить("ТорцеваяЛентаСнизу", ДетальныеЗаписи.УниверсальнаяКромка);
				ТорцеваяЛента.Вставить("ТорцеваяЛентаСлева", ДетальныеЗаписи.УниверсальнаяКромка);
				ТорцеваяЛента.Вставить("ТорцеваяЛентаСправа", ДетальныеЗаписи.УниверсальнаяКромка);
				Размеры = ПолучитьРазмерыМатериалов(ДетальныеЗаписи.Номенклатура, ТорцеваяЛента);
				
				ОбластьСтрока.Параметры.Заполнить(ДетальныеЗаписи);
				ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
				ОбластьСтрока.Параметры.ШиринаДетали = ДетальныеЗаписи.ШиринаДетали + Размеры.ВычитаемоеДляШирины;
				ОбластьСтрока.Параметры.ВысотаДетали = ДетальныеЗаписи.ВысотаДетали + Размеры.ВычитаемоеДляВысоты;
				
				Если ЗначениеЗаполнено(ДетальныеЗаписи.Ручка) Тогда
					
					ОбластьСтрока.Параметры.ШиринаРучки = ДетальныеЗаписи.Ручка.ШиринаДетали;
					
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьСтрока);
				
			КонецЦикла;
			
			ОбластьКоличествоДеталей.Параметры.КоличествоДеталей = ВыборкаПоМатериалам.Количество;			
			ТабДок.Вывести(ОбластьКоличествоДеталей);
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции // ПечатьДвери()

Функция ПечатьЗаказ(МассивДокументов, ОбъектыПечати, БрендДилер) Экспорт
	
	// распечатывать можно только Заказ к Деталям
	РазрешитьПечать = Истина;
	
	Для каждого Док Из МассивДокументов Цикл
		
		Если НЕ БрендДилер и Док.Изделие <> Справочники.Изделия.Детали И НЕ РольДоступна("АдминистраторСистемы") Тогда
			РазрешитьПечать = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_Заказ";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Если НЕ РазрешитьПечать Тогда
		ТабДок.Вывод = ИспользованиеВывода.Запретить;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Ссылка.Контрагент.ПолноеНаименование КАК ПолноеНаименованиеКонтрагента,
	|	СпецификацияСписокНоменклатуры.Ссылка.Подразделение,
	|	СпецификацияСписокНоменклатуры.Ссылка.Офис,
	|	МАКСИМУМ(СпецификацияСписокНоменклатуры.Ссылка.СкидкаНаМатериалы) КАК СкидкаНаМатериалы,
	|	МАКСИМУМ(СпецификацияСписокНоменклатуры.Ссылка.СкидкаНаУслуги) КАК СкидкаНаУслуги,
	|	СпецификацияСписокНоменклатуры.Ссылка.СуммаДокумента,
	|	МИНИМУМ(СпецификацияСписокНоменклатуры.Ссылка.Номер) КАК СпецификацияНомер,
	|	СпецификацияСписокНоменклатуры.Номенклатура,
	|	СУММА(СпецификацияСписокНоменклатуры.Количество) КАК Количество,
	|	МИНИМУМ(СпецификацияСписокНоменклатуры.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(СпецификацияСписокНоменклатуры.Цена) КАК Цена,
	|	СУММА(СпецификацияСписокНоменклатуры.РозничнаяСтоимость) КАК РозничнаяСтоимость,
	|	МИНИМУМ(СпецификацияСписокНоменклатуры.НомерСтроки) КАК НомерСтроки,
	|	СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры КАК НоменклатураВидНоменклатуры,
	|	СпецификацияСписокНоменклатуры.Ссылка КАК Ссылка,
	|	"""" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Фамилия + "" "" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Имя + "" "" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Отчество КАК ПолноеНаименование,
	|	СпецификацияСписокНоменклатуры.Ссылка.ДатаОтгрузки КАК ДатаОтгрузки,
	|	СУММА(СпецификацияСписокНоменклатуры.ВнутренняяСтоимость) КАК ВнутренняяСтоимость
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура,
	|	СпецификацияСписокНоменклатуры.Ссылка.СуммаДокумента,
	|	СпецификацияСписокНоменклатуры.Ссылка.Контрагент.ПолноеНаименование,
	|	СпецификацияСписокНоменклатуры.Ссылка.Подразделение,
	|	СпецификацияСписокНоменклатуры.Ссылка.Офис,
	|	СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры,
	|	СпецификацияСписокНоменклатуры.Ссылка,
	|	"""" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Фамилия + "" "" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Имя + "" "" + СпецификацияСписокНоменклатуры.Ссылка.Контрагент.Отчество,
	|	СпецификацияСписокНоменклатуры.Ссылка.ДатаОтгрузки
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура.Наименование
	|ИТОГИ ПО
	|	Ссылка КАК Документ,
	|	НоменклатураВидНоменклатуры КАК ВидНоменклатуры";
	
	ВыборкаПоДокументу = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = Документы.Спецификация.ПолучитьМакет("Заказ");
	
	Если БрендДилер Тогда
		
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаБрендДилера");
		
	Иначе
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
	КонецЕсли;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаНоменклатуры = Макет.ПолучитьОбласть("ШапкаНоменклатуры");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьМатериалы = Макет.ПолучитьОбласть("Материалы");
	ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ИтогСтоимостиМатериалов = 0;
	ИтогСтоимостиМатериаловСоСкидкой = 0;
	ИтогСтоимостиУслуг = 0;
	ИтогСтоимостиУслугСоСкидкой = 0;
	РозничнаяСтоимость = 0;
	НомерСтрокиУслуг = 0;
	НомерСтрокиМатериалов = 0;
	
	Пока ВыборкаПоДокументу.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		ОбластьШапка.Параметры.СпецификацияНомер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаПоДокументу.СпецификацияНомер);
		ТабДок.Вывести(ОбластьШапка);
		
		Если НЕ БрендДилер Тогда
			
			ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументу);
			ОбластьЗаголовок.Параметры.ПолноеНаименование = ?(ЗначениеЗаполнено(ВыборкаПоДокументу.ПолноеНаименованиеКонтрагента), ВыборкаПоДокументу.ПолноеНаименованиеКонтрагента, ВыборкаПоДокументу.ПолноеНаименование);
			ТабДок.Вывести(ОбластьЗаголовок);
			СкидкаНаМатериалы = ВыборкаПоДокументу.СкидкаНаМатериалы;
			СкидкаНаУслуги = ВыборкаПоДокументу.СкидкаНаУслуги;
			
		КонецЕсли;
		
		ВыборкаПоВидуНоменклатуры = ВыборкаПоДокументу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		Пока ВыборкаПоВидуНоменклатуры.Следующий() Цикл
			
			ВидНомеклатуры = ВыборкаПоВидуНоменклатуры.НоменклатураВидНоменклатуры;
			
			Если ВидНомеклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
				
				ТабДок.Вывести(ОбластьМатериалы);
				ВыборкаМатериалов = ВыборкаПоВидуНоменклатуры.Выбрать();
				ТабДок.Вывести(ОбластьШапкаНоменклатуры);
				
				Пока ВыборкаМатериалов.Следующий() Цикл
					
					ВнутренняяСтоимость = 0;
					ВнутренняяСтоимость = ВыборкаМатериалов.ВнутренняяСтоимость;
					НомерСтрокиМатериалов = НомерСтрокиМатериалов + 1;
					РозничнаяСтоимость = 0;
					РозничнаяСтоимость = ВыборкаМатериалов.РозничнаяСтоимость;
					РозничнаяСтоимостьСоСкидкой = 0;
					
					Если БрендДилер Тогда
						
						ОбластьСтрока.Параметры.Заполнить(ВыборкаМатериалов);
						ОбластьСтрока.Параметры.Цена = ВнутренняяСтоимость / ВыборкаМатериалов.Количество;
						ОбластьСтрока.Параметры.Стоимость = ВнутренняяСтоимость;
						ИтогСтоимостиМатериалов = ИтогСтоимостиМатериалов + ВнутренняяСтоимость;
						ОбластьСтрока.Параметры.НомерСтроки = НомерСтрокиМатериалов;
						ТабДок.Вывести(ОбластьСтрока);
						
					Иначе
						
						ОбластьСтрока.Параметры.Цена = ВыборкаМатериалов.Цена;
						ОбластьСтрока.Параметры.Стоимость = РозничнаяСтоимость;
						РозничнаяСтоимостьСоСкидкой = РозничнаяСтоимость;// - РозничнаяСтоимость * 0.01 * СкидкаНаМатериалы;
						ОбластьСтрока.Параметры.СтоимостьСоСкидкой = РозничнаяСтоимостьСоСкидкой;
						ИтогСтоимостиМатериалов = ИтогСтоимостиМатериалов + РозничнаяСтоимость;
						ИтогСтоимостиМатериаловСоСкидкой = ИтогСтоимостиМатериаловСоСкидкой + РозничнаяСтоимостьСоСкидкой;
						ОбластьСтрока.Параметры.Заполнить(ВыборкаМатериалов);
						ОбластьСтрока.Параметры.НомерСтроки = НомерСтрокиМатериалов;
						ТабДок.Вывести(ОбластьСтрока);
						
					КонецЕсли;
					
				КонецЦикла;
				
				ОбластьИтог.Параметры.ИтогСтоимости = ИтогСтоимостиМатериалов;
				
				Если Не БрендДилер Тогда
					
					ОбластьИтог.Параметры.ИтогСтоимостиСоСкидкой = ИтогСтоимостиМатериаловСоСкидкой;
					
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьИтог);
				
			ИначеЕсли ВидНомеклатуры = Перечисления.ВидыНоменклатуры.Услуга Тогда
				
				ТабДок.Вывести(ОбластьУслуги);
				ВыборкаУслуг = ВыборкаПоВидуНоменклатуры.Выбрать();
				ТабДок.Вывести(ОбластьШапкаНоменклатуры);
				
				Пока ВыборкаУслуг.Следующий() Цикл
					
					Если БрендДилер Тогда
						
						ОбластьСтрока.Параметры.Заполнить(ВыборкаУслуг);
						НомерСтрокиУслуг = НомерСтрокиУслуг + 1;
						ВнутренняяСтоимость = 0;
						ВнутренняяСтоимость = ВыборкаУслуг.ВнутренняяСтоимость;
						РозничнаяСтоимостьСоСкидкой = 0;
						ОбластьСтрока.Параметры.Цена = ВнутренняяСтоимость / ВыборкаУслуг.Количество;
						ОбластьСтрока.Параметры.Стоимость = ВнутренняяСтоимость;
						ИтогСтоимостиУслуг = ИтогСтоимостиУслуг + ВнутренняяСтоимость;
						
					Иначе
						
						НомерСтрокиУслуг = НомерСтрокиУслуг + 1;
						РозничнаяСтоимость = 0;
						РозничнаяСтоимость = ВыборкаУслуг.РозничнаяСтоимость;
						РозничнаяСтоимостьСоСкидкой = 0;
						ОбластьСтрока.Параметры.Цена = ВыборкаУслуг.Цена;
						ОбластьСтрока.Параметры.Стоимость = РозничнаяСтоимость;
						РозничнаяСтоимостьСоСкидкой = РозничнаяСтоимость;// - РозничнаяСтоимость * 0.01 * СкидкаНаУслуги;
						ОбластьСтрока.Параметры.СтоимостьСоСкидкой = РозничнаяСтоимостьСоСкидкой;
						ИтогСтоимостиУслуг = ИтогСтоимостиУслуг + РозничнаяСтоимость;
						ИтогСтоимостиУслугСоСкидкой = ИтогСтоимостиУслугСоСкидкой + РозничнаяСтоимостьСоСкидкой;
						ОбластьСтрока.Параметры.Заполнить(ВыборкаУслуг);
						
					КонецЕсли;
					
					ОбластьСтрока.Параметры.НомерСтроки = НомерСтрокиУслуг;
					ТабДок.Вывести(ОбластьСтрока);
					
				КонецЦикла;
				
				ОбластьИтог.Параметры.ИтогСтоимости = ИтогСтоимостиУслуг;
				
				Если НЕ БрендДилер Тогда
					
					ОбластьИтог.Параметры.ИтогСтоимостиСоСкидкой = ИтогСтоимостиУслугСоСкидкой;
					
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьИтог);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ФормСтрока = "Л = ru_RU; ДП = Истина";
		ПарПредмета ="рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
		ИтогСтоимости = ИтогСтоимостиУслуг + ИтогСтоимостиМатериалов;
		ИтогСтоимостиСоСкидкой = ИтогСтоимостиУслугСоСкидкой + ИтогСтоимостиМатериаловСоСкидкой;
		ИтогПрописью = ЧислоПрописью(ИтогСтоимости, ФормСтрока, ПарПредмета);
		СоСкидкойПрописью = ЧислоПрописью(ИтогСтоимостиСоСкидкой, ФормСтрока, ПарПредмета);
		ОбластьПодвал.Параметры.ПолноеНаименование = ВыборкаПоДокументу.ПолноеНаименование;
		ОбластьПодвал.Параметры.ИтогСтоимости = ИтогСтоимости;
		ОбластьПодвал.Параметры.ИтогПрописью = ИтогПрописью;
		ТабДок.Вывести(ОбластьПодвал);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, МассивДокументов);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьАктГотовности(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_АктГотовности";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = Документы.Спецификация.ПолучитьМакет("АктГотовности");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЛинияОтрыва = Макет.ПолучитьОбласть("ЛинияОтрыва");
	ОбластьШапкаАктаВыпуска = Макет.ПолучитьОбласть("ШапкаАктаВыпуска");
	ОбластьПодписи = Макет.ПолучитьОбласть("ОбластьПодписи");
	
	УстановитьПривилегированныйРежим(Истина); // костыль
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(СпецификацияСписокДверей.Двери.Количество) КАК ДвериКоличество,
	|	СпецификацияСписокДверей.Ссылка
	|ПОМЕСТИТЬ КоличествоДверей
	|ИЗ
	|	Документ.Спецификация.СписокДверей КАК СпецификацияСписокДверей
	|ГДЕ
	|	СпецификацияСписокДверей.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокДверей.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА СпецификацияСписокМатериалы.НомерИзделия = 0
	|					ИЛИ НЕ СпецификацияСписокМатериалы.Ссылка.ЭтоКухня
	|				ТОГДА СпецификацияСписокМатериалы.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоДеталей,
	|	СпецификацияСписокМатериалы.Ссылка
	|ПОМЕСТИТЬ КоличествоДеталей
	|ИЗ
	|	Документ.Спецификация.СписокМатериалы КАК СпецификацияСписокМатериалы
	|ГДЕ
	|	СпецификацияСписокМатериалы.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокМатериалы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацияСкладГотовойПродукции.Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА СпецификацияСкладГотовойПродукции.КоличествоСклад > 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СкладКоличество,
	|	СУММА(ВЫБОР
	|			КОГДА СпецификацияСкладГотовойПродукции.КоличествоЦех > 0
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЦехКоличество
	|ПОМЕСТИТЬ КоличествоКомплектация
	|ИЗ
	|	Документ.Спецификация.СкладГотовойПродукции КАК СпецификацияСкладГотовойПродукции
	|ГДЕ
	|	СпецификацияСкладГотовойПродукции.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСкладГотовойПродукции.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка,                      
	|	СУММА(ВЫБОР
	|			КОГДА СпецификацияСписокИзделийПоКаталогу.Изделие.ВидИзделияПоКаталогу = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.КухняВерхний)
	|					ИЛИ СпецификацияСписокИзделийПоКаталогу.Изделие.ВидИзделияПоКаталогу = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.КухняНижний)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоКоробов
	|ПОМЕСТИТЬ КоличествоКоробов
	|ИЗ
	|	Документ.Спецификация.СписокИзделийПоКаталогу КАК СпецификацияСписокИзделийПоКаталогу
	|ГДЕ
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Специфик.Ссылка,
	|	ВЫБОР
	|		КОГДА Договор.Контрагент.ЮридическоеЛицо
	|			ТОГДА Договор.Контрагент.Наименование
	|		ИНАЧЕ ПОДСТРОКА(Договор.Контрагент.Фамилия, 1, 20) + "" "" + ПОДСТРОКА(Договор.Контрагент.Имя, 1, 20) + "" "" + ПОДСТРОКА(Договор.Контрагент.Отчество, 1, 20)
	|	КОНЕЦ КАК Заказчик,
	|	ВЫБОР
	|		КОГДА Специфик.АдресМонтажа = ""Введите адрес""
	|			ТОГДА """"
	|		ИНАЧЕ Специфик.АдресМонтажа
	|	КОНЕЦ КАК АдресЗаказчика,
	|	Специфик.Упаковка,
	|	Специфик.Комментарий,
	|	Специфик.СуммаНарядаСпецификации КАК СуммаНаряда,
	|	Специфик.Срочный,
	|	НАЧАЛОПЕРИОДА(Специфик.ДатаИзготовления, ДЕНЬ) КАК ДатаАдрес,
	|	Специфик.Номер КАК НомерСпецификации,
	|	Специфик.Подразделение,
	|	Двери.ДвериКоличество КАК КоличествоДверей,
	|	Детали.КоличествоДеталей,
	|	Специфик.ПакетУслуг,
	|	КоличествоКухонныхКоробов.КоличествоКоробов,
	|	КоличествоКомплектация.СкладКоличество,
	|	КоличествоКомплектация.ЦехКоличество,
	|	Специфик.Телефон,
	|	Монтаж.Экспедитор КАК ВодительЭкспедитор
	|ИЗ
	|	Документ.Спецификация КАК Специфик
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоДверей КАК Двери
	|		ПО Специфик.Ссылка = Двери.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоДеталей КАК Детали
	|		ПО Специфик.Ссылка = Детали.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоКомплектация КАК КоличествоКомплектация
	|		ПО (КоличествоКомплектация.Ссылка = Специфик.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоКоробов КАК КоличествоКухонныхКоробов
	|		ПО (КоличествоКухонныхКоробов.Ссылка = Специфик.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Договор КАК Договор
	|		ПО (Договор.Спецификация = Специфик.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Монтаж КАК Монтаж
	|		ПО (Монтаж.Спецификация = Специфик.Ссылка)
	|ГДЕ
	|	Специфик.Ссылка В(&МассивДокументов)" ;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Договор = Документы.Спецификация.ПолучитьДоговор(Выборка.Ссылка);
		Если ТипЗнч(Договор) = Тип("ДокументСсылка.Договор") И Договор <> Документы.Договор.ПустаяСсылка() Тогда
			ОбластьШапка.Параметры.СтрокаДоговор = Договор;
		КонецЕсли;
		
		ЕстьДетали = ЗначениеЗаполнено(Выборка.КоличествоДеталей);
		ЕстьКороба = ЗначениеЗаполнено(Выборка.КоличествоКоробов);
		ЕстьДвери = ЗначениеЗаполнено(Выборка.КоличествоДверей);
		ЕстьСкладКоличество = ЗначениеЗаполнено(Выборка.СкладКоличество);
		ЕстьЦехКоличество = ЗначениеЗаполнено(Выборка.ЦехКоличество);
		НомерСпецификации = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Выборка.НомерСпецификации, "0", "Слева");
		НаименованиеАктДоставки = "Акт доставки мебельного комплекта к";
		НаименованиеАктОтгрузки = "Акт отгрузки мебельного комплекта к";
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		ОбластьШапка.Параметры.Заполнить(Выборка);
		
		Если НЕ ЕстьДетали Тогда
			ОбластьШапка.Параметры.КоличествоДеталей = 0;
		КонецЕсли;
		
		Если НЕ ЕстьКороба Тогда
			ОбластьШапка.Параметры.КоличествоКоробов = 0;
		КонецЕсли;
		
		Если НЕ ЕстьДвери Тогда
			ОбластьШапка.Параметры.КоличествоДверей = 0;
		КонецЕсли;
		
		МестКомплектации = 0;
		
		Если НЕ ЕстьСкладКоличество И НЕ ЕстьЦехКоличество Тогда
			ОбластьШапка.Параметры.МестКомплектации = 0;
		ИначеЕсли НЕ ЕстьСкладКоличество Тогда
			МестКомплектации = Выборка.ЦехКоличество;
		ИначеЕсли НЕ ЕстьЦехКоличество Тогда
			МестКомплектации = Выборка.СкладКоличество ;
		Иначе
			МестКомплектации = Выборка.СкладКоличество + Выборка.ЦехКоличество;
		КонецЕсли;
		
		ОбластьШапка.Параметры.НомерСпецификации = НомерСпецификации;
		ОбластьШапка.Параметры.МестКомплектации = МестКомплектации;
		
		Если Выборка.Упаковка Тогда
			ОбластьШапка.Параметры.Упаковка = "V";
		Иначе
			ОбластьШапка.Параметры.Упаковка = "";
		КонецЕсли;
		
		Если Выборка.ПакетУслуг <> Перечисления.ПакетыУслуг.СамовывозОтПроизводителя Тогда
			ОбластьШапка.Параметры.НаименованиеАкта = НаименованиеАктДоставки;
			ТабДок.Вывести(ОбластьШапка);
			ТабДок.Вывести(ОбластьЛинияОтрыва);
		КонецЕсли;
		
		ОбластьШапка.Параметры.НаименованиеАкта = НаименованиеАктОтгрузки;
		ТабДок.Вывести(ОбластьШапка);
		
		ТабДок.Вывести(ОбластьЛинияОтрыва);
		
		//////////////////////////////////////
		// ВНУТРЕННИЙ АКТ ВЫПУСКА
		
		ОбластьШапкаАктаВыпуска.Параметры.Заполнить(Выборка);
		ОбластьШапкаАктаВыпуска.Параметры.НомерСпецификации = НомерСпецификации;
		ТабДок.Вывести(ОбластьШапкаАктаВыпуска);
		
		Если ЕстьДетали ИЛИ ЕстьКороба Тогда
			
			Если ЕстьДетали Тогда
				ОбластьПодписи.Параметры.Строка1 = "Количесто деталей: " + Выборка.КоличествоДеталей;
				Если ЕстьКороба Тогда
					ОбластьПодписи.Параметры.Строка2 = "Количество кухонных коробов: " + Выборка.КоличествоКоробов;
				КонецЕсли;
			Иначе
				ОбластьПодписи.Параметры.Строка1 = "Количество кухонных коробов: " + Выборка.КоличествоКоробов;
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьПодписи);
			
			Если ЕстьДвери Тогда
				
				ОбластьПодписи.Параметры.Строка1 = "Количество дверей: " + Выборка.КоличествоДверей;
				ОбластьПодписи.Параметры.Строка2 = "";
				ТабДок.Присоединить(ОбластьПодписи);
				
				Если ЕстьСкладКоличество ИЛИ ЕстьЦехКоличество Тогда
					
					Если ЕстьСкладКоличество Тогда
						
						ОбластьПодписи.Параметры.Строка1 = "Комплектация склад(количество): " + Выборка.СкладКоличество;
						
						Если ЕстьЦехКоличество Тогда
							
							ОбластьПодписи.Параметры.Строка2 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
							
						КонецЕсли;
						
					Иначе
						
						ОбластьПодписи.Параметры.Строка1 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
						ОбластьПодписи.Параметры.Строка2 = "";
						
					КонецЕсли;
					
					ТабДок.Присоединить(ОбластьПодписи);
					
				КонецЕсли;
				
			ИначеЕсли ЕстьСкладКоличество или ЕстьЦехКоличество Тогда
				
				Если ЕстьСкладКоличество Тогда
					
					ОбластьПодписи.Параметры.Строка1 = "Комплектация склад(количество): " + Выборка.СкладКоличество;
					
					Если ЕстьЦехКоличество Тогда
						
						ОбластьПодписи.Параметры.Строка2 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
						
					КонецЕсли;
					
				Иначе
					
					ОбластьПодписи.Параметры.Строка1 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
					ОбластьПодписи.Параметры.Строка2 = "";
					
				КонецЕсли;
				
				ТабДок.Присоединить(ОбластьПодписи);
				
			КонецЕсли;
			
		ИначеЕсли ЕстьДвери Тогда
			
			ОбластьПодписи.Параметры.Строка1 = "Количество дверей: " + Выборка.КоличествоДверей;
			ОбластьПодписи.Параметры.Строка2 = "";
			ТабДок.Присоединить(ОбластьПодписи);
			
			Если ЕстьСкладКоличество или ЕстьЦехКоличество Тогда
				
				Если ЕстьСкладКоличество Тогда
					
					ОбластьПодписи.Параметры.Строка1 = "Комплектация склад(количество): " + Выборка.СкладКоличество;
					
					Если ЕстьЦехКоличество Тогда
						
						ОбластьПодписи.Параметры.Строка2 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
						
					КонецЕсли;
					
				Иначе
					
					ОбластьПодписи.Параметры.Строка1 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
					ОбластьПодписи.Параметры.Строка2 = "";
					
				КонецЕсли;
				
				ТабДок.Присоединить(ОбластьПодписи);
				
			КонецЕсли;
			
		ИначеЕсли ЕстьСкладКоличество ИЛИ ЕстьЦехКоличество Тогда
			
			Если ЕстьСкладКоличество Тогда
				
				ОбластьПодписи.Параметры.Строка1 = "Комплектация склад(количество): " + Выборка.СкладКоличество;
				
				Если ЕстьЦехКоличество Тогда
					
					ОбластьПодписи.Параметры.Строка2 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
					
				КонецЕсли;
				
			Иначе
				
				ОбластьПодписи.Параметры.Строка1 = "Комплектация цех(количество): " + Выборка.ЦехКоличество;
				ОбластьПодписи.Параметры.Строка2 = "";
				
			КонецЕсли;
			
			ТабДок.Присоединить(ОбластьПодписи);
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, МассивДокументов);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции // ПечатьАктГотовности()

Функция ПечатьУпаковочныйЛист(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_УпаковочныйЛист";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	Макет = Документы.Спецификация.ПолучитьМакет("УпаковочныйЛист");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЛинияОтрыва = Макет.ПолучитьОбласть("ЛинияОтрыва");
	ОбластьТаблица = Макет.ПолучитьОбласть("Таблица");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спецификация.Ссылка,
	|	ВЫБОР
	|		КОГДА Спецификация.Контрагент.ЮридическоеЛицо
	|			ТОГДА Спецификация.Контрагент.Наименование
	|		ИНАЧЕ ПОДСТРОКА(Спецификация.Контрагент.Фамилия, 1, 20) + "" "" + ПОДСТРОКА(Спецификация.Контрагент.Имя, 1, 20) + "" "" + ПОДСТРОКА(Спецификация.Контрагент.Отчество, 1, 20)
	|	КОНЕЦ КАК Заказчик,
	|	Спецификация.Номер,
	|	ГОД(Спецификация.Дата) КАК Год,
	|	Спецификация.ДатаОтгрузки
	|ИЗ
	|	Документ.Спецификация КАК Спецификация
	|ГДЕ
	|	Спецификация.Ссылка В(&МассивДокументов)" ;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Номер = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Выборка.Номер, "0");
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		ОбластьТаблица.Параметры.Заполнить(Выборка);
		ОбластьТаблица.Параметры.Номер = Номер;
		ТабДок.Вывести(ОбластьШапка);
		ТабДок.Вывести(ОбластьТаблица);
		ТабДок.Вывести(ОбластьЛинияОтрыва);
		ТабДок.Вывести(ОбластьШапка);
		ТабДок.Вывести(ОбластьТаблица);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, МассивДокументов);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции // ПечатьАктГотовности()

Функция ПечатьИзделиеПоКаталогу(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ИзделиеПоКаталогу";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку	= Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХранимыеФайлыВерсий.ХранимыйФайл КАК Изображение,
	|	ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВладелецФайла КАК Изделие,
	|	ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла КАК ВидФайла
	|ПОМЕСТИТЬ ФайлыКаталога
	|ИЗ
	|	РегистрСведений.ХранимыеФайлыВерсий КАК ХранимыеФайлыВерсий
	|ГДЕ
	|	ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВладелецФайла ССЫЛКА Справочник.КаталогИзделий
	|	И ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ТекущаяВерсия.НомерВерсии = ХранимыеФайлыВерсий.ВерсияФайла.НомерВерсии
	|	И (ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.ОсновнаяКартинка)
	|			ИЛИ ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаЛевая)
	|			ИЛИ ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаПравая))
	|	И НЕ ХранимыеФайлыВерсий.ВерсияФайла.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА СпецификацияСписокИзделийПоКаталогу.Изделие.ВидИзделияПоКаталогу = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.КухняНижний)
	|			ТОГДА СпецификацияСписокИзделийПоКаталогу.ВысотаИзделия - 100 - СпецификацияСписокИзделийПоКаталогу.Столешница
	|		ИНАЧЕ СпецификацияСписокИзделийПоКаталогу.ВысотаИзделия
	|	КОНЕЦ КАК ВысотаКороба,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокИзделийПоКаталогу.Изделие.ВидИзделияПоКаталогу = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.КухняНижний)
	|			ТОГДА СпецификацияСписокИзделийПоКаталогу.ГлубинаИзделия - 56
	|		ИНАЧЕ СпецификацияСписокИзделийПоКаталогу.ГлубинаИзделия
	|	КОНЕЦ КАК ГлубинаКороба,
	|	СпецификацияСписокИзделийПоКаталогу.ГлубинаИзделия КАК ГлубинаИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.ВысотаИзделия КАК ВысотаИзделия,
	|	ВЫБОР
	|		КОГДА СпецификацияСписокИзделийПоКаталогу.Изделие.Угловой
	|			ТОГДА СпецификацияСписокИзделийПоКаталогу.ШиринаИзделия - 26
	|		ИНАЧЕ СпецификацияСписокИзделийПоКаталогу.ШиринаИзделия
	|	КОНЕЦ КАК ШиринаКороба,
	|	СпецификацияСписокИзделийПоКаталогу.ШиринаИзделия КАК ШиринаИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.Комментарий,
	|	СпецификацияСписокИзделийПоКаталогу.Изделие,
	|	СпецификацияСписокИзделийПоКаталогу.НомерСтроки КАК НомерДетали,
	|	СпецификацияСписокИзделийПоКаталогу.Изделие.Наименование КАК Наименование,
	|	ФайлыКаталога.Изображение,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Номер КАК Номер,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Автор КАК Автор,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Подразделение КАК Подразделение,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Контрагент КАК Контрагент,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.ДатаИзготовления КАК ДатаИзготовления,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка КАК Ссылка,
	|	СпецификацияСписокИзделийПоКаталогу.НоменклатураЛДСП,
	|	СпецификацияСписокИзделийПоКаталогу.НоменклатураДВП,
	|	СпецификацияСписокИзделийПоКаталогу.КромкаЛДСП,
	|	СпецификацияСписокИзделийПоКаталогу.СтрокаТаблицаФасадов,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Изделие.ВидИзделия КАК ВидИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.Сушка,
	|	СпецификацияСписокИзделийПоКаталогу.Мойка,
	|	ФайлыКаталога.ВидФайла
	|ИЗ
	|	Документ.Спецификация.СписокИзделийПоКаталогу КАК СпецификацияСписокИзделийПоКаталогу
	|		ЛЕВОЕ СОЕДИНЕНИЕ ФайлыКаталога КАК ФайлыКаталога
	|		ПО СпецификацияСписокИзделийПоКаталогу.Изделие = ФайлыКаталога.Изделие
	|			И (ВЫБОР
	|				КОГДА ФайлыКаталога.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.ОсновнаяКартинка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ СпецификацияСписокИзделийПоКаталогу.Расположение = ФайлыКаталога.ВидФайла
	|			КОНЕЦ)
	|ГДЕ
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка В(&МассивДокументов)
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Автор),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(ДатаИзготовления),
	|	МАКСИМУМ(ВидИзделия)
	|ПО
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Макет = Документы.Спецификация.ПолучитьМакет("ИзделиеПоКаталогу");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьТело = Макет.ПолучитьОбласть("Тело");	
	ОбластьКомент = Макет.ПолучитьОбласть("Комент");
	ОбластьШапкаФасады = Макет.ПолучитьОбласть("ШапкаФасады");	
	ОбластьСтрокаФасады = Макет.ПолучитьОбласть("СтрокаФасады");
	ОбластьПустаяСтрокаФасадов = Макет.ПолучитьОбласть("ПустаяСтрокаФасадов");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(ОбластьШапка);
	
	МассивСтрок = Новый Массив;
	
	Пока Выборка.Следующий() Цикл 
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ОбластьЗаголовок.Параметры.ДатаИзготовления = Формат(Выборка.ДатаИзготовления,"ДФ=dd.MM.yyyy");
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ВыборкаПоИзделиям = Выборка.Выбрать();
		Пока ВыборкаПоИзделиям.Следующий() Цикл
			
			ОбластьТело.Параметры.Заполнить(ВыборкаПоИзделиям);
			ОбластьКомент.Параметры.Заполнить(ВыборкаПоИзделиям);
			
			ОбластьТело.Рисунки.РисунокИзделия.Картинка = ?(ЗначениеЗаполнено(ВыборкаПоИзделиям.Изображение), Новый Картинка(ВыборкаПоИзделиям.Изображение.Получить()), Новый Картинка);
			
			//Рисунок = ОбластьТело.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
			//Рисунок.Лево = 3;
			//Рисунок.Верх = 15;
			//Рисунок.Высота = 35;
			//Рисунок.Ширина = 25;
			//Рисунок.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
			//Если ЗначениеЗаполнено(ВыборкаПоИзделиям.Изображение) Тогда
			//	Рисунок.Картинка = Новый Картинка(ВыборкаПоИзделиям.Изображение.Получить());
			//Иначе
			//	Рисунок.Картинка = Новый Картинка;
			//КонецЕсли;
			//Рисунок.РазмерКартинки = РазмерКартинки.Пропорционально;
			
			//Фурнитура
			СписокНоменклатуры = ВыборкаПоИзделиям.Изделие.СписокНоменклатуры;
			ФурнитураВСборе = "";
			ФурнитураОтдельно = "";
			ГлубинаИзделия = ВыборкаПоИзделиям.ГлубинаИзделия;
			ВысотаИзделия = ВыборкаПоИзделиям.ВысотаИзделия;
			ШиринаИзделия = ВыборкаПоИзделиям.ШиринаИзделия;
			Для Каждого СтрокаНоменклатуры Из СписокНоменклатуры Цикл
				КоличествоНоменклатуры = 0;
				Попытка
					Выполнить("КоличествоНоменклатуры = " + СтрокаНоменклатуры.Количество);
				Исключение
					КоличествоНоменклатуры = СтрокаНоменклатуры.Количество;
				КонецПопытки;
				
				Если СтрокаНоменклатуры.ВСборе Тогда
					ФурнитураВСборе = СокрЛП(ФурнитураВСборе) + Символы.ПС + СтрокаНоменклатуры.Номенклатура + " - " + КоличествоНоменклатуры + " шт."; 
				Иначе
					ФурнитураОтдельно = СокрЛП(ФурнитураОтдельно) + Символы.ПС + СтрокаНоменклатуры.Номенклатура + " - " + КоличествоНоменклатуры + " шт.";
				КонецЕсли;
			КонецЦикла;
			
			Если ЗначениеЗаполнено(ВыборкаПоИзделиям.Сушка) Тогда
				ФурнитураВСборе = ФурнитураВСборе + Символы.ПС + ВыборкаПоИзделиям.Сушка + " - 1 шт."; 
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(ВыборкаПоИзделиям.Мойка) Тогда
				ФурнитураОтдельно = ФурнитураОтдельно + Символы.ПС + ВыборкаПоИзделиям.Мойка + " - 1 шт.";
			КонецЕсли;
			
			ОбластьТело.Параметры.ФурнитураОтдельно = СокрЛП(ФурнитураОтдельно);
			ОбластьТело.Параметры.ФурнитураВСборе = СокрЛП(ФурнитураВСборе);
			
			КоличествоФасадов = 0;			
			Если ЗначениеЗаполнено(ВыборкаПоИзделиям.СтрокаТаблицаФасадов) Тогда
				ТаблицаФасадов = ЗначениеИзСтрокиВнутр(ВыборкаПоИзделиям.СтрокаТаблицаФасадов);
				КоличествоФасадов = ТаблицаФасадов.Количество();
			КонецЕсли;
			
			МассивПроверки = Новый Массив;
			МассивПроверки.Добавить(ОбластьТело);
			МассивПроверки.Добавить(ОбластьШапкаФасады);
			МассивПроверки.Добавить(ОбластьКомент);
			
			Для ы = 1 По КоличествоФасадов Цикл
				МассивПроверки.Добавить(ОбластьПустаяСтрокаФасадов);
			КонецЦикла;
			
			Если НЕ ТабДок.ПроверитьВывод(МассивПроверки) Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДок.Вывести(ОбластьЗаголовок);
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьТело);
			
			Если КоличествоФасадов > 0 Тогда
				
				ТабДок.Вывести(ОбластьШапкаФасады);
				
				СписокМатериалы = ВыборкаПоИзделиям.Изделие.СписокМатериалы;
				СписокЯщики = ВыборкаПоИзделиям.Изделие.СписокЯщики;
				
				Для Каждого Строка Из ТаблицаФасадов Цикл
					
					ОбластьСтрокаФасады.Параметры.ИмяФасада = Строка.ИмяФасада;
					ОбластьСтрокаФасады.Параметры.ВидФасада = СтрЗаменить(Строка.ВидФасада, "Фасад", "");
					ОбластьСтрокаФасады.Параметры.ЦветФасада = ?(ЗначениеЗаполнено(Строка.НоменклатураФасада.КраткоеНаименование), Строка.НоменклатураФасада.КраткоеНаименование, Строка.НоменклатураФасада);
					ОбластьСтрокаФасады.Параметры.Обрамление = ?(ЗначениеЗаполнено(Строка.ОбрамлениеФасада.КраткоеНаименование), Строка.ОбрамлениеФасада.КраткоеНаименование, Строка.ОбрамлениеФасада);
					ОбластьСтрокаФасады.Параметры.Ручка = ?(ЗначениеЗаполнено(Строка.НоменклатураРучки.КраткоеНаименование), Строка.НоменклатураРучки.КраткоеНаименование, Строка.НоменклатураРучки);
					ОбластьСтрокаФасады.Параметры.РасположениеРучки = Строка.РасположениеРучки;
					ОбластьСтрокаФасады.Параметры.Механизм1 = ?(ЗначениеЗаполнено(Строка.МеханизмФасада.КраткоеНаименование), Строка.МеханизмФасада.КраткоеНаименование, Строка.МеханизмФасада);
					ОбластьСтрокаФасады.Параметры.Демпфер = ?(ЗначениеЗаполнено(Строка.Демпфер.КраткоеНаименование), Строка.Демпфер.КраткоеНаименование, Строка.Демпфер);
					ОбластьСтрокаФасады.Параметры.КоличествоМеханизм1 = Строка.КоличествоМеханизмФасада;
					ОбластьСтрокаФасады.Параметры.КоличествоДемпфер = Строка.КоличествоДемпфер;
					ОбластьСтрокаФасады.Параметры.ВыдвижнойЭлемент = Строка.ВыдвижнойЭлемент;
					ОбластьСтрокаФасады.Параметры.ЛДСП = ?(ЗначениеЗаполнено(Строка.НоменклатураЭлемента.КраткоеНаименование), Строка.НоменклатураЭлемента.КраткоеНаименование, Строка.НоменклатураЭлемента);
					ОбластьСтрокаФасады.Параметры.Торцовка = ?(ЗначениеЗаполнено(Строка.ТорцовкаЭлемента.КраткоеНаименование), Строка.ТорцовкаЭлемента.КраткоеНаименование, Строка.ТорцовкаЭлемента);						 
					ОбластьСтрокаФасады.Параметры.ДопЭлемент = ?(ЗначениеЗаполнено(Строка.ДопЭлемент.КраткоеНаименование), Строка.ДопЭлемент.КраткоеНаименование, Строка.ДопЭлемент);
					ОбластьСтрокаФасады.Параметры.Петля = Неопределено;
					
					Если Строка.ВидЭлемента = "Ящик" Тогда
						Глубина = 0;
						Попытка
							Выполнить("Глубина = " + СписокЯщики.Найти(Строка.ИмяФасада, "ИмяЯщика").ГлубинаЯщика);
						Исключение
							Глубина = ВыборкаПоИзделиям.ГлубинаКороба;
						КонецПопытки;
						Направляющие = НайтиНаправляющиеНоменклатура(ВыборкаПоИзделиям.Подразделение, Строка.МеханизмЭлемента, Глубина);
						ОбластьСтрокаФасады.Параметры.Механизм = ?(ЗначениеЗаполнено(Направляющие), Направляющие.КраткоеНаименование, "");
					Иначе
						Попытка
							ОбластьСтрокаФасады.Параметры.Петля = ?(ЗначениеЗаполнено(Строка.Петли.КраткоеНаименование), Строка.Петли.КраткоеНаименование, Строка.Петли);	
						Исключение
							ОбластьСтрокаФасады.Параметры.Петля = СписокМатериалы.Найти(Строка.ИмяФасада,"ИмяДетали").Петли.КраткоеНаименование;
						КонецПопытки;	
					КонецЕсли;
					
					ТабДок.Вывести(ОбластьСтрокаФасады);
					
				КонецЦикла;
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьКомент);
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьШкафПоКаталогу(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ШкафПоКаталогу";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку	= Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = Документы.Спецификация.ПолучитьМакет("ШкафПоКаталогу");
	ОбластьОсновноеПоле = Макет.ПолучитьОбласть("ОсновноеПоле");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХранимыеФайлыВерсий.ХранимыйФайл КАК Изображение,
	|	ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВладелецФайла КАК Изделие,
	|	ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла КАК ВидФайла
	|ПОМЕСТИТЬ ФайлыКаталога
	|ИЗ
	|	РегистрСведений.ХранимыеФайлыВерсий КАК ХранимыеФайлыВерсий
	|ГДЕ
	|	ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВладелецФайла ССЫЛКА Справочник.КаталогИзделий
	|	И ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ТекущаяВерсия.НомерВерсии = ХранимыеФайлыВерсий.ВерсияФайла.НомерВерсии
	|	И (ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.ОсновнаяКартинка)
	|			ИЛИ ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаЛевая)
	|			ИЛИ ХранимыеФайлыВерсий.ВерсияФайла.Владелец.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаПравая))
	|	И НЕ ХранимыеФайлыВерсий.ВерсияФайла.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацияСписокИзделийПоКаталогу.ВысотаИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.ГлубинаИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.Изделие,
	|	СпецификацияСписокИзделийПоКаталогу.ШиринаИзделия КАК ШиринаИзделия,
	|	СпецификацияСписокИзделийПоКаталогу.НомерСтроки,
	|	ФайлыКаталога.Изображение КАК Изображение,
	|	СпецификацияСписокИзделийПоКаталогу.ВидИзделия КАК ВидИзделия,
	|	ФайлыКаталога.ВидФайла,
	|	СпецификацияСписокИзделийПоКаталогу.Комментарий,
	|	СпецификацияСписокИзделийПоКаталогу.НоменклатураЛДСП,
	|	СпецификацияСписокИзделийПоКаталогу.КромкаЛДСП,
	|	СпецификацияСписокИзделийПоКаталогу.Ручка,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Подразделение КАК Подразделение,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Контрагент КАК Контрагент,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Номер КАК Номер,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка КАК Ссылка,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.Автор КАК Автор,
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка.ДатаИзготовления КАК ДатаИзготовления,
	|	СпецификацияСписокИзделийПоКаталогу.Изделие.НеВлияетНаОсновной КАК НеВлияетНаОсновной
	|ИЗ
	|	Документ.Спецификация.СписокИзделийПоКаталогу КАК СпецификацияСписокИзделийПоКаталогу
	|		ЛЕВОЕ СОЕДИНЕНИЕ ФайлыКаталога КАК ФайлыКаталога
	|		ПО СпецификацияСписокИзделийПоКаталогу.Изделие = ФайлыКаталога.Изделие
	|			И (ВЫБОР
	|				КОГДА СпецификацияСписокИзделийПоКаталогу.ВидИзделия = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент)
	|					ТОГДА ФайлыКаталога.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаЛевая)
	|				КОГДА СпецификацияСписокИзделийПоКаталогу.ВидИзделия = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент)
	|					ТОГДА ФайлыКаталога.ВидФайла = ЗНАЧЕНИЕ(Перечисление.ВидыПрисоединенныхФайлов.КартинкаПравая)
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ГДЕ
	|	СпецификацияСписокИзделийПоКаталогу.Ссылка В(&МассивДокументов)
	|ИТОГИ
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Автор),
	|	МАКСИМУМ(ДатаИзготовления)
	|ПО
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ОбластьОсновноеПоле.Параметры.Заполнить(Выборка);
		
		ОбластьОсновноеПоле.Параметры.НомерСпецификации = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Выборка.Номер, "0");
		ОбластьОсновноеПоле.Параметры.ДатаИзготовления = Формат(Выборка.ДатаИзготовления,"ДФ=dd.MM.yyyy");
		
		КоличествоДверей = "Нет";
		ВысотаПроема = 0;
		ШиринаПроема = 0;
		Для Каждого ЭлементДвери Из Выборка.Ссылка.СписокДверей Цикл
			Если ЭлементДвери.ПоКаталогу Тогда
				КоличествоДверей = ЭлементДвери.Двери.Количество;
				ВысотаПроема = ЭлементДвери.Двери.ВысотаПроема;
				ШиринаПроема = ЭлементДвери.Двери.ШиринаПроема;
			КонецЕсли;	                              
		КонецЦикла;		                      
		ОбластьОсновноеПоле.Параметры.КоличествоДверей = КоличествоДверей;
		ОбластьОсновноеПоле.Параметры.ВысотаПроема = ВысотаПроема;
		ОбластьОсновноеПоле.Параметры.ШиринаПроема = ШиринаПроема;
		
		Комментарий = "";
		ШиринаИзделия = 0;
		ВысотаИзделия = 0;
		
		ВыборкаПоКоробам = Выборка.Выбрать();
		Пока ВыборкаПоКоробам.Следующий() Цикл
			
			Комментарий = СокрЛП(Комментарий) + Символы.ПС + ВыборкаПоКоробам.Комментарий;
			
			Если ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.Потолок Тогда
				
				Рисунок = ОбластьОсновноеПоле.Области.Крыша;
				ВысотаИзделия = ВысотаИзделия + ?(НЕ ВыборкаПоКоробам.НеВлияетНаОсновной, ВыборкаПоКоробам.ВысотаИзделия, 0); 
				
			ИначеЕсли ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ОсновнойЭлемент Тогда
				
				Рисунок = ОбластьОсновноеПоле.Области.Основной;
				ОбластьОсновноеПоле.Параметры.ЛДСП = ВыборкаПоКоробам.НоменклатураЛДСП;
				ОбластьОсновноеПоле.Параметры.Торцовка = ВыборкаПоКоробам.КромкаЛДСП;
				ОбластьОсновноеПоле.Параметры.Ручки = ВыборкаПоКоробам.Ручка;
				ВысотаИзделия = ВысотаИзделия + ВыборкаПоКоробам.ВысотаИзделия;
				ШиринаИзделия = ШиринаИзделия + ВыборкаПоКоробам.ШиринаИзделия;
				
			ИначеЕсли ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент Тогда
				
				Рисунок = ОбластьОсновноеПоле.Области.Левый;
				ОбластьОсновноеПоле.Параметры.Ручки = ?(ЗначениеЗаполнено(ОбластьОсновноеПоле.Параметры.Ручки), ОбластьОсновноеПоле.Параметры.Ручки, ВыборкаПоКоробам.Ручка);
				ШиринаИзделия = ШиринаИзделия + ?(НЕ ВыборкаПоКоробам.НеВлияетНаОсновной, ВыборкаПоКоробам.ШиринаИзделия, 0);
				
			ИначеЕсли ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент Тогда
				
				Рисунок = ОбластьОсновноеПоле.Области.Правый;
				ОбластьОсновноеПоле.Параметры.Ручки = ?(ЗначениеЗаполнено(ОбластьОсновноеПоле.Параметры.Ручки), ОбластьОсновноеПоле.Параметры.Ручки, ВыборкаПоКоробам.Ручка);
				ШиринаИзделия = ШиринаИзделия + ?(НЕ ВыборкаПоКоробам.НеВлияетНаОсновной, ВыборкаПоКоробам.ШиринаИзделия, 0);
				
			ИначеЕсли ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.Пол Тогда
				
				Рисунок = ОбластьОсновноеПоле.Области.Пол;
				ВысотаИзделия = ВысотаИзделия + ?(НЕ ВыборкаПоКоробам.НеВлияетНаОсновной, ВыборкаПоКоробам.ВысотаИзделия, 0);
				
			ИначеЕсли ВыборкаПоКоробам.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ЗадняяСтенка Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Если Рисунок <> Неопределено Тогда
				
				Если ЗначениеЗаполнено(ВыборкаПоКоробам.Изображение) Тогда
					Рисунок.Картинка = Новый Картинка(ВыборкаПоКоробам.Изображение.Получить());
				Иначе
					Рисунок.Картинка = Новый Картинка;
				КонецЕсли;
				Рисунок.РазмерКартинки = РазмерКартинки.Пропорционально;
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьОсновноеПоле.Параметры.ШиринаИзделия = ШиринаИзделия;
		ОбластьОсновноеПоле.Параметры.ВысотаИзделия = ВысотаИзделия;
		ОбластьОсновноеПоле.Параметры.Комментарий = Комментарий;
		ТабДок.Вывести(ОбластьОсновноеПоле);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);	
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьРаскройСпецификации(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = Документы.Спецификация.ПолучитьМакет("Раскрой");
	ОбластьКартинка = Макет.ПолучитьОбласть("Картинка");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РаскройДеталей.РисунокРаскроя,
	|	РаскройДеталей.Объект КАК Ссылка,
	|	РаскройДеталей.РисунокКривогоПила
	|ИЗ
	|	РегистрСведений.РаскройДеталей КАК РаскройДеталей
	|ГДЕ
	|	РаскройДеталей.Объект В(&Объект)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		МассивПараметров = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(Выборка.РисунокРаскроя,"save☻", ""), "☺");
		МассивПараметровКривогоПила = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(Выборка.РисунокКривогоПила,"save☻", ""), "☺");
		
		Для Каждого Строка Из МассивПараметровКривогоПила Цикл
			
			ДанныеКривогоПила = Base64Значение(Строка);
			
			ОбластьКартинка.Рисунки.D1.Картинка = Новый Картинка(ДанныеКривогоПила);
			ТабДок.Вывести(ОбластьКартинка);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
		
		Для Каждого Элемент Из МассивПараметров Цикл
			
			Данные = Base64Значение(Элемент);
			
			ОбластьКартинка.Рисунки.D1.Картинка = Новый Картинка(Данные);
			ТабДок.Вывести(ОбластьКартинка);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;	
	
КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Спецификация") Тогда
		
		ПодготовитьПечатнуюФорму("Спецификация", "Спецификация", "Документ.Спецификация.Спецификация",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктГотовности") Тогда
		
		ПодготовитьПечатнуюФорму("АктГотовности", "Акт готовности", "Документ.Спецификация.АктГотовности",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИзделиеПоКаталогу") Тогда
		
		ПодготовитьПечатнуюФорму("ИзделиеПоКаталогу", "Изделие по каталогу", "Документ.Спецификация.ИзделиеПоКаталогу",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ШкафПоКаталогу") Тогда
		
		ПодготовитьПечатнуюФорму("ШкафПоКаталогу", "Шкаф по каталогу", "Документ.Спецификация.ШкафПоКаталогу",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Дверь") Тогда
		
		ПодготовитьПечатнуюФорму("Дверь", "Дверь", "Документ.Спецификация.Дверь",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СтеклянныеФасады") Тогда
		
		ПодготовитьПечатнуюФорму("СтеклянныеФасады", "Стеклянные фасады", "Документ.Спецификация.СтеклянныеФасады",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Фасады") Тогда
		
		ПодготовитьПечатнуюФорму("Фасады", "АГТ и алюминиевые фасады", "Документ.Спецификация.Фасады",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заказ") Тогда
		
		ПодготовитьПечатнуюФорму("Заказ", "Заказ", "Документ.Спецификация.Заказ",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказБрендДилера") Тогда
		
		ПодготовитьПечатнуюФорму("ЗаказБрендДилера", "Заказ бренд дилера", "Документ.Спецификация.Заказ",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УпаковочныйЛист") Тогда
		
		ПодготовитьПечатнуюФорму("УпаковочныйЛист", "Упаковочный лист", "Документ.Спецификация.УпаковочныйЛист",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктГотовности") Тогда
		
		ПодготовитьПечатнуюФорму("АктГотовности", "Акт готовности", "Документ.Спецификация.АктГотовности",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
		
		ПодготовитьПечатнуюФорму("Торг12", "Торг12", "Документ.РеализацияМатериалов.ПечатьТорг12",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Раскрой") Тогда
		
		ПодготовитьПечатнуюФорму("Раскрой", "Раскрой", "Документ.Спецификация.Раскрой",   
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

Процедура ПодготовитьПечатнуюФорму(Знач ИмяМакета, ПредставлениеМакета, ПолныйПутьКМакету = "", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	Если ИмяМакета = "Спецификация" Тогда
		
		ТабДок = ПечатьСпецификации(МассивОбъектов, ОбъектыПечати); 
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "Фасады" Тогда
		
		ТабДок = ПечатьФасады(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "АктГотовности" Тогда
		
		ТабДок = ПечатьАктГотовности(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "Дверь" Тогда
		
		ТабДок = ПечатьДверь(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "СтеклянныеФасады" Тогда
		
		ТабДок = ПечатьСтеклянныеФасады(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "ИзделиеПоКаталогу" Тогда
		
		ТабДок = ПечатьИзделиеПоКаталогу(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "ШкафПоКаталогу" Тогда
		
		ТабДок = ПечатьШкафПоКаталогу(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "Заказ" Тогда
		
		ТабДок = ПечатьЗаказ(МассивОбъектов, ОбъектыПечати, Ложь);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "ЗаказБрендДилера" Тогда
		
		ТабДок = ПечатьЗаказ(МассивОбъектов, ОбъектыПечати, Истина);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "УпаковочныйЛист" Тогда
		
		ТабДок = ПечатьУпаковочныйЛист(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "АктГотовности" Тогда
		
		ТабДок = ПечатьАктГотовности(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "Торг12" Тогда
		
		ТабДок = ЛексСервер.ПечататьТорг12(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "Раскрой" Тогда
		
		ТабДок = ПечатьРаскройСпецификации(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДоговор(СсылкаСпецификация) Экспорт
	
	МассивДокументов = ЛексСервер.НайтиПодчиненныеДокументы(СсылкаСпецификация, "Документ.Договор", "Спецификация");
	Если МассивДокументов.Количество() = 1 Тогда
		Возврат МассивДокументов[0];
	ИначеЕсли МассивДокументов.Количество() = 0 Тогда
		Возврат Документы.Договор.ПустаяСсылка();
	Иначе
		ВызватьИсключение "Ошибка 795: Нарушена связь ""Спецификации"" и документа ""Договор""";
	КонецЕсли;
	
КонецФункции // ПолучитьМонтаж()

Функция ПолучитьНарядЗадание(СсылкаСпецификация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаСпецификация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НарядЗаданиеСписокСпецификаций.Ссылка.Номер
	|ИЗ
	|	Документ.НарядЗадание.СписокСпецификаций КАК НарядЗаданиеСписокСпецификаций
	|ГДЕ
	|	НарядЗаданиеСписокСпецификаций.Спецификация = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	
	
	Если Выборка.Количество() = 1 Тогда
		
		Выборка.Следующий();
		Возврат Выборка.Номер;
		
	ИначеЕсли Выборка.Количество() = 0 Тогда
		
		Возврат Документы.НарядЗадание.ПустаяСсылка();
		
	Иначе
		
		ВызватьИсключение "Ошибка 797: Нарушена связь ""Спецификации"" и документа ""НарядЗадание""";
		
	КонецЕсли;
	
КонецФункции // ПолучитьМонтаж()

Функция ПерезаполнитьКомплектацию(СсылкаСпецификация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаСпецификация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСкладГотовойПродукции.Номенклатура КАК Номенклатура,
	|	СпецификацияСкладГотовойПродукции.ЕдиницаИзмерения,
	|	СпецификацияСкладГотовойПродукции.КоличествоСклад КАК КоличествоСклад,
	|	СпецификацияСкладГотовойПродукции.КоличествоЦех
	|ИЗ
	|	Документ.Спецификация.СкладГотовойПродукции КАК СпецификацияСкладГотовойПродукции
	|ГДЕ
	|	СпецификацияСкладГотовойПродукции.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка; //СтруктураКомплектации;
	
КонецФункции

// Записыват в Регистр сведений текущий статус Спецификации
//
// Параметры
//  СпецификацияСсылка - СправочникСсылка.Спецификация - Ссылка на спецификацию для которой меняем статус
//  НовыйСтатус - ПеречислениеСсылка.СтатусыСпецификаций - Ссылка на перечисление нового статуса спецификации
Функция УстановитьСтатусСпецификации(СпецификацияСсылка, НовыйСтатус) Экспорт
	
	ДатаВремя = ТекущаяДата();
	
	НаборЗаписей = РегистрыСведений.СтатусСпецификации.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Спецификация.Установить(СпецификацияСсылка);
	НаборЗаписей.Отбор.Период.Установить(ДатаВремя);
	
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		Запись = НаборЗаписей.Добавить();
	Иначе
		
		Запись = НаборЗаписей[0];
		Если Запись.Статус = НовыйСтатус Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запись.Статус = НовыйСтатус;
	Запись.Спецификация = СпецификацияСсылка;
	Запись.Период = ДатаВремя;
	Запись.Автор = ПользователиКлиентСервер.ТекущийПользователь();
	
	НаборЗаписей.Записать();
	
КонецФункции

// Получает из Регистр сведений текущий статус Спецификации
//
// Параметры
//  СпецификацияСсылка - СправочникСсылка.Спецификация - Ссылка на спецификацию для которой получаем статус
Функция ПолучитьСтатусСпецификации(СпецификацияСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусСпецификацииСрезПоследних.Статус
	|ИЗ
	|	РегистрСведений.СтатусСпецификации.СрезПоследних(, Спецификация = &Спецификация) КАК СтатусСпецификацииСрезПоследних";
	
	Запрос.УстановитьПараметр("Спецификация", СпецификацияСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Ответ = Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Ответ = Выборка.Статус;
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

// Возвращает структуру с размерами полотна материала и кромки
//
// Параметры
//  Номенклатура - Справочники.Номенклатура - Номенклатура полотна
//  ТорцеваяЛента - Структура - Структура кромок. 4-ре ссылки на номенклатуру(могут быть пустыми)
Функция ПолучитьРазмерыМатериалов(Номенклатура, ТорцеваяЛента) Экспорт
	
	СтруктураРазмеров = Новый Структура;
	
	СтруктураРазмеров.Вставить("ДлинаПолотна", Номенклатура.ДлинаДетали);
	СтруктураРазмеров.Вставить("ШиринаПолотна", Номенклатура.ШиринаДетали);
	
	Если ЗначениеЗаполнено(ТорцеваяЛента) Тогда 
		
		СтруктураРазмеров.Вставить("ВычитаемоеДляШирины", ТорцеваяЛента.ТорцеваяЛентаСлева.ГлубинаДетали+ТорцеваяЛента.ТорцеваяЛентаСправа.ГлубинаДетали);
		СтруктураРазмеров.Вставить("ВычитаемоеДляВысоты", ТорцеваяЛента.ТорцеваяЛентаСверху.ГлубинаДетали+ТорцеваяЛента.ТорцеваяЛентаСнизу.ГлубинаДетали);
		
	Иначе
		
		СтруктураРазмеров.Вставить("ВычитаемоеДляШирины", 0);
		СтруктураРазмеров.Вставить("ВычитаемоеДляВысоты", 0);
		
	КонецЕсли;
	
	Возврат СтруктураРазмеров;
	
КонецФункции // ПолучитьРазмерыПолотна()

//Получить структуру норматива
//
// Параметры:
//  СсылкаСпецификация  - Документы.Спецификация - Ссылка на спецификацию
//
// Возвращаемое значение:
//   Структура
//
Функция ПолучитьСтруктуруНорматива(Период, Подразделение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Структура = Новый Структура;
	Структура.Вставить("ОборотЗаДень", 0);
	Структура.Вставить("Норматив", 0);
	Структура.Вставить("НормативныйМаксимум", 0);
	Структура.Вставить("КоэффициентСрочности", 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(УправленческийОбороты.СуммаОборотДт, 0) КАК ОборотЗаДень,
	|	ЕСТЬNULL(ПлановыйЛимитСрезПоследних.Норматив, 0) КАК Норматив,
	|	ЕСТЬNULL(ПлановыйЛимитСрезПоследних.НормативныйМаксимум, 0) КАК НормативныйМаксимум,
	|	ЕСТЬNULL(ПлановыйЛимитСрезПоследних.КоэффициентСрочности, 0) КАК КоэффициентСрочности
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Обороты(
	|			НАЧАЛОПЕРИОДА(&Период, ДЕНЬ),
	|			КОНЕЦПЕРИОДА(&Период, ДЕНЬ),
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПоказателиПодразделения),
	|			,
	|			Подразделение = &Подразделение
	|				И Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейПодразделений.СуммаДетали),
	|			,
	|			) КАК УправленческийОбороты,
	|	РегистрСведений.ПлановыйЛимит.СрезПоследних(&Период, Подразделение = &Подразделение) КАК ПлановыйЛимитСрезПоследних";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Структура = Новый Структура;
		Структура.Вставить("ОборотЗаДень", Выборка.ОборотЗаДень);
		Структура.Вставить("Норматив", Выборка.Норматив);
		Структура.Вставить("НормативныйМаксимум", Выборка.НормативныйМаксимум);
		Структура.Вставить("КоэффициентСрочности", Выборка.КоэффициентСрочности);
		
	КонецЕсли;
	
	Возврат Структура;
	
КонецФункции // ПолучитьСтруктуруНорматива()

Функция ПолучитьЗарплатуЦеха(ТаблицаЗначений) Экспорт
	
	ЗарплатаЦеха = 0;
	
	// { Васильев Александр Леонидович [10.10.2013]
	// очень стыдно :(
	// } Васильев Александр Леонидович [10.10.2013]
	
	Для каждого Строка Из ТаблицаЗначений Цикл
		
		Если Строка.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга И Строка.Номенклатура.ЦеховаяЗона <> Перечисления.ЦеховыеЗоны.ВнешниеУслуги Тогда
			ЗарплатаЦеха = ЗарплатаЦеха + Строка.ЗарплатаЦеха;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЗарплатаЦеха;
	
КонецФункции

Функция ВывестиМерныйМатериал(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.Спецификация.ПолучитьМакет("Спецификация");
	ОбластьМерныйМатериалШапка = Макет.ПолучитьОбласть("МерныйМатериалШапка");
	ОбластьМерныйМатериалСтрока = Макет.ПолучитьОбласть("МерныйМатериалСтрока");
	
	// запросами бы...
	
	ТЗМерныйМатериал = Ссылка.МерныйМатериал;
	ТЗКомплектация = Ссылка.Комплектация;
	
	ПечататьШапку = Истина;
	
	ПечататьШапку = ТЗМерныйМатериал.Количество() + ТЗКомплектация.Количество() > 0; // потом корректно сделать
	
	Если ПечататьШапку Тогда
		
		ТабДок.Вывести(ОбластьМерныйМатериалШапка);
		
	КонецЕсли;
	
	Если ТЗМерныйМатериал.Количество() <> 0 Тогда
		
		Для каждого Строка Из ТЗМерныйМатериал Цикл
			ОбластьМерныйМатериалСтрока.Параметры.Заполнить(Строка);
			ОбластьМерныйМатериалСтрока.Параметры.ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаИзмерения;
			ОбластьМерныйМатериалСтрока.Параметры.ЦеховаяЗона = Строка.Номенклатура.ЦеховаяЗона;
			ТабДок.Вывести(ОбластьМерныйМатериалСтрока);
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТЗКомплектация.Количество() <> 0 Тогда
		
		Для каждого Строка Из ТЗКомплектация Цикл
			
			Если Строка.Номенклатура.МестоОбработки = Перечисления.МестоОбработки.Цех Тогда
				ОбластьМерныйМатериалСтрока.Параметры.Заполнить(Строка);
				ОбластьМерныйМатериалСтрока.Параметры.ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаИзмерения;
				ОбластьМерныйМатериалСтрока.Параметры.ЦеховаяЗона = Строка.Номенклатура.ЦеховаяЗона;
				ТабДок.Вывести(ОбластьМерныйМатериалСтрока);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСтоимостьУслугБезВнешних(СписокНоменклатуры) Экспорт
	
	// у дилеров нет прав на все спецификации
	УстановитьПривилегированныйРежим(Истина);
	Структура = Новый Структура;
	
	Запрос= Новый Запрос;
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СписокНоменклатуры.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(СписокНоменклатуры.ЗарплатаЦеха КАК ЧИСЛО(15, 2)) КАК ЗарплатаЦеха,
	|	ВЫРАЗИТЬ(СписокНоменклатуры.РозничнаяСтоимость КАК ЧИСЛО(15, 2)) КАК РозничнаяСтоимость,
	|	ВЫРАЗИТЬ(СписокНоменклатуры.ВнутренняяСтоимость КАК ЧИСЛО(15, 2)) КАК ВнутренняяСтоимость
	|ПОМЕСТИТЬ СписокНоменклатуры
	|ИЗ
	|	&СписокНоменклатуры КАК СписокНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(СписокНоменклатуры.ЗарплатаЦеха, 0)) КАК ЗарплатаЦеха,
	|	СУММА(ЕСТЬNULL(СписокНоменклатуры.РозничнаяСтоимость, 0)) КАК РозничнаяСтоимость,
	|	СУММА(ЕСТЬNULL(СписокНоменклатуры.ВнутренняяСтоимость, 0)) КАК ВнутренняяСтоимость
	|ИЗ
	|	СписокНоменклатуры КАК СписокНоменклатуры
	|ГДЕ
	|	СписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
	|	И СписокНоменклатуры.Номенклатура.ЦеховаяЗона <> ЗНАЧЕНИЕ(Перечисление.ЦеховыеЗоны.ВнешниеУслуги)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Структура.Вставить("ЗарплатаЦеха", Документы.Спецификация.ПолучитьЗарплатуЦеха(СписокНоменклатуры));
	Структура.Вставить("ВнутренняяСтоимость", ?(ЗначениеЗаполнено(Выборка.ВнутренняяСтоимость), Выборка.ВнутренняяСтоимость, 0));
	Структура.Вставить("РозничнаяСтоимость", ?(ЗначениеЗаполнено(Выборка.РозничнаяСтоимость), Выборка.РозничнаяСтоимость, 0));
	
	Возврат Структура;
	
КонецФункции

Функция НайтиНаправляющиеНоменклатура(Подразделение, НоменклатурнаяГруппа, ГлубинаЯщика) Экспорт
	
	ПодразделениеДляНаправляющих = ЛексСервер.ПолучитьОсновноеПроизводство(Подразделение);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	спрНоменклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК спрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураПодразделений КАК НоменклатураПодразделений
	|		ПО (НоменклатураПодразделений.Номенклатура = спрНоменклатура.Ссылка)
	|ГДЕ
	|	спрНоменклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
	|	И спрНоменклатура.ДлинаДетали <= &ДлинаДетали
	|	И НоменклатураПодразделений.Подразделение = &Подразделение
	|	И НоменклатураПодразделений.Доступность
	|
	|УПОРЯДОЧИТЬ ПО
	|	спрНоменклатура.ДлинаДетали УБЫВ";
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("ДлинаДетали", ГлубинаЯщика);
	Запрос.УстановитьПараметр("Подразделение", ПодразделениеДляНаправляющих);
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Если Выборка.Количество() > 0 Тогда
		Возврат Выборка[0].Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьТаблицуМатериалов(МассивСпецификация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСпецификация", МассивСпецификация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Номенклатура,
	|	СУММА(СпецификацияСписокНоменклатуры.Количество) КАК Затребовано
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка В(&МассивСпецификация)
	|	И НЕ СпецификацияСписокНоменклатуры.ЧерезСклад
	|	И СпецификацияСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СформироватьСтрокуМонтажСумма(СпецификацияСсылка) 
	
	Строка = "";
	
	СписокУслуг = Новый Массив;
	СписокУслуг.Добавить(Справочники.Номенклатура.ВыездМастера);
	СписокУслуг.Добавить(Справочники.Номенклатура.ВыездМастераНаСборкуКухни);
	СписокУслуг.Добавить(Справочники.Номенклатура.СборкаИзделия);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокУслуг", СписокУслуг);
	Запрос.УстановитьПараметр("Ссылка", СпецификацияСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СпецификацияСписокНоменклатуры.Номенклатура,
	|	СУММА(СпецификацияСписокНоменклатуры.Количество) КАК Количество,
	|	СУММА(СпецификацияСписокНоменклатуры.ЗарплатаЦеха) КАК ЗарплатаЦеха
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка = &Ссылка
	|	И СпецификацияСписокНоменклатуры.Номенклатура В(&СписокУслуг)
	|	И СпецификацияСписокНоменклатуры.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура
	|ИТОГИ
	|	СУММА(ЗарплатаЦеха)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаИтог.Следующий();
		Строка = "Всего " + ВыборкаИтог.ЗарплатаЦеха + " (";
		
		Выборка = ВыборкаИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			Цена = Формат(Выборка.ЗарплатаЦеха / Выборка.Количество, "ЧДЦ = 2");
			Конкатенация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2 х %3 = %4 ", Выборка.Номенклатура, Цена ,  Выборка.Количество, Выборка.ЗарплатаЦеха);
			Строка = Строка + Конкатенация;
		КонецЦикла;
		Строка = Строка + ")";
	КонецЕсли; 
	
	
	Возврат Строка;
	
КонецФункции

Процедура ПечатьАктДоставкаСборка(ТабДок, Ссылка) Экспорт
	
	Перем Инженер;
	
	ФормСтрока = "Л = ru_RU; ДП = Истина";
	ПарПредмета="рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 0";
	Спецификация = Ссылка;
	ДоговорСсылка = Документы.Спецификация.ПолучитьДоговор(Спецификация);
	
	Макет = Документы.Спецификация.ПолучитьМакет("АктДоставкаСборка");
	Запрос = Новый Запрос;
		Запрос.Текст =
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	докСпецификация.Дата,
	|	докСпецификация.Ссылка,
	|	докСпецификация.Подразделение,
	|	докСпецификация.ДовозОсуществил КАК Экспедитор,
	|	докСпецификация.Подразделение.Организация.ПолноеНаименование КАК ПолноеНаименование,
	|	докСпецификация.Монтажник,
	|	докСпецификация.Технолог КАК Инженер,
	|	Договор.Контрагент КАК ФИОКлиента,
	|	Договор.Офис КАК АдресОфиса,
	|	Договор.Автор КАК Дизайнер,
	|	Договор.Дата КАК ДатаДоговора,
	|	Договор.Номер КАК НомерДоговора,
	|	Договор.СуммаДокумента КАК СуммаДокумента,
	|	докСпецификация.Изделие КАК Изделие,
	|	Договор.Спецификация.АдресМонтажа КАК АдресМонтажа,
	|	Договор.Контрагент.Телефон КАК Телефон,
	|	Договор.Контрагент.ТелефонДополнительный КАК ТелефонДополнительный,
	|	ПРЕДСТАВЛЕНИЕ(Договор.Ссылка) КАК Договор,
	|	докСпецификация.Номер КАК НомерСпецификации,
	|	Договор.Спецификация.КоличествоМетровЛДСП КАК КоличествоМетровЛДСП
	|ИЗ
	|	Документ.Спецификация КАК докСпецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Договор КАК Договор
	|		ПО докСпецификация.Ссылка = Договор.Спецификация
	|ГДЕ
	|	докСпецификация.Ссылка = &Ссылка";
	//Запрос.Текст =
	//
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	Монтаж.Дата,
	//|	Монтаж.Спецификация,
	//|	Монтаж.Номер,
	//|	Монтаж.Подразделение,
	//|	Монтаж.Экспедитор,
	//|	Монтаж.Подразделение.Организация.ПолноеНаименование КАК ПолноеНаименование,
	//|	Монтаж.Монтажник,
	//|	Монтаж.Спецификация.Автор КАК Инженер,
	//|	Договор.Контрагент КАК ФИОКлиента,
	//|	Договор.Офис КАК АдресОфиса,
	//|	Договор.Автор КАК Дизайнер,
	//|	Договор.Дата КАК ДатаДоговора,
	//|	Договор.Номер КАК НомерДоговора,
	//|	Договор.СуммаДокумента КАК СуммаДокумента,
	//|	Монтаж.Спецификация.Изделие КАК Изделие,
	//|	Договор.Спецификация.АдресМонтажа КАК АдресМонтажа,
	//|	Договор.Контрагент.Телефон КАК Телефон,
	//|	Договор.Контрагент.ТелефонДополнительный КАК ТелефонДополнительный,
	//|	ПРЕДСТАВЛЕНИЕ(Договор.Ссылка) КАК Договор,
	//|	Монтаж.Спецификация.Номер КАК НомерСпецификации,
	//|	Договор.Спецификация.КоличествоМетровЛДСП КАК КоличествоМетровЛДСП
	//|ИЗ
	//|	Документ.Монтаж КАК Монтаж
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Договор КАК Договор
	//|		ПО Монтаж.Спецификация = Договор.Спецификация
	//|ГДЕ
	//|	Монтаж.Ссылка = &Ссылка";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если НЕ Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	// ################
	// Доставка
	
	ОбластьТело = Макет.ПолучитьОбласть("Тело");
	
	ОбластьТело.Параметры.Заполнить(Выборка);
	ОбластьТело.Параметры.ДатаДоговора = Формат(Выборка.ДатаДоговора, "ДЛФ=DD");
	ОбластьТело.Параметры.ДатаДоставки = Формат(Выборка.Дата, "ДЛФ=DD");
	ТабДок.Вывести(ОбластьТело);
	
КонецПроцедуры

Функция ПолучитьПараметрыЯщика(СтрокаЯщика, ЕстьРебро) Экспорт
	
	Проем = СтрокаЯщика.ПроемЯщика;
	ВысотаЯщика = СтрокаЯщика.ВысотаЯщика;
	ГлубинаЯщика = СтрокаЯщика.ГлубинаЯщика;
	ВидЯщика = СтрокаЯщика.ВидЯщика;
		
	Если ВидЯщика = Перечисления.ВидыЯщика.Обычный И Проем >= 150 Тогда
		
		СтрокаЯщика.ВысотаБоковойСтороны = ВысотаЯщика;
		СтрокаЯщика.ДлинаБоковойСтороны = ГлубинаЯщика;
		СтрокаЯщика.ДлинаДно = ГлубинаЯщика - 2;
		СтрокаЯщика.ДлинаРебро = ?(ЕстьРебро, ГлубинаЯщика - 32, 0);
		
		Если ЗначениеЗаполнено(СтрокаЯщика.НаправляющиеНоменклатура) 
			И СтрокаЯщика.НаправляющиеНоменклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НаправляющиеШариковыеСДоводчиком Тогда 
			
			СтрокаЯщика.ШиринаБоковойСтороны = Проем - 60; 
			СтрокаЯщика.ШиринаДно = Проем - 30;
			
		Иначе
			
			СтрокаЯщика.ШиринаБоковойСтороны = Проем - 58;
			СтрокаЯщика.ШиринаДно = Проем - 28;
			
		КонецЕсли;
		
	ИначеЕсли ВидЯщика = Перечисления.ВидыЯщика.Тандембокс И Проем >= 279 И ВысотаЯщика >= 86 Тогда
		
		СтрокаЯщика.ШиринаБоковойСтороны = Проем - 97;
		СтрокаЯщика.ШиринаДно = Проем - 87;
		СтрокаЯщика.ДлинаБоковойСтороны = 0;
		СтрокаЯщика.ДлинаДно = ГлубинаЯщика - 5;
		
		Если ВысотаЯщика >= 86 И ВысотаЯщика < 151 Тогда 
			СтрокаЯщика.ВысотаБоковойСтороны = 70;
		ИначеЕсли ВысотаЯщика > 150 И ВысотаЯщика < 201 Тогда 
			СтрокаЯщика.ВысотаБоковойСтороны = 130;
		ИначеЕсли ВысотаЯщика > 200 Тогда 
			СтрокаЯщика.ВысотаБоковойСтороны = 190;	
		КонецЕсли;
		
	ИначеЕсли ВидЯщика = Перечисления.ВидыЯщика.Метабокс И Проем >= 213 И ВысотаЯщика >= 86 Тогда
		
		СтрокаЯщика.ШиринаБоковойСтороны = Проем - 30; 
		СтрокаЯщика.ШиринаДно = Проем - 30;
		СтрокаЯщика.ДлинаБоковойСтороны = 0;
		СтрокаЯщика.ДлинаДно = ГлубинаЯщика - 5;
		
		Если ВысотаЯщика > 86 И ВысотаЯщика < 151 Тогда 
			СтрокаЯщика.ВысотаБоковойСтороны = 80; 
		ИначеЕсли ВысотаЯщика > 150 И ВысотаЯщика < 201 Тогда 
			СтрокаЯщика.ВысотаБоковойСтороны = 120; 
		ИначеЕсли ВысотаЯщика > 200 Тогда 
			СтрокаЯщика.ВысотаБоковойСтороны = 200; 	
		КонецЕсли;
		
	КонецЕсли;	
		
КонецФункции
