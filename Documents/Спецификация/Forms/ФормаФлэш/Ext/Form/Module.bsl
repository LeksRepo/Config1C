
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Свойство("СпецификацияСсылка") Тогда
		СпецификацияСсылка = Параметры.СпецификацияСсылка;
	КонецЕсли;
	
	ОпределительФлеш = "";
	
	Если Параметры.Свойство("ХранимыйФайл") Тогда
		
		ОпределительФлеш = Параметры.ХранимыйФайл;
		
	КонецЕсли;
	
	РаскройГотов = Ложь;
	
	Если ОпределительФлеш = "КривойПил" Тогда
		
		ИмяHTML = ЛексСервер.ПолучитьИмяХТМЛ(Справочники.Файлы.КривойПилHtml);
		СтрокаДляФлэш = Параметры.СтрокаКривогоПила;
		
	ИначеЕсли ОпределительФлеш = "НовыйРаскрой" Тогда
		
		//Параметры.ВидОтображения
		//1 - Сохраняем флэшку в картинку, при проведении спецификации
		//2 - Обычный просмотр флэшки, до проведения
		ИмяHTML = ЛексСервер.ПолучитьИмяХТМЛ(Справочники.Файлы.НовыйРаскройHtml);
		СтрокаДляФлэш = Параметры.ВидОтображения + Параметры.СтрокаНовогоРаскрояЛДСП;
		
		РаскройГотов = Параметры.ВидОтображения = "2";
		
		ЭтаФорма.Ширина = ?(РаскройГотов, 150, 51);
		ЭтаФорма.Высота = ?(РаскройГотов, 60, 15);
		Элементы.ХТМЛ.ТолькоПросмотр = НЕ РаскройГотов;
		
	ИначеЕсли ОпределительФлеш = "Редактор3д" Тогда
		
		ИмяHTML = ЛексСервер.ПолучитьИмяХТМЛ(Справочники.Файлы.Редактор3DHtml);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПредупредитьНаКлиенте()
	Строка = Новый ФорматированнаяСтрока("Обновите справочник файлов!",,,,"e1cib/command/ОбщаяКоманда.СинхронизацияФайлов");
	Предупреждение(Строка);	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	url = ЛексКлиент.ПутьHTML(ИмяHTML);

	Если url <> "" Тогда
		Попытка
			Элементы.ХТМЛ.Документ.url = url;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			Отказ = Истина;
		КонецПопытки;
	Иначе
		ПредупредитьНаКлиенте();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ХТМЛПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ПолученнаяСтрока = Элементы.ХТМЛ.Документ.getElementById("output").tag;
	
	Если ОпределительФлеш = "Редактор3д" Тогда
		
		Элементы.ХТМЛ.ТолькоПросмотр = Ложь;
		Чтение = Новый ЧтениеXML;
		//ПолученнаяСтрока = "<TegsList xmlns=""masterleks.ru/Flash1C"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""><Actions xsi:type=""xs:string"">Save</Actions><Param xsi:type=""xs:string"">Тут Будет Строка С Данными Для Флэшки</Param><ItemList xsi:type=""xs:ItemType""><Item MatLink=""ed82e7f8-2adc-11e2-1f9d-0025903c4dd4"" Mat2Link="""" LengthDetails=""300"" WidthDetails=""500"" R1=""0"" R2=""0"" R3=""0"" R4=""0"" KromUp=""1c84aba4-2721-11e3-5688-0025903c4dd4"" KromDown=""7200adc4-2723-11e3-5688-0025903c4dd4"" KromLeft=""5c17374a-d78b-11e0-9970-1c6f652130b7"" KromRight="""" /></ItemList></TegsList>";
		Чтение.УстановитьСтроку(ПолученнаяСтрока);
		Чтение.Прочитать();
		ОбъектХДТО = ФабрикаXDTO.ПрочитатьXML(Чтение);
		Команда = ОбъектХДТО.Actions;
		Параметр = ОбъектХДТО.Param;
		ЗапросКромок = Ложь;
		
		Если НЕ ТипЗнч(ОбъектХДТО.ItemList) = Тип("ОбъектXDTO") и ЗначениеЗаполнено(ОбъектХДТО.ItemList) Тогда
			
			ЗапросКромок = Истина;
			
		КонецЕсли;
		
		Если Команда = "Init" Тогда
		
			ОбъектХДТО.Param = "New";
			Запись = Новый ЗаписьXML;
			Запись.УстановитьСтроку(); 
			Запись.ЗаписатьОбъявлениеXML();
			ФабрикаXDTO.ЗаписатьXML(Запись, ОбъектХДТО);
			Стр = Запись.Закрыть();
			
		ИначеЕсли Команда = "GetMat" или Команда = "GetKrom" Тогда
			
			Стр = ПолучитьОбъектХДТО(Команда, Параметр, ЗапросКромок);
			
		ИначеЕсли Команда = "Save" Тогда
			
			СтруктураОповещения = Новый Структура;
			СтруктураОповещения.Вставить("Строка3DРедактор", "Фурнитура");
			СтруктураОповещения.Вставить ("АдресТаблицы", "АдресТаблицы");
			ОповеститьОВыборе(СтруктураОповещения);
			
		КонецЕсли;
		
		Элементы.ХТМЛ.Документ.getElementById("input").tag = Стр;
		Элементы.ХТМЛ.Документ.getElementById("input").Click();
			
	Иначе
		
		Если Найти(ПолученнаяСтрока, "save") > 0 Тогда
			
			РаскройГотов = Истина;
			Закрыть(ПолученнаяСтрока);
			Возврат;
			
		КонецЕсли;
		
		Роспил = Найти(СтрокаДляФлэш, "%РОСПИЛ%") > 0;
		Лекс = Найти(СтрокаДляФлэш, "%ЛЕКС%") > 0;
		
		РабочийКаталог = ФайловыеФункцииСлужебныйКлиент.ВыбратьПутьККаталогуДанныхПользователя();
		Код = "";
		
		Если Роспил Тогда
			
			Код = "ЛоготипРоспил";
			
		ИначеЕсли Лекс Тогда
			
			Код = "ЛоготипЛекс";
			
		КонецЕсли;
		
		ПутьКИзображению = РабочийКаталог + Код + ".jpg";
		ФайлНаДиске = Новый Файл(ПутьКИзображению);
		
		Если ФайлНаДиске.Существует() Тогда
			
			ПутьЛоготипа = ПутьКИзображению;
			
		Иначе
			
			ПутьЛоготипа = "";
			
		КонецЕсли;
		
		ПутьЛоготипа = ЛексКлиентСервер.ПеревестиСтрокуВКодыСимволов(ПутьЛоготипа);
		
		Если Лекс Тогда
			
			СтрокаДляФлэш = СтрЗаменить(СтрокаДляФлэш, "%ЛЕКС%", ПутьЛоготипа);
			
		ИначеЕсли Роспил Тогда
			
			СтрокаДляФлэш = СтрЗаменить(СтрокаДляФлэш, "%РОСПИЛ%", ПутьЛоготипа);
			
		КонецЕсли;
		
		Элементы.ХТМЛ.Документ.getElementById("input").tag = СтрокаДляФлэш;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьОбъектХДТО(Команда, СправочникСсылка, ЗапросКромок)
	
	ТипСписокТегов = ФабрикаXDTO.Тип("masterleks.ru/Flash1C", "TegsList");
	ТипСписокМатериалов = ФабрикаXDTO.Тип("masterleks.ru/Flash1C", "ItemList");
	ТипЭлементНоменклатуры = ФабрикаXDTO.Тип("masterleks.ru/Flash1C", "ItemType");
	ТипКоманды = ФабрикаXDTO.Тип("masterleks.ru/Flash1C", "Actions");
	СписокТегов = ФабрикаXDTO.Создать(ТипСписокТегов);
	СписокМатериалов = ФабрикаXDTO.Создать(ТипСписокМатериалов);
	СписокТегов = ФабрикаXDTO.Создать(ТипСписокТегов);
	СписокНоменклатуры = ФабрикаXDTO.Создать(ТипСписокМатериалов);

	Если ЗначениеЗаполнено(СправочникСсылка) Тогда
		
		Если Команда = "GetMat" Тогда
			
			НоменклатурныеГруппы = Справочники.НоменклатурныеГруппы;
			НомГруппа = НоменклатурныеГруппы.ПустаяСсылка();
			
			НовыйGUID = Новый УникальныйИдентификатор(СправочникСсылка); 
			Ссылка = Справочники.ВидыДеталей.ПолучитьСсылку(НовыйGUID);
			
			НомГруппа = Ссылка.Номенклатура;
			
			СписокМатериалов = ВыполнитьЗапросПоНоменклатурнойГруппе(НомГруппа, ТипЭлементНоменклатуры, СписокМатериалов);
			СписокТегов.ItemList = СписокМатериалов;
			СписокТегов.Actions = Команда;
			
		ИначеЕсли Команда = "GetKrom" Тогда
			
			НоменклатурныеГруппы = Справочники.НоменклатурныеГруппы;
			НомГруппа = НоменклатурныеГруппы.ПустаяСсылка();
			
			НовыйGUID = Новый УникальныйИдентификатор(СправочникСсылка);
			
			Если ЗапросКромок Тогда
				
				НомГруппа = Справочники.НоменклатурныеГруппы.ПолучитьСсылку(НовыйGUID);
				СписокМатериалов = ВыполнитьЗапросПоНоменклатурнойГруппе(НомГруппа, ТипЭлементНоменклатуры, СписокМатериалов);
				СписокТегов.ItemList = СписокМатериалов;
				СписокТегов.Actions = Команда
				
			Иначе
			
				Ссылка = Справочники.ВидыДеталей.ПолучитьСсылку(НовыйGUID);
						
				Для каждого НомГруппа Из Ссылка.СписокПодходящихКромок Цикл
					
					ИспользуемаяНомГруппа = НомГруппа.НоменклатурнаяГруппа;
					Название = ИспользуемаяНомГруппа.Наименование;
				
					ЭлементНоменклатуры = ФабрикаXDTO.Создать(ТипЭлементНоменклатуры);
					ЭлементНоменклатуры.Name = Название;
					СтрокаСсылка = ИспользуемаяНомГруппа.Ссылка.УникальныйИдентификатор();
					ЭлементНоменклатуры.Link = Строка(СтрокаСсылка);
					
					СписокМатериалов.Item.Добавить(ЭлементНоменклатуры);
				
				КонецЦикла;
			
			КонецЕсли;
			
			СписокТегов.ItemList = СписокМатериалов;
			СписокТегов.Actions = Команда;
			
		КонецЕсли;
		
	Иначе
		
		ВидыДеталей = Справочники.ВидыДеталей;
		ВыборкаВидовДеталей = ВидыДеталей.Выбрать();
		
		Пока ВыборкаВидовДеталей.Следующий() Цикл
			
			Название = ВыборкаВидовДеталей.Наименование;
			
			ЭлементНоменклатуры = ФабрикаXDTO.Создать(ТипЭлементНоменклатуры);
			ЭлементНоменклатуры.Name = Название;
			СтрокаСсылка = ВыборкаВидовДеталей.Ссылка.УникальныйИдентификатор();
			ЭлементНоменклатуры.Link = Строка(СтрокаСсылка);
			
			СписокМатериалов.Item.Добавить(ЭлементНоменклатуры);
		
		КонецЦикла;
		
		СписокТегов.ItemList = СписокМатериалов;
		СписокТегов.Actions = "GetMat";
		
	КонецЕсли;
		
		Запись = Новый ЗаписьXML;
		Запись.УстановитьСтроку(); 
		Запись.ЗаписатьОбъявлениеXML();
		ФабрикаXDTO.ЗаписатьXML(Запись, СписокТегов);
		Стр = Запись.Закрыть();
		Возврат Стр;
	
КонецФункции

&НаСервере
Функция ВыполнитьЗапросПоНоменклатурнойГруппе(НомГруппа, ТипЭлементНоменклатуры, СписокМатериалов)
	
	Если НомГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка() Тогда
		
		ЭлементНоменклатуры = ФабрикаXDTO.Создать(ТипЭлементНоменклатуры);
		ЭлементНоменклатуры.Name = "";
		ЭлементНоменклатуры.ShortName = "";
		СтрокаСсылка = "";
		ЭлементНоменклатуры.Link = СтрокаСсылка;
		ЭлементНоменклатуры.DepthDetails = 0;
		ЭлементНоменклатуры.WidthDetails = 0;
		ЭлементНоменклатуры.LengthDetails = 0;
		Цвет = "";
		ЭлементНоменклатуры.Color = Цвет;
		
		СписокМатериалов.Item.Добавить(ЭлементНоменклатуры);
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НомГруппа);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка,
		|	Номенклатура.Наименование,
		|	Номенклатура.ГлубинаДетали,
		|	Номенклатура.ДлинаДетали,
		|	Номенклатура.ШиринаДетали,
		|	Номенклатура.Цвет,
		|	Номенклатура.КраткоеНаименование
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
		|	И Номенклатура.Базовый";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		
		Пока Выборка.Следующий() Цикл
			
			ЭлементНоменклатуры = ФабрикаXDTO.Создать(ТипЭлементНоменклатуры);
			ЭлементНоменклатуры.Name = Выборка.Наименование;
			ЭлементНоменклатуры.ShortName = Выборка.КраткоеНаименование;
			СтрокаСсылка = Строка(Выборка.Ссылка.УникальныйИдентификатор());
			ЭлементНоменклатуры.Link = СтрокаСсылка;
			ЭлементНоменклатуры.DepthDetails = Выборка.ГлубинаДетали;
			ЭлементНоменклатуры.WidthDetails = Выборка.ШиринаДетали;
			ЭлементНоменклатуры.LengthDetails = Выборка.ДлинаДетали;
			Цвет = Строка(Выборка.Цвет);
			ЭлементНоменклатуры.Color = Цвет;
			
			СписокМатериалов.Item.Добавить(ЭлементНоменклатуры);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокМатериалов;
			
КонецФункции

&НаСервере
Функция СоздатьСписокМатериалов(Материал)
	
	ТипЭлементСписка = ФабрикаXDTO.Тип("masterleks.ru/Flash1C", "ItemType");
	ЭлементСписка = ФабрикаXDTO.Создать(ТипЭлементСписка);
	ЭлементСписка.Name = Материал;
	Возврат ЭлементСписка;
	
КонецФункции // СоздатьСписокМатериалов()

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Отказ = НЕ РаскройГотов;
	
КонецПроцедуры

