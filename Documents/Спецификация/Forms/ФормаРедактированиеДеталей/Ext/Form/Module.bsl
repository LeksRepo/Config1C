////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ОтправитьВФлэш(ОтветОтФлэш)
	
	Клик = Ложь;
	Элемент = Элементы.Флэш.Документ.getElementById("back");
	Если Элемент <> Неопределено Тогда
		Элемент.tag = ОтветОтФлэш;
		Элемент.click();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокуОтФлэш()
	
	Результат = Новый Структура;
	
	ПолученоОтФлэш = Элементы.Флэш.Документ.getElementById("forw").tag;
	Результат.Вставить("Команда" ,Лев(ПолученоОтФлэш, 4));
	Результат.Вставить("ПолученоОтФлэш", Прав(ПолученоОтФлэш, СтрДлина(ПолученоОтФлэш)-5));
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьСтрокуКантов(ВидМебельнойКромки)
	
	СписокНоменклатурныхГрупп = Новый СписокЗначений;
	Строка = "";
	Справочник = Справочники.НоменклатурныеГруппы;
	
	СписокНоменклатурныхГрупп.Добавить(Справочник.НайтиПоНаименованию(ВидМебельнойКромки));
		
	МассивЭлементов = ЛексСервер.ОтборНоменклатурныхГруппРедактор(СписокНоменклатурныхГрупп, Подразделение);
	
	ПодЗаказВариант = Новый Массив;
	ПодЗаказВариант.Добавить(Ложь);
	ПодЗаказВариант.Добавить(Истина);
	
	Для Каждого Заказ Из ПодЗаказВариант Цикл
		Для каждого Элемент Из МассивЭлементов Цикл
			Если Элемент.ПодЗаказ = Заказ Тогда
				
				РадиусСкругления = ?(Элемент.Ссылка.ГлубинаДетали < 1, 20, 30);
				Строка = Строка + Элемент.Ссылка.КраткоеНаименование + "@" + Элемент.Ссылка.Наименование + "_" + Элемент.Ссылка.Код + "_" + ?(Элемент.ПодЗаказ,1,0) + "_" + РадиусСкругления + "|";
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Строка = Лев(Строка,СтрДлина(Строка)-1);
	
	Возврат Строка;
	
КонецФункции

&НаСервере
Функция ПолучитьНазванияГравировок(Родитель)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Родитель.Наименование = &Родитель";
	
	Строка = "";
	Запрос.Параметры.Вставить("Родитель", Родитель);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Строка = Строка + Выборка.Ссылка.Наименование + "@" + Выборка.Ссылка.Код + "|";
		
	КонецЦикла;
	
	Строка = Лев(Строка,СтрДлина(Строка)-1);
	
	Возврат Строка;
	
КонецФункции

&НаСервере
Функция ПолучитьНазванияПапокГравировок()
	
	Строка 			= "";
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= 
	"ВЫБРАТЬ
	|	Номенклатура.Родитель.Наименование КАК Родитель
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.Гравировка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура.Родитель.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Родитель";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Строка = Строка + Выборка.Родитель + "|";
		
	КонецЦикла;
	
	Строка = Лев(Строка,СтрДлина(Строка)-1);
	
	Возврат Строка;
	
КонецФункции

&НаКлиенте
Функция ПолучитьСтрокуШаблонов(Строка)
	
	СтрокаШаблонов 	= "";
	НомСтр 					= Лев(Строка,СтрДлина(Строка)-1);
	
	Для Каждого Деталь Из СписокДеталей Цикл
		
		Если ЗначениеЗаполнено(Деталь.СтрокаДляФлэш) Тогда
			
			Если Деталь.ПолучитьИдентификатор() = Число(НомСтр) Тогда 
				
					СтрокаШаблонов = Деталь.СтрокаДляФлэш;
					
			КонецЕсли;
			
		КонецЕсли;
			
	КонецЦикла;
	
	Возврат СтрокаШаблонов;
	
КонецФункции

&НаКлиенте
Функция ВернутьСписокДеталей()
	
	СтрокаДеталей = "";
	
	Для каждого Деталь Из СписокДеталей Цикл
		
		Если ЗначениеЗаполнено(Деталь.СтрокаДляФлэш) Тогда
			
			СтрокаДеталей = СтрокаДеталей + Строка(Деталь.ПолучитьИдентификатор()) + "L_" + Деталь.ШиринаДетали + " x " + Деталь.ВысотаДетали + "|";
			
		КонецЕсли;
		
	КонецЦикла;
	
	// удаление последнего символа
	СтрокаДеталей = Лев(СтрокаДеталей, СтрДлина(СтрокаДеталей)-1);
	
	Возврат СтрокаДеталей;
	
КонецФункции

&НаКлиенте
Процедура ПредупредитьНаКлиенте() 
	Строка = Новый ФорматированнаяСтрока("Обновите справочник файлов!",,,,"e1cib/command/ОбщаяКоманда.СинхронизацияФайлов");
	Предупреждение(Строка);	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Заглушка = Истина;
	Элементы.Флэш.Доступность = НЕ ТолькоПросмотр;
	
	//ЭтаФорма.Модифицированность = Истина;
	//
	//url = ЛексКлиент.ПутьHTML(ИмяHTML);
	//
	//Если url <> "" Тогда
	//	Попытка
	//		Элементы.Флэш.Документ.url = "";
	//		Элементы.Флэш.Документ.url = url;
	//	Исключение
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	//		Отказ = Истина;
	//	КонецПопытки;
	//Иначе
	//	ПредупредитьНаКлиенте();
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	Если Параметры.Свойство("АдресТаблицы") И ЭтоАдресВременногоХранилища(Параметры.АдресТаблицы) Тогда
		СписокДеталей.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресТаблицы));
	КонецЕсли;
	
	ЗакрыватьПриВыборе = Ложь;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	СтрокаДляФлэш = Параметры.СтрокаДляРедактирования;
	Подразделение = Параметры.Подразделение;
	ИмяHTML = ЛексСервер.ПолучитьИмяХТМЛ(Справочники.Файлы.РедакторHtml);
	
	ДанныеДетали = ПолучитьДанныеДетали(Параметры.ВидДетали);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ТолькоПросмотр Тогда
	
		Режим 	= РежимДиалогаВопрос.ДаНетОтмена;
		Текст 	= "Сохранить изменения?";
		Ответ 	= Вопрос(Текст, Режим, 0);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			ОтправитьВФлэш("save");
			ОтФлэшСтруктура 	= ПолучитьСтрокуОтФлэш();
			ПолученоОтФлэш 	= ОтФлэшСтруктура.ПолученоОтФлэш;
			
			Если ПолученоОтФлэш = "error☻" Тогда
				
				Режим 	= РежимДиалогаВопрос.ОК;
				Текст 	= "Изменения не могут быть сохранены.";
				Ответ 	= Вопрос(Текст, Режим, 0);
				
				Если Ответ = КодВозвратаДиалога.ОК Тогда
					
					Отказ = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			
			Модиицированность 		= Ложь;
			СтандартнаяОбработка 	= Ложь;
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			
			Отказ = Истина;
			
		КонецЕсли;
		
	Иначе
		
		Модифицированность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ФлэшПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Модифицированность = Истина;
	
	ОтФлэшСтруктура = ПолучитьСтрокуОтФлэш();
	Команда = ОтФлэшСтруктура.Команда;
	ПолученоОтФлэш = ОтФлэшСтруктура.ПолученоОтФлэш;
	
	Если Команда = "kant" Тогда
		
		Если ДанныеДетали.НомГруппыКромка.Количество() > 0 Тогда
			
			Стр = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ДанныеДетали.НомГруппыКромка, "|");
			ОтправитьВФлэш("kant☻"+Стр);
			
		КонецЕсли;	
						
	ИначеЕсли Команда = "knam" Тогда
		
		ОтправитьВФлэш("knam☻"+ПолучитьСтрокуКантов(ПолученоОтФлэш));
				
	ИначеЕсли Команда = "load" Тогда
		
		ОтправитьВФлэш("load☻"+СтрокаДляФлэш);
			
	ИначеЕсли Команда = "grav" и ДанныеДетали.ЭтоСтекло Тогда
		
		НазванияПапок = ПолучитьНазванияПапокГравировок();
		ОтправитьВФлэш("grav☻"+ НазванияПапок);
		
	ИначеЕсли Команда = "gnam" Тогда
			
		ОтправитьВФлэш("gnam☻"+ПолучитьНазванияГравировок(ПолученоОтФлэш));
			
	ИначеЕсли Команда = "list" Тогда
			
		ОтправитьВФлэш("list☻" + ВернутьСписокДеталей());
		
	ИначеЕсли Команда = "getd" Тогда
		
		ОтправитьВФлэш("getd☻" + ПолучитьСтрокуШаблонов(ПолученоОтФлэш));
		
	ИначеЕсли Команда = "prin" Тогда
		
		Модифицированность = Ложь;
		ОповеститьОВыборе("prin☻" + ПолученоОтФлэш);
			
	ИначеЕсли Команда = "save" Тогда
		
		Модифицированность = Ложь;
		
		Если НЕ ТолькоПросмотр Тогда
			ОповеститьОВыборе(ПолученоОтФлэш);
		КонецЕсли;	
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьХТМЛ(Команда)
	
	Заглушка = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ФлэшДокументСформирован(Элемент)
	
	ЭтаФорма.Модифицированность = Истина;
	
	url = ЛексКлиент.ПутьHTML(ИмяHTML);
	
	Если url <> "" Тогда
		Попытка
			Элементы.Флэш.Документ.url = "";
			Элементы.Флэш.Документ.url = url;
		Исключение
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			//Отказ = Истина;
		КонецПопытки;
	Иначе
		ПредупредитьНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ 

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

&НаСервереБезКонтекста
Функция ПолучитьДанныеДетали(ТипДетали)
	
	Стр = Новый Структура;
	
	НомГруппыКромка = Новый СписокЗначений;
	
	Для Каждого Эл Из ТипДетали.НоменклатурныеГруппы Цикл
		
		Если Эл.ПолеВыбора = "КантК"
		 ИЛИ Эл.ПолеВыбора = "Кромка045"
		 ИЛИ Эл.ПолеВыбора = "Кромка2"
		 ИЛИ Эл.ПолеВыбора = "Окантовка" Тогда
		
		 	НомГруппыКромка.Добавить(Эл.Группа)
			
		КонецЕсли;
			
	КонецЦикла;	
	
	Стр.Вставить("НомГруппыКромка", НомГруппыКромка);
	Стр.Вставить("ЭтоСтекло", ТипДетали.ЭтоСтекло);
	
	Возврат Стр;
	
КонецФункции

