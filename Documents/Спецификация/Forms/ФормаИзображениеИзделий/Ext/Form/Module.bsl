
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НовыйПросмотр = Параметры.НовыйПросмотр;
	
	Если НовыйПросмотр Тогда
		ПриСозданииНовая(Параметры);
	Иначе	
		ПриСозданииСтарая(Параметры);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НовыйПросмотр Тогда
		ПриОткрытииНовая();
	Иначе	
		ПриОткрытииСтарая();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииСтарая(Параметры) 
	
	СписокИзображений = Параметры.СписокИзображений;
	КоличествоИзображений = СписокИзображений.Количество();
	ДобавляемыеРеквизиты = Новый Массив;
	
	Если КоличествоИзображений > 0 Тогда
		ПоследнийНомерКартинки = 1;
		КоличествоГрупп = Цел(СписокИзображений.Количество()/5) + 1;
		Для Индекс = 1 По КоличествоГрупп Цикл
			НовыйЭлемент = Элементы.Добавить("ГруппаИзображений" +Индекс, Тип("ГруппаФормы"), ЭтаФорма);
			НовыйЭлемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
			НовыйЭлемент.Отображение = ОтображениеОбычнойГруппы.Нет;
			НовыйЭлемент.ОтображатьЗаголовок = Ложь;
			НовыйЭлемент.РастягиватьПоГоризонтали = Истина;
			
			Для ИндексКартинки = ПоследнийНомерКартинки По КоличествоИзображений Цикл
				
				НомерКартинки = СписокИзображений[ИндексКартинки - 1].Значение;
				Если НомерКартинки/Индекс <= 5 Тогда	
					НовыйЭлементКартинки = Элементы.Добавить("Изображение" +НомерКартинки, Тип("ПолеФормы"), Элементы["ГруппаИзображений" +Индекс]);
					
					Реквизит = Новый РеквизитФормы("Картинка" + НомерКартинки, Новый ОписаниеТипов("Строка"));
					ДобавляемыеРеквизиты.Очистить();
					ДобавляемыеРеквизиты.Добавить(Реквизит);
					ИзменитьРеквизиты(ДобавляемыеРеквизиты);
					
					НовыйЭлементКартинки.ПутьКДанным = "Картинка" + НомерКартинки;
					НовыйЭлементКартинки.Вид = ВидПоляФормы.ПолеКартинки;
					НовыйЭлементКартинки.РазмерКартинки = РазмерКартинки.Пропорционально;
					НовыйЭлементКартинки.Заголовок = СписокИзображений[ИндексКартинки - 1].Представление;
					НовыйЭлементКартинки.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
					НовыйЭлементКартинки.РастягиватьПоВертикали = Ложь;
					НовыйЭлементКартинки.РастягиватьПоГоризонтали = Истина;
					НовыйЭлементКартинки.Ширина = 70;
					НовыйЭлементКартинки.Высота = 10;
					
					Если НомерКартинки/Индекс = 5 Тогда	
						ПоследнийНомерКартинки = НомерКартинки +1;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииСтарая()
	
	Для Индекс = 1 По КоличествоИзображений Цикл
		ЭлементФормы = Элементы["Изображение" +Индекс];
		Если ЗначениеЗаполнено(ЭлементФормы.Заголовок) Тогда
			АдресВХранилище = "";
			ИмяФайла = ЭлементФормы.Заголовок;
			ФайлИзображения = Новый Файл(ИмяФайла);
			Если ФайлИзображения.Существует() Тогда
				ПоместитьФайл(АдресВХранилище, ИмяФайла, , Ложь);
				Этаформа["Картинка" +Индекс]  = АдресВХранилище;
			КонецЕсли;
			Элементы["Изображение" +Индекс].Заголовок = "Изделие" + Индекс;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНовая(Параметры) 
	
	//СписокИзделий.Загрузить(Параметры.Детали.Выгрузить(,"Изделие, ГлубинаИзделия, ШиринаИзделия, ВысотаИзделия, АдресКартинки"));
	СписокИзделий.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресТаблицы));
	КоличествоИзделий = СписокИзделий.Количество();
	ДобавляемыеРеквизиты = Новый Массив;
	                                                                                                   
	Если КоличествоИзделий > 0 Тогда
		Элементы.ГруппаВерх.Видимость = Истина;
		Элементы.ГруппаНиз.Видимость = Истина;
		Для Каждого Строка Из СписокИзделий Цикл
			Если Строка.Изделие.РасположениеКороба = Перечисления.Стороны.Сверху
				ИЛИ Строка.Изделие.РасположениеКороба = Перечисления.Стороны.ПоЦентру Тогда
				Группа = Элементы.ГруппаВерх;
			ИначеЕсли Строка.Изделие.РасположениеКороба = Перечисления.Стороны.Снизу Тогда
				Группа = Элементы.ГруппаНиз;
			КонецЕсли;
			НомерСтроки = Строка.ПолучитьИдентификатор();
			
			НовыйЭлементКартинки = Элементы.Добавить("Изображение" + НомерСтроки, Тип("ПолеФормы"), Группа);
			Реквизит = Новый РеквизитФормы("Изображение" + НомерСтроки, Новый ОписаниеТипов("Строка"));
			ДобавляемыеРеквизиты.Очистить();
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			
			НовыйЭлементКартинки.ПутьКДанным = "Изображение" + НомерСтроки;
			НовыйЭлементКартинки.Вид = ВидПоляФормы.ПолеКартинки;
			НовыйЭлементКартинки.РазмерКартинки = РазмерКартинки.Пропорционально;
			НовыйЭлементКартинки.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
			НовыйЭлементКартинки.РастягиватьПоВертикали = Ложь;
			НовыйЭлементКартинки.РастягиватьПоГоризонтали = Истина;
			НовыйЭлементКартинки.Ширина = 70;
			НовыйЭлементКартинки.Высота = 10;
			НовыйЭлементКартинки.РазрешитьНачалоПеретаскивания = Истина;
			НовыйЭлементКартинки.РазрешитьПеретаскивание = Истина;
			НовыйЭлементКартинки.УстановитьДействие("НачалоПеретаскивания", "НачалоПеретаскиванияКартинок");
			НовыйЭлементКартинки.УстановитьДействие("Перетаскивание", "ПеретаскиваниеКартинок");
			НовыйЭлементКартинки.УстановитьДействие("ПроверкаПеретаскивания", "ПроверкаПеретаскиванияКартинок");
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииНовая()
	
	Для Каждого Строка Из СписокИзделий Цикл
		АдресВХранилище = "";
		ИмяФайла = Строка.АдресКартинки;
		ФайлИзображения = Новый Файл(ИмяФайла);
		НашЭлемент = "Изображение" + Строка.ПолучитьИдентификатор();
		Если ФайлИзображения.Существует() Тогда
			ПоместитьФайл(АдресВХранилище, ИмяФайла, , Ложь, ЭтаФорма.УникальныйИдентификатор);
			Этаформа[НашЭлемент]  = АдресВХранилище;
		КонецЕсли;
		//Элементы["Изображение" + Строка.ПолучитьИдентификатор()].Заголовок = Строка(Строка.Изделие)+"(" + Строка.ГлубинаИзделия + ";" + Строка.ШиринаИзделия + ";" + Строка.ВысотаИзделия + ")";
		Строка.ЭлементФормы = НашЭлемент;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НачалоПеретаскиванияКартинок(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ИзображениеИсточник = Элемент.Имя; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПеретаскиваниеКартинок(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	Если Элемент.Родитель = Элементы[ИзображениеИсточник].Родитель Тогда
		
		ИзображениеПриемник = ЭтаФорма[Элемент.Имя];
		ЭтаФорма[Элемент.Имя] = ЭтаФорма[ИзображениеИсточник];
		ЭтаФорма[ИзображениеИсточник] = ИзображениеПриемник;
		                                   
		Для Каждого Строка Из СписокИзделий Цикл
			Если Строка.ЭлементФормы = ИзображениеИсточник Тогда
				Строка.ЭлементФормы = Элемент.Имя;
			ИначеЕсли Строка.ЭлементФормы = Элемент.Имя Тогда
				Строка.ЭлементФормы = ИзображениеИсточник;
			КонецЕсли;
		КонецЦикла;
		
		//ТекущееИмя = Элемент.Имя;
		//Элемент.Имя = ИзображениеИсточник;
		//Элементы[ИзображениеИсточник].Имя = ТекущееИмя;
		
		//ТекущийЗаголовок = Элемент.Заголовок;
		//Элемент.Заголовок = Элементы[ИзображениеИсточник].Заголовок;
		//Элементы[ИзображениеИсточник].Заголовок = ТекущийЗаголовок;
		
	Иначе
		
		Предупреждение("Невозможно менять короба разных уровней");
		
	КонецЕсли;
	
	//Элемент.
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПеретаскиванияКартинок(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Порядок = 0;
	Для Каждого НашЭлемент Из Элементы Цикл
		Если ТипЗнч(НашЭлемент) = Тип("ПолеФормы") Тогда
			
			Строки = СписокИзделий.НайтиСтроки(Новый Структура("ЭлементФормы", НашЭлемент.Имя));
			
			Если Строки.Количество() = 1 Тогда
				
				Строки[0].Порядок = Порядок;
				
			КонецЕсли;
			Порядок = Порядок + 1;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаДетали = ВыгрузитьНужнуюТаблицуВХранилище();
	Если ТаблицаДетали <> Неопределено Тогда 
		ОповеститьОВыборе(ТаблицаДетали);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьНужнуюТаблицуВХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(СписокИзделий.Выгрузить());
	
КонецФункции
