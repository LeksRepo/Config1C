////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Функция СохранитьИИзменитьСтатус(НовыйСтатус)
	
	ПараметрыЗаписи = Новый Структура;
	
	ПараметрыЗаписи.Вставить("НовыйСтатус", НовыйСтатус);
	Записать(ПараметрыЗаписи);
	
	Закрыть();
	
КонецФункции

&НаКлиенте
Функция ОбновитьСкидки()
	
	Если Объект.Дилерский Тогда
		
		СтруктураСкидок 					= ЛексСервер.ПолучитьСкидкуКонтрагента(Объект.Подразделение, Объект.Дата, Объект.Контрагент);
		Объект.СкидкаНаУслуги 			= СтруктураСкидок.СкидкаНаУслуги;
		Объект.СкидкаНаМатериалы 	= СтруктураСкидок.СкидкаНаМатериалы;
		
	КонецЕсли
	
КонецФункции // ОбновитьСкидки()

&НаСервереБезКонтекста
Функция ПолучитьОсновноеПроизводство(Подразделение)
	
	Возврат ЛексСервер.ПолучитьОсновноеПроизводство(Подразделение);
	
КонецФункции

&НаСервере
Функция ВыгрузитьНужнуюТаблицуВХранилище(ТабличнаяЧасть)
	
	Возврат ПоместитьВоВременноеХранилище(ТабличнаяЧасть.Выгрузить());
	
КонецФункции 

&НаСервере
Процедура ЗагрузитьТабличнуюЧасть(АдресТаблицы, ИмяТабличнойЧасти)
	
	ТЗ = ПолучитьИзВременногоХранилища(АдресТаблицы);
	
	Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") Тогда
		
		Модифицированность = Истина;
		Объект[ИмяТабличнойЧасти].Загрузить(ТЗ)
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Функция ОткрытьФормуПодбора(ИмяПодбора, ТаблицаДляФормы, СтрокаДанных, ВладелецПодобра)
	
	АдресТаблицы 			= ВыгрузитьНужнуюТаблицуВХранилище(ТаблицаДляФормы);
	ПараметрыПодбора 	= Новый Структура;
	
	ПараметрыПодбора.Вставить("АдресТаблицы", АдресТаблицы);
	ПараметрыПодбора.Вставить("Подразделение", Объект.Подразделение);
	ПараметрыПодбора.Вставить("ТолькоЧтение", ЭтаФорма.ТолькоПросмотр);
	
	Если СтрокаДанных <> Неопределено Тогда
		
		ПараметрыПодбора.Вставить("Идентификатор", СтрокаДанных.НомерСтроки - 1);
		
	КонецЕсли;
	
	ОткрытьФорму("Документ.Спецификация.Форма." + ИмяПодбора, ПараметрыПодбора, ВладелецПодобра);
	
КонецФункции 

&НаКлиенте
Функция Собрать()
	
	ИмяТекущейСтраницы = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;
	
	Если ИмяТекущейСтраницы = "СтраницаМатериалы"  Тогда
		
		ИмяПодбора 			= "ФормаДетали";
		ТаблицаДляФормы 	= Объект.СписокМатериалы;
		СтрокаДанных 		= Элементы.СписокМатериалы.ТекущиеДанные;
		ВладелецПодобра	= Элементы.СписокМатериалы;
		
	ИначеЕсли ИмяТекущейСтраницы = "СтраницаЯщики" Тогда
		
		ИмяПодбора 			= "ФормаЯщики";
		ТаблицаДляФормы 	= Объект.СписокЯщики;
		СтрокаДанных 		= Элементы.СписокЯщики.ТекущиеДанные;
		ВладелецПодобра 	= Элементы.СписокЯщики;
		
	ИначеЕсли ИмяТекущейСтраницы = "СтраницаИзделияПоКаталогу" Тогда
		
		ИмяПодбора 			= "ФормаИзделийПоКаталогу";
		ТаблицаДляФормы 	= Объект.СписокИзделийПоКаталогу;
		СтрокаДанных 		= Элементы.СписокИзделийПоКаталогу.ТекущиеДанные;
		ВладелецПодобра 	= Элементы.СписокИзделийПоКаталогу;
		
	КонецЕсли;
	
	ОткрытьФормуПодбора(ИмяПодбора, ТаблицаДляФормы, СтрокаДанных, ВладелецПодобра);
	
КонецФункции // Собрать()

&НаСервере
Функция ПолучитьАдресТаблицы()
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТЗ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТЗ.Колонки.Добавить("ДлинаДетали", Новый ОписаниеТипов("Число"));
	
	Для каждого Строка Из Объект.Комплектация Цикл
		
		НоменклатурнаяГруппа 	= Строка.Номенклатура.НоменклатурнаяГруппа;
		Дробный 						= Строка.Номенклатура.ЕдиницаИзмерения.Дробный;
		
		Если НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.СотовыеПолки 
			или НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.Корзины 
			или НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.СотовыеЭлементы Тогда
			
			Если Дробный Тогда
				
				НоваяСтрока 							= ТЗ.Добавить();
				НоваяСтрока.Номенклатура 		= Строка.Номенклатура;
				НоваяСтрока.Количество 		= 1;
				НоваяСтрока.ДлинаДетали 		= Строка.Количество;
				
			Иначе
				
				НоваяСтрока 							= ТЗ.Добавить();
				НоваяСтрока.Номенклатура 		= Строка.Номенклатура;
				НоваяСтрока.Количество 		= Строка.Количество;
				НоваяСтрока.ДлинаДетали 		= 0;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	ТЗ.Свернуть("Номенклатура, ДлинаДетали", "Количество");
	Возврат ПоместитьВоВременноеХранилище(ТЗ);
	
КонецФункции // ПолучитьАдресТаблицы()

&НаСервере
Функция ПосчитатьКоличествоКрепежа()
	
	Шуруп16х35черный 		= 0;
	Шуруп40х35черный  		= 0;
	Дюбель6х40черный 		= 0;
	Шуруп30х35черный 		= 0;
	Шуруп16х35хром 			= 0;
	Шуруп40х35золото 			= 0;
	Шуруп16х35золото 			= 0;
	Шуруп40х35хром 			= 0;
	ФлянецХромированный 	= 0;
	Евровинт50 					= 0;
	
	ТЗ = Объект.Комплектация.Выгрузить();
	ТЗ.Свернуть("Номенклатура", "Количество");
	
	Для каждого Строка Из ТЗ Цикл
		
		Номенклатура	 				= Справочники.Номенклатура;
		Шуруп16х35черный 		= ?(Строка.Номенклатура = Номенклатура.Шуруп16х35черный, Строка.Количество, Шуруп16х35черный);
		Шуруп40х35черный 		= ?(Строка.Номенклатура = Номенклатура.Шуруп40х35черный, Строка.Количество, Шуруп40х35черный);
		Дюбель6х40черный 		= ?(Строка.Номенклатура = Номенклатура.Дюбель6х40черный, Строка.Количество, Дюбель6х40черный);
		Шуруп30х35черный 		= ?(Строка.Номенклатура = Номенклатура.Шуруп30х35черный, Строка.Количество, Шуруп30х35черный);
		Шуруп16х35хром 			= ?(Строка.Номенклатура = Номенклатура.Шуруп16х35хром, Строка.Количество, Шуруп16х35хром);
		Шуруп40х35золото 			= ?(Строка.Номенклатура = Номенклатура.Шуруп40х35золото, Строка.Количество, Шуруп40х35золото);
		Шуруп16х35золото 			= ?(Строка.Номенклатура = Номенклатура.Шуруп16х35золото, Строка.Количество, Шуруп16х35золото);
		Шуруп40х35хром	 			= ?(Строка.Номенклатура = Номенклатура.Шуруп40х35хром, Строка.Количество, Шуруп40х35хром);
		Евровинт50 					= ?(Строка.Номенклатура = Номенклатура.Евровинт50, Строка.Количество, Евровинт50);
		ФлянецХромированный 	= ?(Строка.Номенклатура = Номенклатура.ФлянецХромированный, Строка.Количество, ФлянецХромированный);
		
	КонецЦикла;
	
	ПараметрыФурнитуры = Новый Структура;
	
	ПараметрыФурнитуры.Вставить("Шуруп16х35черный", Шуруп16х35черный);
	ПараметрыФурнитуры.Вставить("Шуруп40х35черный", Шуруп40х35черный);
	ПараметрыФурнитуры.Вставить("Дюбель6х40черный", Дюбель6х40черный);
	ПараметрыФурнитуры.Вставить("Шуруп30х35черный", Шуруп30х35черный);
	ПараметрыФурнитуры.Вставить("Шуруп16х35хром", Шуруп16х35хром);
	ПараметрыФурнитуры.Вставить("Шуруп40х35золото", Шуруп40х35золото);
	ПараметрыФурнитуры.Вставить("Шуруп16х35золото", Шуруп16х35золото);
	ПараметрыФурнитуры.Вставить("Шуруп40х35хром", Шуруп40х35хром);
	ПараметрыФурнитуры.Вставить("Евровинт50", Евровинт50);
	ПараметрыФурнитуры.Вставить("ФлянецХромированный", ФлянецХромированный);
	
	Возврат ПараметрыФурнитуры;
	
КонецФункции // ПосчитатьКоличествоКрпежа()

&НаСервере
Функция ЗаполнитьУслуги(ТекущийОбъект)
	
	Номенклатура 									= Справочники.Номенклатура;
	ПлощадьУпаковываемыхМатериалов 	= 0;
	ПлощадьИзготавливаемыхМатериалов	= 0;
	ПлощадьГравировок 							= 0;
	ДилерскийЗаказ 								= ТекущийОбъект.Дилерский;
	
#ОБЛАСТЬ ОСНОВНОЙ_ЦИКЛ
//ОСНОВНОЙ ЦИКЛ ЗАПОЛНЕНИЯ ТАБЛИЦЫ УСЛУГАМИ
	Для каждого Строка Из Объект.СписокМатериалы Цикл
		
		Материал 	 		= Строка.Материал;
		
		Фасад  		 		= Материал = "ФасадАГТ" ИЛИ Материал = "ФасадЛДСП" ИЛИ Материал = "ФасадМДФ" ИЛИ Материал = "ФасадАлюминиевый"
		Или Материал 	= "ФасадСтеклянный" ИЛИ Материал = "ФасадСтеклянныйЗакругленный";
		ЛДСП					= Материал = "10 ЛДСП" ИЛИ Материал = "16 ЛДСП" ИЛИ Материал = "10 ЛДСП+10 ЛДСП" ИЛИ  Материал = "16 ЛДСП+10 ЛДСП" ИЛИ Материал = "16 ЛДСП+16 ЛДСП";
		Столешница 		= Материал = "Столешница" ИЛИ Материал = "Пристенок";
		
		//Детали ЛДСП и ДВП и МДФ и Столешниц с кромочным материалом
		Если ЛДСП ИЛИ Материал = "ДВП" ИЛИ Материал = "МДФ" ИЛИ Столешница Тогда
			
			Клееная 	= Клееная(Материал);
			Площадь 	= ?(Клееная, Строка.Количество * 2, Строка.Количество);
			
			Если Материал = "16 ЛДСП" или Клееная Тогда
				
				ПлощадьИзготавливаемыхМатериалов = ПлощадьИзготавливаемыхМатериалов + Строка.ВысотаДетали * Строка.ШиринаДетали * (Клееная + 1) * Строка.Количество / 1000000;
				
			КонецЕсли;
				
			Если Материал = "ДВП" Тогда
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.ИзготовлениеДеревяннойДеталиСтекольнаяЗона, Площадь, Строка.НомерИзделия);
			Иначе
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.РаспилЗаДеталь, Площадь, Строка.НомерИзделия);
			КонецЕсли;
			
			Если Клееная Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.СклеиваниеЛДСПЗонаКромки, Строка.Количество, Строка.НомерИзделия);
				
			КонецЕсли;
			
			//Радиусы
			РадиусЛевоВерх		= Строка.РадиусЛевоВерх;
			РадиусЛевоНиз		= Строка.РадиусЛевоНиз;
			РадиусПравоВерх	= Строка.РадиусПравоВерх;
			РадиусПравоНиз		= Строка.РадиусПравоНиз;
			
			//Кривой пил
			ДлинаКривогоПила = Число(Строка.ДлинаКривогоПила);
			
			Если ДлинаКривогоПила > 0 Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.КриволинейныйПилЗонаКромки, (Число(Строка.ДлинаКривогоПила) / 1000) * Строка.Количество, Строка.НомерИзделия);
				
			КонецЕсли;
			
			ВысотаДетали 	= Строка.ВысотаДетали;
			ШиринаДетали 	= Строка.ШиринаДетали;
			
			ДлинаКромления = 0;
			//3.14*(Строка.РадиусЛевоВерх + Строка.R2 + Строка.R3 + Строка.R4) / 2000
			
			// { Васильев Александр Леонидович [04.10.2013]
			// Одинаковые алгоритмы для кромок, прибрать бы...
			// } Васильев Александр Леонидович [04.10.2013]
			
			Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСверху) Тогда
				
				Кромка = СравнитьНоменклатурнуюГруппу(Строка.ВыборМебельнойКромкиСверху.НоменклатурнаяГруппа);
				
				Если Кромка = "Обычная" ИЛИ Кромка = "ДляСтолешниц" Тогда
					
					Если Строка.РадиусЛевоВерх > 0 ИЛИ Строка.РадиусПравоВерх > 0 Тогда
						
						ДлинаКромления = ДлинаКромления + Строка.ШиринаДетали * Строка.Количество / 2000;
						
					Иначе
						
						ДобавитьУслугуКромления(ТекущийОбъект, Строка.ВыборМебельнойКромкиСверху, Строка.ШиринаДетали * Строка.Количество, Кромка = "ДляСтолешниц", Строка.НомерИзделия);
						
					КонецЕсли;
					
				ИначеЕсли Кромка = "ОкантовкаАлюминием" Тогда
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.ОкантовкаАлюминием, Строка.Количество, Строка.НомерИзделия);
					
				Иначе
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.Окантовка, ШиринаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСнизу) Тогда
				
				Кромка = СравнитьНоменклатурнуюГруппу(Строка.ВыборМебельнойКромкиСнизу.НоменклатурнаяГруппа);
				
				Если Кромка = "Обычная" ИЛИ Кромка = "ДляСтолешниц" Тогда
					
					Если Строка.РадиусЛевоНиз > 0 ИЛИ Строка.РадиусПравоНиз > 0 Тогда
						
						ДлинаКромления = ДлинаКромления + Строка.ШиринаДетали * Строка.Количество / 2000;
						
					Иначе
						
						ДобавитьУслугуКромления(ТекущийОбъект, Строка.ВыборМебельнойКромкиСнизу, Строка.ШиринаДетали * Строка.Количество, Кромка = "ДляСтолешниц", Строка.НомерИзделия);
						
					КонецЕсли;
					
				ИначеЕсли Кромка = "ОкантовкаАлюминием" Тогда
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.ОкантовкаАлюминием, Строка.Количество, Строка.НомерИзделия);
					
				Иначе
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.Окантовка, ШиринаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСлева) Тогда
				
				Кромка = СравнитьНоменклатурнуюГруппу(Строка.ВыборМебельнойКромкиСлева.НоменклатурнаяГруппа);
				
				Если Кромка = "Обычная" ИЛИ Кромка = "ДляСтолешниц" Тогда
					
					Если Строка.РадиусЛевоВерх > 0 ИЛИ Строка.РадиусЛевоНиз > 0 Тогда
						
						ДлинаКромления = ДлинаКромления + Строка.ВысотаДетали * Строка.Количество / 2000;
						
					Иначе
						
						ДобавитьУслугуКромления(ТекущийОбъект, Строка.ВыборМебельнойКромкиСлева, Строка.ВысотаДетали * Строка.Количество, Кромка = "ДляСтолешниц", Строка.НомерИзделия);
						
					КонецЕсли;
					
				ИначеЕсли Кромка = "ОкантовкаАлюминием" Тогда
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.ОкантовкаАлюминием, Строка.Количество, Строка.НомерИзделия);
					
				Иначе
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.Окантовка, ВысотаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСправа) Тогда
				
				Кромка = СравнитьНоменклатурнуюГруппу(Строка.ВыборМебельнойКромкиСправа.НоменклатурнаяГруппа);
				
				Если Кромка = "Обычная" ИЛИ Кромка = "ДляСтолешниц" Тогда
					
					Если Строка.РадиусПравоВерх > 0 ИЛИ Строка.РадиусПравоНиз > 0 Тогда
						
						ДлинаКромления = ДлинаКромления + Строка.ВысотаДетали * Строка.Количество / 2000;
						
					Иначе
						
						ДобавитьУслугуКромления(ТекущийОбъект, Строка.ВыборМебельнойКромкиСправа, Строка.ВысотаДетали * Строка.Количество, Кромка = "ДляСтолешниц", Строка.НомерИзделия);
						
					КонецЕсли;
					
				ИначеЕсли Кромка = "ОкантовкаАлюминием" Тогда
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.ОкантовкаАлюминием, Строка.Количество, Строка.НомерИзделия);
					
				Иначе
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.Окантовка, ВысотаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ДлинаКромления > 0 Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.КриволинейноеКромление, ДлинаКромления, Строка.НомерИзделия); //  (Строка.РадиусЛевоВерх + Строка.РадиусПравоВерх + Строка.РадиусПравоНиз + Строка.РадиусЛевоНиз)
				
			КонецЕсли;
			
			КантыИзРедактора = Строка.КантыИзРедактора;
			
			Если ЗначениеЗаполнено(КантыИзРедактора) Тогда 
				
				КантыИзРедактора 	= ЗначениеИзСтрокиВнутр(КантыИзРедактора);
				МассивКантов 		= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КантыИзРедактора, "|");
				
				Для Каждого Строчка Из МассивКантов Цикл
					
					ПараметрыКанта 			= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Строчка , "_");
					НоменклатурныйНомер 	= ПараметрыКанта[0];
					ДлинаКанта 					= Число(ПараметрыКанта[1]);
					НоменклатураКанта 		= Номенклатура.НайтиПоКоду(НоменклатурныйНомер);
					Кромка 							= СравнитьНоменклатурнуюГруппу(НоменклатураКанта.НоменклатурнаяГруппа);
					
				Если Кромка = "Обычная" ИЛИ Кромка = "ДляСтолешниц" Тогда
					
					ДобавитьУслугуКромления(ТекущийОбъект, НоменклатураКанта, ДлинаКанта * Строка.Количество, Кромка = "ДляСтолешниц", Строка.НомерИзделия);
					
				ИначеЕсли Кромка = "ОкантовкаАлюминием" Тогда
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.ОкантовкаАлюминием, Строка.Количество, Строка.НомерИзделия);
					
				Иначе
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.Окантовка, ВысотаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
					
				КонецЕсли;
					
					//ДобавитьСтроку(ТекущийОбъект, ?(НоменклатураКанта.СтатьяДоходаРасхода.Наименование = "Кромка", 
					//Номенклатура.КромлениеТонкойКромки, Номенклатура.Окантовка), (ДлинаКанта * Строка.Количество) / 1000, 0);
					
				КонецЦикла;
				
			КонецЕсли;
			
			СтруктураОтверстий = Строка.СтруктураОтверстий;
			
			Если ЗначениеЗаполнено(СтруктураОтверстий) Тогда
				
				ТаблицаОтверстий = ЗначениеИзСтрокиВнутр(СтруктураОтверстий);
				
				Для Каждого Элемент Из ТаблицаОтверстий Цикл
					
					Если Элемент.ВидОтверстий = Перечисления.ВидыОтверстий.Европаз Тогда
						
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.УслугаЕвропаз, Элемент.Количество * Строка.Количество, Строка.НомерИзделия);
						
					Иначе
						
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.УслугаПрисадка, Элемент.Количество * Строка.Количество, Строка.НомерИзделия);
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			/////////////////////////////////////////////
			// СТЕКЛА
		ИначеЕсли Материал = "Стекло" Тогда
			
			ДобавитьСтроку(ТекущийОбъект, Номенклатура.ИзготовлениеДеталиСтекло, Строка.Количество, Строка.НомерИзделия);
			
			Если Строка.Обтачивать Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.Обточка, Строка.Периметр / 1000 * Строка.Количество, Строка.НомерИзделия);
				
			КонецЕсли;
			
			//Кривой рез
			ДлинаКривогоПила = 0;
			
			ДлинаКривогоПила = Число(Строка.ДлинаКривогоПила);
			
			Если ДлинаКривогоПила > 0 Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.КриволинейныйРез, ДлинаКривогоПила / 1000 * Строка.Количество, Строка.НомерИзделия);
				
			КонецЕсли;
			
			// ГРАВИРОВКИ
			СтрокаФлэш = Строка.СтрокаДляФлэш;
			Если ЗначениеЗаполнено(СтрокаФлэш) Тогда
				
				МассивСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаФлэш, "#");
				
				Если МассивСтроки.Количество() > 3 Тогда
					
					ПлощадьГравировки = Число(МассивСтроки[3]) / 1000000 * Строка.Количество;
					
					Если ПлощадьГравировки > 0 Тогда
						
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.Гравировка, ПлощадьГравировки, Строка.НомерИзделия);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли Фасад Тогда
			
			ШиринаВставки 	= Строка.Номенклатура.ГлубинаДетали;
			ШиринаПаза		= Строка.УниверсальнаяКромка.ШиринаПаза;
			
			Если Материал = "ФасадАГТ" Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.ИзготовлениеДеревяннойДеталиСтекольнаяЗона, Строка.Количество, Строка.НомерИзделия);
				
				Если ШиринаПаза < ШиринаВставки Тогда 
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.ФрезеровкаДеталиЗонаКухонь, Строка.Количество, Строка.НомерИзделия);
					
				КонецЕсли;
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.СборкаАГТФасада, Строка.Количество, Строка.НомерИзделия);
				
			ИначеЕсли Материал = "ФасадМДФ" Тогда 
				
				Кромка = СравнитьНоменклатурнуюГруппу(Строка.УниверсальнаяКромка.НоменклатурнаяГруппа);
				
				Если Кромка = "Обычная" Тогда
					
					Если Строка.УниверсальнаяКромка.ГлубинаДетали < 1 Тогда
					
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.КромлениеТонкойКромки, Строка.Количество * 2 * (Строка.ВысотаДетали + Строка.ШиринаДетали) / 1000, Строка.НомерИзделия);
					
					Иначе
					
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.КромлениеТолстойКромки, Строка.Количество * 2 * (Строка.ВысотаДетали + Строка.ШиринаДетали) / 1000, Строка.НомерИзделия);
					
					КонецЕсли;
					
				ИначеЕсли Кромка = "ОкантовкаАлюминием" Тогда
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.ОкантовкаАлюминием, Строка.Количество * 4, Строка.НомерИзделия);
					
				Иначе
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.Окантовка, Строка.Количество * 2 * (Строка.ВысотаДетали + Строка.ШиринаДетали) / 1000, Строка.НомерИзделия);
					
				КонецЕсли;
				
			ИначеЕсли Материал = "ФасадЛДСП" Тогда
				
				Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСверху) Тогда
					
					Кромка = СравнитьНоменклатурнуюГруппу(Строка.ВыборМебельнойКромкиСверху.НоменклатурнаяГруппа);
					
					Если Кромка = "Обычная" Тогда
						
						ДобавитьУслугуКромления(ТекущийОбъект, Строка.ВыборМебельнойКромкиСверху, Строка.ШиринаДетали * Строка.Количество, Кромка = "ДляСтолешниц", Строка.НомерИзделия);
							
					ИначеЕсли Кромка = "ОкантовкаАлюминием" Тогда
						
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.ОкантовкаАлюминием, Строка.Количество, Строка.НомерИзделия);
						
					Иначе
						
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.Окантовка, ШиринаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСнизу) Тогда
					
					Кромка = СравнитьНоменклатурнуюГруппу(Строка.ВыборМебельнойКромкиСнизу.НоменклатурнаяГруппа);
					
					Если Кромка = "Обычная" Тогда
						
						ДобавитьУслугуКромления(ТекущийОбъект, Строка.ВыборМебельнойКромкиСнизу, Строка.ШиринаДетали * Строка.Количество, Кромка = "ДляСтолешниц", Строка.НомерИзделия);
							
					ИначеЕсли Кромка = "ОкантовкаАлюминием" Тогда
						
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.ОкантовкаАлюминием, Строка.Количество, Строка.НомерИзделия);
						
					Иначе
						
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.Окантовка, ШиринаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСлева) Тогда
					
					Кромка = СравнитьНоменклатурнуюГруппу(Строка.ВыборМебельнойКромкиСлева.НоменклатурнаяГруппа);
					
					Если Кромка = "Обычная" Тогда
						
						ДобавитьУслугуКромления(ТекущийОбъект, Строка.ВыборМебельнойКромкиСлева, Строка.ВысотаДетали * Строка.Количество, Кромка = "ДляСтолешниц", Строка.НомерИзделия);
						
					ИначеЕсли Кромка = "ОкантовкаАлюминием" Тогда
						
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.ОкантовкаАлюминием, Строка.Количество, Строка.НомерИзделия);
						
					Иначе
						
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.Окантовка, ВысотаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСправа) Тогда
					
					Кромка = СравнитьНоменклатурнуюГруппу(Строка.ВыборМебельнойКромкиСправа.НоменклатурнаяГруппа);
					
					Если Кромка = "Обычная" Тогда
						
						ДобавитьУслугуКромления(ТекущийОбъект, Строка.ВыборМебельнойКромкиСправа, Строка.ВысотаДетали * Строка.Количество, Кромка = "ДляСтолешниц", Строка.НомерИзделия);
						
					ИначеЕсли Кромка = "ОкантовкаАлюминием" Тогда
						
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.ОкантовкаАлюминием, Строка.Количество, Строка.НомерИзделия);
						
					Иначе
						
						ДобавитьСтроку(ТекущийОбъект, Номенклатура.Окантовка, ВысотаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
						
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли Материал = "ФасадАлюминиевый" Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.СборкаАлюминевогоФасада, Строка.Количество, Строка.НомерИзделия);
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.ИзготовлениеДеталиСтекло, Строка.Количество, Строка.НомерИзделия);
				
			КонецЕсли;
			
			НоменклатурнаяГруппа = Строка(Строка.Номенклатура.НоменклатурнаяГруппа);
			
			Если НоменклатурнаяГруппа = "Стекло" ИЛИ НоменклатурнаяГруппа = "Зеркало" Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.ИзготовлениеДеталиСтекло, Строка.Количество, Строка.НомерИзделия);
				
			Иначе
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.ИзготовлениеДеревяннойДеталиСтекольнаяЗона, Строка.Количество, Строка.НомерИзделия);
				
			КонецЕсли;
			
			Если (Строка.ОтверстийподРучку+Строка.КоличествоПетель) * Строка.Количество > 0 Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.УслугаПрисадка, (Строка.ОтверстийподРучку + Строка.КоличествоПетель) * Строка.Количество, Строка.НомерИзделия);
				
			КонецЕсли;
			
			Если Материал = "ФасадСтеклянныйЗакругленный" Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.ЗагибСтеклянногоФасада, Строка.Количество, Строка.НомерИзделия);
				
			КонецЕсли;
			
			КантыИзРедактора = Строка.КантыИзРедактора;
			
			Если ЗначениеЗаполнено(КантыИзРедактора) Тогда 
				
				КантыИзРедактора 	= ЗначениеИзСтрокиВнутр(КантыИзРедактора);
				МассивКантов 		= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КантыИзРедактора, "|");
				
				Для Каждого Строчка Из МассивКантов Цикл
					
					ПараметрыКанта 			= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Строчка , "_");
					НоменклатурныйНомер 	= ПараметрыКанта[0];
					ДлинаКанта 					= Число(ПараметрыКанта[1]);
					НоменклатураКанта 		= Номенклатура.НайтиПоКоду(НоменклатурныйНомер);
					Кромка 							= СравнитьНоменклатурнуюГруппу(НоменклатураКанта.НоменклатурнаяГруппа);
					
				Если Кромка = "Обычная" ИЛИ Кромка = "ДляСтолешниц" Тогда
					
					ДобавитьУслугуКромления(ТекущийОбъект, НоменклатураКанта, ДлинаКанта * Строка.Количество, Кромка = "ДляСтолешниц", Строка.НомерИзделия);
					
				ИначеЕсли Кромка = "ОкантовкаАлюминием" Тогда
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.ОкантовкаАлюминием, Строка.Количество, Строка.НомерИзделия);
					
				Иначе
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.Окантовка, ВысотаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
					
				КонецЕсли;
					
					//ДобавитьСтроку(ТекущийОбъект, ?(НоменклатураКанта.СтатьяДоходаРасхода.Наименование = "Кромка", 
					//Номенклатура.КромлениеТонкойКромки, Номенклатура.Окантовка), (ДлинаКанта * Строка.Количество) / 1000, 0);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		//Услуги из криволинейной детали (ТОЛЬКО ПРИСАДКИ)
		Если ЗначениеЗаполнено(Строка.СтрокаДляФлэш) Тогда
			КоличествоПрисадок = ПосчитатьПрисадкиКриволинейнаяДеталь(Строка.СтрокаДляФлэш);
			
			Если КоличествоПрисадок > 0 Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.ПрисадкаПодПетли, КоличествоПрисадок * Строка.Количество, Строка.НомерИзделия);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Материал 	= Строка.Материал;
		Клееная 	= Клееная(Строка.Материал);
		ПлощадьУпаковываемыхМатериалов = ПлощадьУпаковываемыхМатериалов + Строка.ВысотаДетали * Строка.ШиринаДетали * (Клееная + 1) * Строка.Количество / 1000000;
		
	КонецЦикла;
	
#КОНЕЦОБЛАСТИ
	
#ОБЛАСТЬ ЯЩИКИ
	Для каждого Строка Из Объект.СписокЯщики Цикл
		
		ДобавитьСтроку(ТекущийОбъект, Номенклатура.ИзготовлениеЯщика, Строка.КоличествоЯщиков, Строка.НомерИзделия);
		НоменклатурнаяГруппаФасада = Строка.ФасадНоменклатура.НоменклатурнаяГруппа;
		СправочникНоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы;
				
		Если НоменклатурнаяГруппаФасада = СправочникНоменклатурнаяГруппа.ЛДСП10 или НоменклатурнаяГруппаФасада = СправочникНоменклатурнаяГруппа.ЛДСП16 Тогда
			
			ДобавитьСтроку(ТекущийОбъект, Номенклатура.НакручиваниеРучкиНаЛДСПФасадЯщика, Строка.КоличествоЯщиков * Строка.КоличествоРучек, Строка.НомерИзделия);
			
		КонецЕсли;
			
		Если Строка.КромкаНоменклатура.ГлубинаДетали >= 1 Тогда
			УслугаКромки = Номенклатура.КромлениеТолстойКромки;
		Иначе
			УслугаКромки = Номенклатура.КромлениеТонкойКромки;
		КонецЕсли;
		
		Если Строка.КромкаФасадНоменклатура.ГлубинаДетали >= 1 Тогда
			УслугаКромкиФасада = Номенклатура.КромлениеТолстойКромки;
		Иначе	
			УслугаКромкиФасада = Номенклатура.КромлениеТонкойКромки;
		КонецЕсли;
		
		Если НоменклатурнаяГруппаФасада = СправочникНоменклатурнаяГруппа.АГТПрофиль Тогда 
			
			ДобавитьСтроку(ТекущийОбъект, Номенклатура.ИзготовлениеДеревяннойДеталиСтекольнаяЗона, Строка.КоличествоЯщиков, Строка.НомерИзделия);
			
		ИначеЕсли НоменклатурнаяГруппаФасада = СправочникНоменклатурнаяГруппа.ЛДСП16 ИЛИ НоменклатурнаяГруппаФасада = СправочникНоменклатурнаяГруппа.МДФ18 Тогда	
			
			ДобавитьСтроку(ТекущийОбъект, Номенклатура.РаспилЗаДеталь, Строка.КоличествоЯщиков, Строка.НомерИзделия);
			ДобавитьСтроку(ТекущийОбъект, УслугаКромки, Строка.КоличествоЯщиков * 2 * (Строка.ШиринаФасад + Строка.ВысотаФасад) / 1000, Строка.НомерИзделия);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ДноНоменклатура) Тогда
			
			ДобавитьСтроку(ТекущийОбъект, Номенклатура.ИзготовлениеДеревяннойДеталиСтекольнаяЗона, Строка.КоличествоЯщиков, Строка.НомерИзделия);
			
		КонецЕсли;
				
		Если Строка.ВидЯщика = Перечисления.ВидыЯщика.Обычный Тогда
			
			ДобавитьСтроку(ТекущийОбъект, Номенклатура.РаспилЗаДеталь, Строка.КоличествоЯщиков * 5, Строка.НомерИзделия);
			ДобавитьСтроку(ТекущийОбъект, УслугаКромкиФасада, Строка.КоличествоЯщиков *  (2 * (Строка.ШиринаБоковойСтороны + Строка.ДлинаБоковойСтороны)) / 1000, Строка.НомерИзделия);
			ПлощадьИзготавливаемыхМатериалов = ПлощадьИзготавливаемыхМатериалов + (Строка.ШиринаБоковойСтороны * Строка.ВысотаБоковойСтороны * 2 + Строка.ДлинаБоковойСтороны * Строка.ВысотаБоковойСтороны * 2) * Строка.КоличествоЯщиков / 1000000;
			
		Иначе
			
			ДобавитьСтроку(ТекущийОбъект, Номенклатура.РаспилЗаДеталь, Строка.КоличествоЯщиков * 2, Строка.НомерИзделия);
			ДобавитьСтроку(ТекущийОбъект, УслугаКромкиФасада, Строка.КоличествоЯщиков * (2 *( Строка.ШиринаБоковойСтороны + Строка.ВысотаБоковойСтороны)) / 1000, Строка.НомерИзделия);
			ПлощадьИзготавливаемыхМатериалов = ПлощадьИзготавливаемыхМатериалов + Строка.ШиринаБоковойСтороны * Строка.ВысотаБоковойСтороны * Строка.КоличествоЯщиков / 1000000;
			
		КонецЕсли;
		
	КонецЦикла;
#КОНЕЦОБЛАСТИ
	
	// Дилерам наценка не нужна
	// Пока будем определять по офису
	Если ЗначениеЗаполнено(Объект.Офис) Тогда
		ДобавитьСтроку(ТекущийОбъект, Номенклатура.РозничнаяНаценка, 1, 0);
	КонецЕсли;
	
	Если Объект.Изделие.ДобавлятьНаценки Тогда
		
		ДобавитьСтроку(ТекущийОбъект, Номенклатура.УслугаЗамер, 1, 0);
		ДобавитьСтроку(ТекущийОбъект, Номенклатура.УслугаДизайн, 1, 0);
		
		ДобавитьСтроку(ТекущийОбъект, Номенклатура.ВыездМастера, 1, 0);
		ДобавитьСтроку(ТекущийОбъект, Номенклатура.СборкаИзделия, ПлощадьИзготавливаемыхМатериалов, 0);
		
	КонецЕсли;
	
	Если Объект.Упаковка Тогда
		
		КоличествоДверей = Объект.СписокДверей.Количество();
		ДобавитьСтроку(ТекущийОбъект, Номенклатура.УпаковкаДеталей, ПлощадьУпаковываемыхМатериалов, 0);
		
		Если КоличествоДверей > 0 Тогда
			ДобавитьСтроку(ТекущийОбъект, Номенклатура.УпаковкаДверей, Окр(КоличествоДверей/2+0.5), 0);
		КонецЕсли;
		
	КонецЕсли;
	
	УслугаРасчет = Объект.Изделие.УслугаРасчет;
	Если ЗначениеЗаполнено(УслугаРасчет) Тогда
		ДобавитьСтроку(ТекущийОбъект,УслугаРасчет , 1, 0);
	КонецЕсли;
	
	Если Объект.Доставка Тогда
		
		Этаж =ЛексСервер.ПолучитьСтруктуруИзАдреса(Объект.АдресМонтажа).Этаж;
		ДобавитьСтроку(ТекущийОбъект, Номенклатура.ПодъемИзделияНаЭтаж, Этаж, 0);
		ДобавитьСтроку(ТекущийОбъект, Номенклатура.ДоставкаПоГороду, 1, 0);
		РастояниеДоЗавода = Объект.Офис.РастояниеДоЗавода;
		
		Если Объект.Километраж > 0 или РастояниеДоЗавода > 0 Тогда
			
			ДобавитьСтроку(ТекущийОбъект, Номенклатура.ДоставкаЗаГородом, Объект.Километраж + РастояниеДоЗавода, 0);
			
			Если Объект.УслугаМонтаж Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.ПроездМонтажникаЗаГородом, Объект.Километраж, 0);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции // ЗаполнитьУслуги()

&НаСервере
Функция ЗаполнитьМатериалы(ТекущийОбъект)
	
	МетровЛДСП = 0;
	ТекущийОбъект.СписокНоменклатуры.Очистить();
	
	Изделие = ТекущийОбъект.Изделие;
	НомГруппаЛДСП16 = Справочники.НоменклатурныеГруппы.ЛДСП16;
	
	// Табличная часть справочника Изделия
	Для каждого Строка Из Изделие.СписокНоменклатуры Цикл
		ДобавитьСтроку(ТекущийОбъект, Строка.Номенклатура, Строка.Количество, 0);
	КонецЦикла;
	
#ОБЛАСТЬ Основной_цикл_заполнения_материалов
	
	Для Каждого Строка Из ТекущийОбъект.СписокМатериалы Цикл
		//Добавляем номенклатуру из ТЧ Материалы
		Материал 				= Строка.Материал;
		Клееная 				= Клееная(Материал);
		ФасадСПрофилем 	= Материал = "ФасадАГТ" ИЛИ Материал = "ФасадАлюминиевый";
		ФасадМДФ				= Материал = "ФасадМДФ";
		Номенклатура			= Справочники.Номенклатура;
		ЛДСП 					= Материал = "10 ЛДСП" ИЛИ Материал = "16 ЛДСП" ИЛИ Материал = "10 ЛДСП+10 ЛДСП" 
			ИЛИ Материал = "16 ЛДСП+10 ЛДСП" ИЛИ Материал = "16 ЛДСП+16 ЛДСП";
		КоличествоДеталей 	= Строка.Количество;
		ВысотаДетали 			= Строка.ВысотаДетали;
		ШиринаДетали 			= Строка.ШиринаДетали;
		
		Если ЛДСП и НЕ Материал = "10 ЛДСП" или Материал = "МДФ" Тогда
			
			МетровЛДСП = МетровЛДСП + ВысотаДетали * ШиринаДетали * КоличествоДеталей / 1000000;  // * (Клееная + 1)
			
		КонецЕсли;
		
		//Ручки
		
		Если НЕ Клееная И ЗначениеЗаполнено(Строка.НоменклатураДляСклеивания) Тогда
			
			ДобавитьСтроку(ТекущийОбъект, Строка.НоменклатураДляСклеивания, Строка.Количество, Строка.НомерИзделия);
			
		КонецЕсли;
			
		Если НЕ ФасадСПрофилем Тогда
			
			Если Материал = "Столешница" или Материал = "Пристенок" Тогда
				
				Площадь = (ВысотаДетали * Строка.Номенклатура.ШиринаДетали / 1000000 ) * КоличествоДеталей;
				ДобавитьСтроку(ТекущийОбъект, Строка.Номенклатура, Площадь, Строка.НомерИзделия);
				
			Иначе
				
				Площадь = (ВысотаДетали * ШиринаДетали / 1000000 ) * КоличествоДеталей;
				ДобавитьСтроку(ТекущийОбъект, Строка.Номенклатура, Площадь, Строка.НомерИзделия);
				
			КонецЕсли;
			
		Иначе
			
			Площадь = ((ВысотаДетали - 2 * Строка.УниверсальнаяКромка.ШиринаДетали + 2 * Строка.УниверсальнаяКромка.ШиринаПаза) * 
			(ШиринаДетали - 2 * Строка.УниверсальнаяКромка.ШиринаДетали + 2 * Строка.УниверсальнаяКромка.ШиринаПаза) / 1000000) * КоличествоДеталей;
			ДобавитьСтроку(ТекущийОбъект, Строка.Номенклатура, Площадь, Строка.НомерИзделия);
			ПлощадьПрофиля= ((2 * ВысотаДетали + 2 * ШиринаДетали) / 1000) * КоличествоДеталей;
			ДобавитьСтроку(ТекущийОбъект, Строка.УниверсальнаяКромка, ПлощадьПрофиля, Строка.НомерИзделия);
			ШиринаВставки 	= Строка.Номенклатура.ГлубинаДетали;
			ШиринаПаза		= Строка.УниверсальнаяКромка.ШиринаПаза;
			
			Если Материал = "ФасадАГТ" Тогда
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.Шпонка, КоличествоДеталей * 8, Строка.НомерИзделия);
				
				Если ШиринаПаза > ШиринаВставки Тогда
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.АгтУплотнитель, (((ВысотаДетали - 2 * Строка.УниверсальнаяКромка.ШиринаДетали + 2 * 
					Строка.УниверсальнаяКромка.ШиринаПаза) + (ШиринаДетали - 2 * Строка.УниверсальнаяКромка.ШиринаДетали + 2 * Строка.УниверсальнаяКромка.ШиринаПаза)) * 
					2 / 1000) * КоличествоДеталей, Строка.НомерИзделия);
					
				КонецЕсли;
				
			Иначе 
				
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.УголСоединительныйКАлюминевомуПрофилю, КоличествоДеталей * 4, Строка.НомерИзделия);
				ДобавитьСтроку(ТекущийОбъект, Номенклатура.ВтулкаДистанционнаяАлюминиевая, КоличествоДеталей * 2, Строка.НомерИзделия);
				
				Если ШиринаПаза > ШиринаВставки Тогда
					
					ДобавитьСтроку(ТекущийОбъект, Номенклатура.УплотнительДляАлюминиевогоПрофиля, (((ВысотаДетали - 2 * Строка.УниверсальнаяКромка.ШиринаДетали + 2 * 
					Строка.УниверсальнаяКромка.ШиринаПаза) + (ШиринаДетали - 2 * Строка.УниверсальнаяКромка.ШиринаДетали + 2 * Строка.УниверсальнаяКромка.ШиринаПаза)) * 
					2 / 1000) * КоличествоДеталей, Строка.НомерИзделия);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли; // ФасадСПрофилем
		
		Если ЗначениеЗаполнено(Строка.Петли) Тогда
			
			ДобавитьСтроку(ТекущийОбъект, Строка.Петли, Строка.КоличествоПетель * КоличествоДеталей, Строка.НомерИзделия);
			
		КонецЕсли;
		
		Если ФасадМДФ Тогда
			
			Площадь = ШиринаДетали * КоличествоДеталей / 1000;
			ДобавитьСтроку(ТекущийОбъект, Строка.УниверсальнаяКромка, Площадь, Строка.НомерИзделия);
			
		КонецЕсли;
		
		Если Клееная Тогда
			
			ДобавитьСтроку(ТекущийОбъект, Строка.НоменклатураДляСклеивания, Площадь, Строка.НомерИзделия);
			
		КонецЕсли;
		
		//Считаем кромку
		КромкиСлеваСправа 	= Новый Массив;
		КромкиСверхуСнизу 	= Новый Массив;
		
		Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСверху) Тогда
			
			Если Строка.ПереключательКромкаСверху = "По месту" Тогда
				
				ДобавитьКантПоМесту(ТекущийОбъект, Строка.ВыборМебельнойКромкиСверху, Строка.ШиринаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
				
			Иначе
				
				КромкиСверхуСнизу.Добавить(Строка.ВыборМебельнойКромкиСверху);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСнизу) Тогда
			
			Если Строка.ПереключательКромкаСнизу = "По месту" Тогда
				
				ДобавитьКантПоМесту(ТекущийОбъект, Строка.ВыборМебельнойКромкиСнизу, Строка.ШиринаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
				
			Иначе
				
				КромкиСверхуСнизу.Добавить(Строка.ВыборМебельнойКромкиСнизу);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСлева) Тогда
			
			Если Строка.ПереключательКромкаСлева = "По месту" Тогда
				
				ДобавитьКантПоМесту(ТекущийОбъект, Строка.ВыборМебельнойКромкиСлева, Строка.ВысотаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
				
			Иначе
				
				КромкиСлеваСправа.Добавить(Строка.ВыборМебельнойКромкиСлева);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ВыборМебельнойКромкиСправа) Тогда
			
			Если Строка.ПереключательКромкаСправа = "По месту" Тогда
				
				ДобавитьКантПоМесту(ТекущийОбъект, Строка.ВыборМебельнойКромкиСправа, Строка.ВысотаДетали * Строка.Количество / 1000, Строка.НомерИзделия);
				
			Иначе
				
				КромкиСлеваСправа.Добавить(Строка.ВыборМебельнойКромкиСправа);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Строчка = "";
		
		Для Каждого Строчка Из КромкиСверхуСнизу Цикл
			
			Площадь = ШиринаДетали * КоличествоДеталей / 1000;
			ДобавитьСтроку(ТекущийОбъект, Строчка, Площадь, Строка.НомерИзделия);
			
		КонецЦикла;
		
		Строчка = "";
		
		Для Каждого Строчка Из КромкиСлеваСправа Цикл
			
			Площадь = ВысотаДетали*КоличествоДеталей / 1000;
			ДобавитьСтроку(ТекущийОбъект, Строчка, Площадь, Строка.НомерИзделия);
			
		КонецЦикла;
		
		//Если деталь криволинейная и у нее есть кромка - считаем ее
		КантыИзРедактора = Строка.КантыИзРедактора;
		
		Если ЗначениеЗаполнено(КантыИзРедактора) Тогда 
			
			КантыИзРедактора 	= ЗначениеИзСтрокиВнутр(КантыИзРедактора);
			МассивКантов 	 	= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КантыИзРедактора, "|");
			//МассивКантов.Удалить(МассивКантов.Количество()-1);
			
			Для Каждого Кромка Из МассивКантов Цикл
				
				ПараметрыКанта 			= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Кромка, "_");
				НоменклатурныйНомер 	= ПараметрыКанта[0];
				ДлинаКанта 					= Число(ПараметрыКанта[1]);
				НоменклатураКанта 		= Номенклатура.НайтиПоКоду(НоменклатурныйНомер);
				Площадь 						= ДлинаКанта * КоличествоДеталей / 1000;
				
				Если Клееная Тогда
					
					Площадь = Площадь * 2;
					
				КонецЕсли;
				
				ДобавитьСтроку(ТекущийОбъект, НоменклатураКанта, Площадь, Строка.НомерИзделия);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
#КОНЕЦОБЛАСТИ
	
#ОБЛАСТЬ Ящики
	Для каждого Строка Из ТекущийОбъект.СписокЯщики Цикл
		
		КоличествоЯщиков = Строка.КоличествоЯщиков;
		//Направляющие для ящика
		ДобавитьСтроку(ТекущийОбъект, Строка.НаправляющиеНоменклатура, КоличествоЯщиков, Строка.НомерИзделия);
		
		//Считаем материал стенок, ребер и кромку
		Если Строка.ВидЯщика = Перечисления.ВидыЯщика.Обычный Тогда
			
			ПлощадьКромки 	= (2 * Строка.ШиринаБоковойСтороны + 2 * Строка.ГлубинаЯщика + Строка.ДлинаРебро) * Строка.КоличествоЯщиков / 1000;
			Площадь 			= ((Строка.ШиринаБоковойСтороны * Строка.ВысотаЯщика * 2 + Строка.ГлубинаЯщика * Строка.ВысотаЯщика * 2 +
			Строка.ДлинаРебро * Строка.ВысотаЯщика) / 1000000) * КоличествоЯщиков;
			
		Иначе
			
			ПлощадьКромки 	= (2 * (Строка.ШиринаБоковойСтороны + Строка.ВысотаБоковойСтороны + Строка.ДлинаДно + Строка.ШиринаДно)) * Строка.КоличествоЯщиков/1000;
			Площадь 			= ((Строка.ШиринаБоковойСтороны*Строка.ВысотаБоковойСтороны)/1000000)*КоличествоЯщиков;
			
			Если Строка.ВысотаЯщика > 150 Тогда
				//Рейлинги для МТ и ТБ
				ГруппаРейлингов = ?(Строка.НаправляющиеНоменклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.Метабокс, 
				Справочники.НоменклатурныеГруппы.РейлингПодМетабокс, Справочники.НоменклатурныеГруппы.РейлингПодТандембокс);
				
				РейлингКНаправляющим = НайтиНаправляющиеНоменклатура(ГруппаРейлингов, Строка.НаправляющиеНоменклатура.ДлинаДетали);
				
				Если ЗначениеЗаполнено(РейлингКНаправляющим) Тогда
					ДобавитьСтроку(ТекущийОбъект, РейлингКНаправляющим, ?(Строка.ВысотаЯщика < 201, КоличествоЯщиков, КоличествоЯщиков * 2), Строка.НомерИзделия);
				КонецЕсли;
				
				//Соединители для ТБ
				Если Строка.ВидЯщика = Перечисления.ВидыЯщика.Тандембокс Тогда
					Соединитель = ?(Строка.ВысотаЯщика < 201, Справочники.Номенклатура.СоединительДляТандембокс1шт, Справочники.Номенклатура.СоединительДляТандембокс2шт);
					ДобавитьСтроку(ТекущийОбъект, Соединитель, КоличествоЯщиков, Строка.НомерИзделия);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ДобавитьСтроку(ТекущийОбъект, Строка.КромкаНоменклатура, ПлощадьКромки, Строка.НомерИзделия);
		ДобавитьСтроку(ТекущийОбъект, Строка.Номенклатура, Площадь, Строка.НомерИзделия);
		
		Если Строка.Номенклатура.НоменклатурнаяГруппа = НомГруппаЛДСП16 Тогда
			
			МетровЛДСП = МетровЛДСП + Площадь;
			
		КонецЕсли;
		
		Площадь = Строка.ДлинаДно * Строка.ШиринаДно * КоличествоЯщиков / 1000000;
		ДобавитьСтроку(ТекущийОбъект, Строка.ДноНоменклатура, Площадь, Строка.НомерИзделия);
		
		//Добавляем фасады: материал, кромку и ручки
		Если Строка.ВидФасада <> "Нет" Тогда
			
			Если Строка.ФасадНоменклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ЛДСП16 ИЛИ
				Строка.ФасадНоменклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.МДФ18 Тогда
				
				Площадь 		= Строка.ШиринаФасад*Строка.ВысотаФасад * КоличествоЯщиков / 1000000;
				МетровЛДСП 	= МетровЛДСП + Площадь;
				
			Иначе
				
				Площадь = (2 * Строка.ШиринаФасад + 2 * Строка.ВысотаФасад) * КоличествоЯщиков / 1000;
				
			КонецЕсли;
		
			ДобавитьСтроку(ТекущийОбъект, Строка.ФасадНоменклатура, Площадь, Строка.НомерИзделия);
			
			//Ручки для ящиков
			Если Строка.КоличествоРучек > 0 Тогда
				
				Площадь = Строка.КоличествоРучек*КоличествоЯщиков;
				ДобавитьСтроку(ТекущийОбъект, Строка.РучкаНоменклатура, Площадь, Строка.НомерИзделия);
				
			КонецЕсли;
			
			Площадь = ?(Строка.ФасадНоменклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ЛДСП16, 
			(2 * Строка.ШиринаФасад + 2 * Строка.ВысотаФасад) * Строка.КоличествоЯщиков / 1000, ((Строка.ШиринаФасад - Строка.КромкаФасадНоменклатура.ГлубинаДетали) * (Строка.ВысотаФасад - Строка.КромкаФасадНоменклатура.ГлубинаДетали)) * Строка.КоличествоЯщиков / 1000000);
			ДобавитьСтроку(ТекущийОбъект, Строка.КромкаФасадНоменклатура, Площадь, Строка.НомерИзделия);
			
		КонецЕсли;
		
	КонецЦикла;
#КОНЕЦОБЛАСТИ
	
	ТекущийОбъект.КоличествоМетровЛДСП = МетровЛДСП;
	
	//Добавляем номенклатуру из комплектации
	Для каждого Строка Из ТекущийОбъект.Комплектация Цикл
		
		ДобавитьСтроку(ТекущийОбъект, Строка.Номенклатура, Строка.Количество, Строка.НомерИзделия);
		
	КонецЦикла;
	
	//Добавляем номенклатуру из Каталога
	//---------------------------------------------------------------01.11.13 ДопЭлементы идут через комплектация
	//Для каждого Строка Из ТекущийОбъект.СписокИзделийПоКаталогу Цикл
	//	
	//	// Доп элемент в Список номенклатуры
	//	СписокДопЭлементов = Строка.Изделие.СписокДопЭлементов;
	//	Если СписокДопЭлементов.Количество() > 0 И ЗначениеЗаполнено(Строка.СтрокаДопЭлементов) Тогда
	//		ПараметрыДопЭлементов = ЗначениеИзСтрокиВнутр(Строка.СтрокаДопЭлементов);
	//		
	//		Для Каждого Элемент Из ПараметрыДопЭлементов Цикл
	//			ДобавитьСтроку(ТекущийОбъект, Элемент.НоменклатураДопЭлемента, 1, Строка.НомерСтроки);
	//		КонецЦикла;
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	//Добавляем номенклатуру из дверей
	Для каждого Строка Из ТекущийОбъект.СписокДверей Цикл
		
		ТаблицаНоменклатурыДверей = Строка.Двери.Номенклатура;
		ДобавитьСтроку(ТекущийОбъект, Справочники.Номенклатура.КлючШестигранный, 1, 0);
		
		Для каждого СтрокаНоменклатуры Из ТаблицаНоменклатурыДверей Цикл
			
			ДобавитьСтроку(ТекущийОбъект, СтрокаНоменклатуры.Номенклатура, СтрокаНоменклатуры.КоличествоСОтходом, 0);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецФункции // ЗаполнитьМатериалы()

&НаСервере
Процедура ДобавитьКантПоМесту(ТекущийОбъект, Номенклатура, Площадь, НомерИзделия)
	
	Если НЕ Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда
		
		НоваяСтрока 								= ТекущийОбъект.СписокНоменклатуры.Добавить();
		НоваяСтрока.Номенклатура 			= Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения 	= НоваяСтрока.Номенклатура.ЕдиницаИзмерения;
		НоваяСтрока.Количество 			= Площадь;
		НоваяСтрока.НомерИзделия 		= НомерИзделия;
		НоваяСтрока.ЧерезСклад 			= Истина;
		
	Иначе
		
		Сообщить("Не заполнена номенклатура канта, устанавлевоемого по месту", СтатусСообщения.ОченьВажное);
		
	КонецЕсли;
		
КонецПроцедуры // ДобавитьКантПоМесту()

&НаСервере
Процедура ДобавитьСтроку(ТекущийОбъект, Номенклатура, Площадь, НомерИзделия)
	
	Если НЕ Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда
		НоваяСтрока 								= ТекущийОбъект.СписокНоменклатуры.Добавить();
		НоваяСтрока.Номенклатура 			= Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения 	= НоваяСтрока.Номенклатура.ЕдиницаИзмерения;
		НоваяСтрока.Количество 			= Площадь;
		НоваяСтрока.НомерИзделия 		= НомерИзделия;
		МестоОбработки 						= Номенклатура.МестоОбработки;
		
		Если МестоОбработки = Перечисления.МестоОбработки.Склад 
			ИЛИ МестоОбработки = Перечисления.МестоОбработки.ПоКаталогуВЦех и НомерИзделия <> НЕОПРЕДЕЛЕНО Тогда
			
			НоваяСтрока.ЧерезСклад = Истина;
			
			//НоваяСтрока 								= ТекущийОбъект.СкладГотовойПродукции.Добавить();
			//НоваяСтрока.Номенклатура 			= Номенклатура;
			//НоваяСтрока.ЕдиницаИзмерения 	= НоваяСтрока.Номенклатура.ЕдиницаИзмерения;
			//НоваяСтрока.Количество 			= Площадь;
			
		Иначе
			
			НоваяСтрока.ЧерезСклад = Ложь;
			
		КонецЕсли;
		
	Иначе
		
		Сообщить("Найдена деталь с незаполненной номенклатурой", СтатусСообщения.ОченьВажное);
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтроку()

&НаСервере
Процедура ЗаполнитьСтоимость(ТекущийОбъект)
	
	Дата 										= ТекущийОбъект.Дата;
	Контрагент 							= ТекущийОбъект.Контрагент;
	Подразделение 						= ТекущийОбъект.Подразделение;
	ТаблицаСпискаНоменклатуры 	= ТекущийОбъект.СписокНоменклатуры.Выгрузить();
	КоэфициентОфиса 					= ?(ЗначениеЗаполнено(ТекущийОбъект.Офис.Коэффициент), ТекущийОбъект.Офис.Коэффициент, 1);
	СтоимостьДокумента 				= 0;
	Запрос 									= Новый Запрос;
	
	Для каждого Строка Из ТаблицаСпискаНоменклатуры Цикл
		
		ПроцентОтхода = Строка.Номенклатура.ПроцентОтхода;
		
		Если ПроцентОтхода > 0 Тогда
			
			Строка.Количество = Строка.Количество + Строка.Количество * 0.01 * ПроцентОтхода;
			
		КонецЕсли;
	
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТаблицаСпискаНоменклатуры", ТаблицаСпискаНоменклатуры);
	Запрос.УстановитьПараметр("Регион", ТекущийОбъект.Подразделение.Регион);
	Запрос.УстановитьПараметр("Коэффициент", КоэфициентОфиса);
	Запрос.УстановитьПараметр("СкидкаНаУслуги", Объект.СкидкаНаУслуги);
	Запрос.УстановитьПараметр("СкидкаНаМатериал", Объект.СкидкаНаМатериалы);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСпискаНоменклатуры.Номенклатура,
	|	ТаблицаСпискаНоменклатуры.Количество,
	|	ТаблицаСпискаНоменклатуры.ЕдиницаИзмерения,
	|	ТаблицаСпискаНоменклатуры.Цена,
	|	ТаблицаСпискаНоменклатуры.ЗарплатаЦеха,
	|	ТаблицаСпискаНоменклатуры.НомерИзделия,
	//
	|	ТаблицаСпискаНоменклатуры.НомерСтроки,
	//
	|	ТаблицаСпискаНоменклатуры.ЧерезСклад,
	|	ТаблицаСпискаНоменклатуры.РозничнаяСтоимость
	|ПОМЕСТИТЬ ТаблицаСпискаНоменклатуры
	|ИЗ
	|	&ТаблицаСпискаНоменклатуры КАК ТаблицаСпискаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСпискаНоменклатуры.Номенклатура
	|ПОМЕСТИТЬ СписокНоменклатуры
	|ИЗ
	|	ТаблицаСпискаНоменклатуры КАК ТаблицаСпискаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСпискаНоменклатуры.Номенклатура,
	|	СУММА(ТаблицаСпискаНоменклатуры.Количество),
	|	МИНИМУМ(ТаблицаСпискаНоменклатуры.НомерИзделия),
	|	МИНИМУМ(ТаблицаСпискаНоменклатуры.ЧерезСклад),
	|	МИНИМУМ(ВЫБОР
	|		КОГДА ТаблицаСпискаНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|			ТОГДА (ЕСТЬNULL(РозничныеЦены.Розничная, 0) - ЕСТЬNULL(РозничныеЦены.Розничная, 0) * 0.01 * &СкидкаНаМатериал) * &Коэффициент
	|		ИНАЧЕ (ЕСТЬNULL(РозничныеЦены.Розничная, 0) - ЕСТЬNULL(РозничныеЦены.Розничная, 0) * 0.01 * &СкидкаНаУслуги) * &Коэффициент 
	|	КОНЕЦ) КАК Цена,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаСпискаНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|			ТОГДА (ЕСТЬNULL(РозничныеЦены.Розничная, 0) * ТаблицаСпискаНоменклатуры.Количество - ЕСТЬNULL(РозничныеЦены.Розничная, 0) * ТаблицаСпискаНоменклатуры.Количество * 0.01 * &СкидкаНаМатериал) * &Коэффициент
	|		ИНАЧЕ (ЕСТЬNULL(РозничныеЦены.Розничная, 0) * ТаблицаСпискаНоменклатуры.Количество - ЕСТЬNULL(РозничныеЦены.Розничная, 0) * ТаблицаСпискаНоменклатуры.Количество * 0.01 * &СкидкаНаУслуги) * &Коэффициент 
	|	КОНЕЦ) КАК РозничнаяСтоимость,
	|	МИНИМУМ(ТаблицаСпискаНоменклатуры.ЕдиницаИзмерения),
	//
	|ВЫБОР 
	|	КОГДА ТаблицаСпискаНоменклатуры.ЕдиницаИзмерения.Дробный ТОГДА ТаблицаСпискаНоменклатуры.НомерСтроки
	|		ИНАЧЕ 0
	|	КОНЕЦ как Номерок,
	//
	|	СУММА(ЕСТЬNULL(РозничныеЦены.Внутренняя, 0) * ТаблицаСпискаНоменклатуры.Количество) КАК ВнутренняяСтоимость,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаСпискаНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
	|			ТОГДА ЕСТЬNULL(РозничныеЦены.ПлановаяЗакупочная, 0) * ТаблицаСпискаНоменклатуры.Количество * &Коэффициент
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК ЗарплатаЦеха
	|ИЗ
	|	ТаблицаСпискаНоменклатуры КАК ТаблицаСпискаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				,
	|				Регион = &Регион
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							СписокНоменклатуры.Номенклатура
	|						ИЗ
	|							СписокНоменклатуры КАК СписокНоменклатуры)) КАК РозничныеЦены
	|		ПО ТаблицаСпискаНоменклатуры.Номенклатура = РозничныеЦены.Номенклатура
	//";
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР 
	|		КОГДА ЕдиницаИзмерения.Дробный ТОГДА ТаблицаСпискаНоменклатуры.НомерСтроки
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|	ТаблицаСпискаНоменклатуры.Номенклатура";
	
	////////////////////////////////////////////////////////
	// dmn
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("Номенклатура", Справочники.Номенклатура.РозничнаяНаценка);
	НайденныеСтроки = Таблица.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() = 1 Тогда // по идее должна быть всего одна строка
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период", Объект.Дата);
		Запрос.УстановитьПараметр("Изделие", Объект.Изделие);
		Запрос.УстановитьПараметр("Офис", Объект.Офис);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НаценкиНаИзделияСрезПоследних.Наценка
		|ИЗ
		|	РегистрСведений.НаценкиНаИзделия.СрезПоследних(
		|			&Период,
		|			ВидИзделия = &Изделие
		|				И Офис = &Офис) КАК НаценкиНаИзделияСрезПоследних";
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			НайденныеСтроки[0].Цена = Выборка.Наценка;
			НайденныеСтроки[0].РозничнаяСтоимость = Выборка.Наценка;
		КонецЕсли;
	КонецЕсли;
	
	ТекущийОбъект.СписокНоменклатуры.Загрузить(Таблица);
	
	////////////////////////////////////////////////////////
	
КонецПроцедуры 

&НаСервере
Функция ДобавитьУслугуКромления(ТекущийОбъект, Кромка, ШиринаДетали, Столешница, НомерИзделия)
	
	Если Столешница Тогда
		
		Услуга = Справочники.Номенклатура.КромлениеСтолешницыПристенка;
		
	Иначе
		
		Если Кромка.ГлубинаДетали < 1 Тогда
			Услуга = Справочники.Номенклатура.КромлениеТонкойКромки;
		Иначе
			Услуга = Справочники.Номенклатура.КромлениеТолстойКромки;
		КонецЕсли;
		
	КонецЕсли;
	
	ДобавитьСтроку(ТекущийОбъект, Услуга, ШиринаДетали / 1000, НомерИзделия);
	
КонецФункции // ДобавитьУслугуКромления()

&НаСервереБезКонтекста
Функция СравнитьНоменклатурнуюГруппу(НоменклатурнаяГруппа)
	
	НоменклатурныеГруппы = Справочники.НоменклатурныеГруппы;
	
	Если  НоменклатурнаяГруппа = НоменклатурныеГруппы.Кромка045_19 ИЛИ 
		НоменклатурнаяГруппа = НоменклатурныеГруппы.Кромка2_19 ИЛИ 
		НоменклатурнаяГруппа = НоменклатурныеГруппы.Кромка2_35 или
		НоменклатурнаяГруппа = НоменклатурныеГруппы.КромкаМДФ Тогда
		
		Кромка = "Обычная";
		
	ИначеЕсли НоменклатурнаяГруппа = НоменклатурныеГруппы.КромкаСтолешница Тогда
		
		Кромка = "ДляСтолешниц";
		
	ИначеЕсли НоменклатурнаяГруппа = НоменклатурныеГруппы.КантАлюминиевый Тогда
		
		Кромка = "ОкантовкаАлюминием";
		
	Иначе
		
		Кромка = "Окантовка";
		
	КонецЕсли;
	
	Возврат Кромка;
	
КонецФункции // СравнитьНоменклатурнуюГруппу()

&НаСервере
Процедура ОбработкаИзделийПоКаталогу()
	
	КоличествоИзделий = Объект.СписокИзделийПоКаталогу.Количество();
	
	Для Каждого Элемент Из Объект.СписокИзделийПоКаталогу Цикл
		//Размеры изделия
		ШиринаИзделия = Элемент.ШиринаИзделия;
		ВысотаИзделия = Элемент.ВысотаИзделия;
		ГлубинаИзделия = Элемент.ГлубинаИзделия;
		Если ЗначениеЗаполнено(Элемент.Столешница) Тогда
			Столешница = Элемент.Столешница.ГлубинаДетали;
		Иначе
			Столешница = 0;
		КонецЕсли;
		
		///////////////////////////////////////////////////////////////////Список Номенклатуры//////////////////////////////////////////////////////////////////////////////////////
		//Список номенклатуры Каталога изделий в ТЧ Комплектация
		СписокНоменклатурыИзделия = Элемент.Изделие.СписокНоменклатуры;
		Для Каждого Строка Из СписокНоменклатурыИзделия Цикл
			НоваяСтрока = Объект.Комплектация.Добавить();
			НоваяСтрока.Номенклатура = Строка.Номенклатура;
			Попытка
				Выполнить("НоваяСтрока.Количество = " + Строка.Количество);
			Исключение
				Текст = "Ошибка при формировании формул списка номенклатуры каталога изделий";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			КонецПопытки;
			НоваяСтрока.ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаИзмерения;
			НоваяСтрока.НомерИзделия = Элемент.НомерСтроки;
		КонецЦикла;
		
		//Доп Элементы в Список номенклатуры
		СписокДопЭлементов = Элемент.Изделие.СписокДопЭлементов;
		Если СписокДопЭлементов.Количество() > 0 И ЗначениеЗаполнено(Элемент.СтрокаДопЭлементов) Тогда
			ПараметрыДопЭлементов = ЗначениеИзСтрокиВнутр(Элемент.СтрокаДопЭлементов);
			
			Для Каждого Строка Из ПараметрыДопЭлементов Цикл	
				НоваяСтрока = Объект.Комплектация.Добавить();
				НоваяСтрока.Номенклатура = Строка.НоменклатураДопЭлемента;
				Если НЕ ЗначениеЗаполнено(НоваяСтрока.Номенклатура) Тогда
					Текст = "Внимание! Номенклатура к доп элементу не заполнена у " + Элемент.Изделие;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
				КонецЕсли;
				НоваяСтрока.Количество = 1;
				НоваяСтрока.ЕдиницаИзмерения = Строка.НоменклатураДопЭлемента.ЕдиницаИзмерения;
				НоваяСтрока.НомерИзделия = Элемент.НомерСтроки;
			КонецЦикла;
		КонецЕсли;
		
		///////////////////////////////////////////////////////////////////Материалы//////////////////////////////////////////////////////////////////////////////////////
		СписокМатериалыИзделия = Элемент.Изделие.СписокМатериалы;
		Если ЗначениеЗаполнено(Элемент.СтрокаФасады) Тогда
			ПараметрыФасадов = ЗначениеИзСтрокиВнутр(Элемент.СтрокаФасады);
		КонецЕсли;
		
		Для Каждого Строка Из СписокМатериалыИзделия Цикл
			
			ЭтоФасад = Ложь;
			
			Если ЗначениеЗаполнено(Элемент.СтрокаФасады) Тогда
				СтрокаФасада = ПараметрыФасадов.Найти(Строка.НомерСтроки, "НомерДетали");
				Если ЗначениеЗаполнено(СтрокаФасада) Тогда
					Материал = СтрокаФасада.ВидФасада;
					НоменклатураФасад = СтрокаФасада.Номенклатура;
					Кромка = СтрокаФасада.Кромка;
					РучкаФасада = СтрокаФасада.Ручка;
					ЭтоФасад = Истина;
				КонецЕсли;
			КонецЕсли;
			
			НоваяСтрока = Объект.СписокМатериалы.Добавить();
			НоваяСтрока.Материал = ?(ЭтоФасад, Материал, Строка.Материал);
			Если ЗначениеЗаполнено(Строка.ВысотаДетали) И ЗначениеЗаполнено(Строка.ШиринаДетали) Тогда
				Попытка
					Выполнить("НоваяСтрока.ВысотаДетали = " + Строка.ВысотаДетали);
					Выполнить("НоваяСтрока.ШиринаДетали = " + Строка.ШиринаДетали);
				Исключение
					Текст = "Ошибка при формировании формул для материалов каталога изделий";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
				КонецПопытки;
			КонецЕсли;
			НоваяСтрока.Количество = Строка.Количество;
			
			КромкаНоменклатуры = Неопределено;
			
			Если Строка.Материал = "10 ЛДСП" ИЛИ Строка.Материал = "16 ЛДСП" ИЛИ Строка.Материал = "10 ЛДСП+10 ЛДСП" 
				ИЛИ Строка.Материал = "16 ЛДСП+10 ЛДСП" ИЛИ Строка.Материал = "16 ЛДСП+16 ЛДСП" Тогда
				НоваяСтрока.Номенклатура = Элемент.НоменклатураЛДСП;
				КромкаНоменклатуры = Элемент.КромкаЛДСП;
				Если Строка.Материал = "10 ЛДСП+10 ЛДСП" ИЛИ Строка.Материал = "16 ЛДСП+10 ЛДСП" ИЛИ Строка.Материал = "16 ЛДСП+16 ЛДСП" Тогда
					НоваяСтрока.НоменклатураДляСклеивания = Элемент.НоменклатураДляСклеивания;
				КонецЕсли;
			ИначеЕсли Строка.Материал = "ДВП" Тогда
				НоваяСтрока.Номенклатура = Элемент.НоменклатураДВП;
			ИначеЕсли Строка.Материал = "Столешница" Тогда
				НоваяСтрока.Номенклатура = Элемент.Столешница;
			ИначеЕсли Строка.Материал = "Стекло" Тогда
				НоваяСтрока.Номенклатура = Элемент.НоменклатураСтекло;
			ИначеЕсли Строка.Материал = "МДФ" Тогда
				НоваяСтрока.Номенклатура = Элемент.НоменклатураМДФ;
			ИначеЕсли Строка.Материал = "Пристенок" Тогда
				НоваяСтрока.Номенклатура = Элемент.Пристенок;	
			ИначеЕсли ЭтоФасад Тогда
				НоваяСтрока.Номенклатура = НоменклатураФасад;	
				КромкаНоменклатуры =  Кромка;
				
				ПетляДоступна = Ложь;
				Если ЗначениеЗаполнено(Строка.Петли) Тогда
					Если Материал = "ФасадСтеклянныйЗакругленный" Тогда
						ПетляДоступна = Строка.Петли.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПетлиПоворотные;
					ИначеЕсли Материал = "ФасадСтеклянный" Тогда
						ПетляДоступна = Строка.Петли.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПетлиДляСтеколБезДоводчика
						ИЛИ Строка.Петли.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПетлиДляСтеколСДоводчиком
						ИЛИ Строка.Петли.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПетлиПоворотные;
					Иначе
						ПетляДоступна = Строка.Петли.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПетлиБезДоводчика
						ИЛИ Строка.Петли.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПетлиСДоводчиком;
					КонецЕсли;
					
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("Номенклатура", Строка.Петли);
					СтруктураПоиска.Вставить("Подразделение", Объект.Подразделение);
					Если ПетляДоступна Тогда
						ПетляДоступна = РегистрыСведений.НоменклатураПодразделений.Получить(СтруктураПоиска).Доступность;
					КонецЕсли;
				КонецЕсли;
				
				НоваяСтрока.Петли = ?(ПетляДоступна, Строка.Петли, Неопределено);
				НоваяСтрока.КоличествоПетель = ?(ПетляДоступна, Строка.КоличествоПетель, 0);
				НоваяСтрока.РадиусФасада = ?(Материал = "ФасадСтеклянныйЗакругленный", Строка.РадиусФасада, "");
				НоваяСтрока.ПоложениеРучки = Строка.ПоложениеРучки;
				Если ЗначениеЗаполнено(Строка.ПоложениеРучки) Тогда
					НоваяСтрока.НоменклатураДляСклеивания = РучкаФасада;
				КонецЕсли;
			КонецЕсли;
			
			ТорцеваяЛента	= Новый Структура;
			ТорцеваяЛента.Вставить("ТорцеваяЛентаСверху", Справочники.Номенклатура.ПустаяСсылка());
			ТорцеваяЛента.Вставить("ТорцеваяЛентаСнизу", Справочники.Номенклатура.ПустаяСсылка());
			ТорцеваяЛента.Вставить("ТорцеваяЛентаСлева", Справочники.Номенклатура.ПустаяСсылка());
			ТорцеваяЛента.Вставить("ТорцеваяЛентаСправа", Справочники.Номенклатура.ПустаяСсылка());
			
			Если ЗначениеЗаполнено(КромкаНоменклатуры) Тогда
				ПереключательКромка = "Нет"; 
				Если КромкаНоменклатуры.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.КантП
					ИЛИ КромкаНоменклатуры.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.КантТ Тогда
					НоваяСтрока.Кант = КромкаНоменклатуры;
					ПереключательКромка = "Кант";
				ИначеЕсли КромкаНоменклатуры.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.Кромка2_19
					ИЛИ КромкаНоменклатуры.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.Кромка2_35 Тогда
					НоваяСтрока.Кромка2мм = КромкаНоменклатуры;
					ПереключательКромка = "2";
				ИначеЕсли КромкаНоменклатуры.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.Кромка045_19 Тогда	
					НоваяСтрока.Кромка045мм = КромкаНоменклатуры;
					ПереключательКромка = "0.45";
				ИначеЕсли КромкаНоменклатуры.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.АГТПрофиль
					ИЛИ КромкаНоменклатуры.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.КромкаМДФ
					ИЛИ КромкаНоменклатуры.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.РамочныйАлюминий Тогда	
					НоваяСтрока.УниверсальнаяКромка = КромкаНоменклатуры;
					ПереключательКромка = "УниверсальнаяКромка";
				КонецЕсли;	
				
				Если Строка.КромкаСверху Тогда
					НоваяСтрока.ПереключательКромкаСверху = ПереключательКромка;
					НоваяСтрока.ВыборМебельнойКромкиСверху = КромкаНоменклатуры;
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСверху", КромкаНоменклатуры);
				КонецЕсли;
				Если Строка.КромкаСлева Тогда
					НоваяСтрока.ПереключательКромкаСлева = ПереключательКромка;
					НоваяСтрока.ВыборМебельнойКромкиСлева = КромкаНоменклатуры;
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСлева", КромкаНоменклатуры);
				КонецЕсли;
				Если Строка.КромкаСнизу Тогда
					НоваяСтрока.ПереключательКромкаСнизу = ПереключательКромка;
					НоваяСтрока.ВыборМебельнойКромкиСнизу = КромкаНоменклатуры;
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСнизу", КромкаНоменклатуры);
				КонецЕсли;
				Если Строка.КромкаСправа Тогда
					НоваяСтрока.ПереключательКромкаСправа = ПереключательКромка;	
					НоваяСтрока.ВыборМебельнойКромкиСправа = КромкаНоменклатуры;
					ТорцеваяЛента.Вставить("ТорцеваяЛентаСправа", КромкаНоменклатуры);
				КонецЕсли;
			КонецЕсли;
			
			// Размеры с учетов кромки
			СтруктураРазмеров = Документы.Спецификация.ПолучитьРазмерыМатериалов(НоваяСтрока.Номенклатура, ТорцеваяЛента);
			НоваяСтрока.ВысотаДетали = НоваяСтрока.ВысотаДетали -  СтруктураРазмеров.ВычитаемоеДляВысоты;
			НоваяСтрока.ШиринаДетали = НоваяСтрока.ШиринаДетали - СтруктураРазмеров.ВычитаемоеДляШирины;
						
			Если ЗначениеЗаполнено(Строка.РадиусЛевоВерх)Тогда
				Попытка
					Выполнить("R1 = " + Строка.РадиусЛевоВерх);
				Исключение
					Текст = "Ошибка при формировании формул радиусов для материалов каталога изделий";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
				КонецПопытки;
			Иначе
				R1 = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.РадиусПравоВерх)Тогда
				Попытка
					Выполнить("R2 = " + Строка.РадиусПравоВерх);
				Исключение
					Текст = "Ошибка при формировании формул радиусов для материалов каталога изделий";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
				КонецПопытки;
			Иначе
				R2 = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.РадиусПравоНиз)Тогда
				Попытка
					Выполнить("R3 = " + Строка.РадиусПравоНиз);
				Исключение
					Текст = "Ошибка при формировании формул радиусов для материалов каталога изделий";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
				КонецПопытки;
			Иначе
				R3 = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.РадиусЛевоНиз)Тогда
				Попытка
					Выполнить("R4 = " + Строка.РадиусЛевоНиз);
				Исключение
					Текст = "Ошибка при формировании формул радиусов для материалов каталога изделий";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
				КонецПопытки;
			Иначе
				R4 = 0;
			КонецЕсли;
				
			НоваяСтрока.РадиусЛевоВерх = R1 - (R1 % 50);
			НоваяСтрока.РадиусПравоВерх = R2 - (R2 % 50);
			НоваяСтрока.РадиусПравоНиз = ?(Строка.Срез, R3, R3 - (R3 % 50));   
			НоваяСтрока.РадиусЛевоНиз = R4 - (R4 % 50);
			НоваяСтрока.Срез = Строка.Срез;
			
			НоваяСтрока.СтруктураОтверстий = Строка.СтруктураОтверстий;
			
			НоваяСтрока.Периметр = 2 * (НоваяСтрока.ВысотаДетали + НоваяСтрока.ШиринаДетали - R1 - R2 - R3 - R4) + Окр(3.14159 * (R1 + R2 + R3 + R4) / 2);
			НоваяСтрока.ДлинаКривогоПила = Окр(3.14159 * (R1 + R2 + R3 + R4) / 2);
			
			НоваяСтрока.РасположениеПазов = Строка.РасположениеПазов;
			НоваяСтрока.ДиаметрПазов = Строка.ДиаметрПазов;
			
			НоваяСтрока.Обтачивать = Строка.Обтачивать;
			НоваяСтрока.Скругление = Строка.Скругление;
			НоваяСтрока.Идентификатор = Строка.Идентификатор;
			НоваяСтрока.НомерИзделия = Элемент.НомерСтроки;	
			
		КонецЦикла;
		///////////////////////////////////////////////////////////////////ЯЩИКИ//////////////////////////////////////////////////////////////////////////////////////
		СписокЯщикиИзделия = Элемент.Изделие.СписокЯщики;
		Если СписокЯщикиИзделия.Количество() > 0 И ЗначениеЗаполнено(Элемент.СтрокаЯщики) Тогда
			ПараметрыЯщиков = ЗначениеИзСтрокиВнутр(Элемент.СтрокаЯщики);
		КонецЕсли;
		
		Для Каждого Строка Из СписокЯщикиИзделия Цикл
			НоваяСтрока = Объект.СписокЯщики.Добавить();
			
			Попытка
				Выполнить("НоваяСтрока.ГлубинаЯщика = " + Строка.ГлубинаЯщика);
				Выполнить("НоваяСтрока.ПроемЯщика = " + Строка.ПроемЯщика);
				Выполнить("НоваяСтрока.ВысотаЯщика = " + Строка.ВысотаЯщика);		
			Исключение
				Текст = "Ошибка при формировании формул для ящиков каталога изделий";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			КонецПопытки;
			
			СтрокаПоиска = ПараметрыЯщиков.Получить(Строка.НомерСтроки - 1);//Строка.ИмяЯщика);
			Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
				НоваяСтрока.ВидЯщика = СтрокаПоиска.ВидЯщика;
				НоваяСтрока.НаправляющиеНоменклатура = НайтиНаправляющиеНоменклатура(СтрокаПоиска.Направляющие, НоваяСтрока.ГлубинаЯщика);
				Если НЕ ЗначениеЗаполнено(НоваяСтрока.НаправляющиеНоменклатура) Тогда
					Текст = "Внимание! Направляющая не найдена у " + Элемент.Изделие;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
				КонецЕсли;
				НоваяСтрока.ГлубинаЯщика = НоваяСтрока.НаправляющиеНоменклатура.ДлинаДетали;
			КонецЕсли;
			
			//Количество боковых сторон у обычного ящика 4, а у Тбокса и МТбокса 2 остальные стороны нулевые
			Если НоваяСтрока.ВидЯщика = Перечисления.ВидыЯщика.Обычный Тогда
				Если ЗначениеЗаполнено(НоваяСтрока.НаправляющиеНоменклатура) Тогда
					Если НоваяСтрока.НаправляющиеНоменклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НаправляющиеШариковыеСДоводчиком Тогда
						НоваяСтрока.ШиринаБоковойСтороны = НоваяСтрока.ПроемЯщика - 60; 
						НоваяСтрока.ШиринаДно = НоваяСтрока.ПроемЯщика - 30;
					Иначе
						НоваяСтрока.ШиринаБоковойСтороны = НоваяСтрока.ПроемЯщика - 58; 
						НоваяСтрока.ШиринаДно = НоваяСтрока.ПроемЯщика - 28;
					КонецЕсли;
				КонецЕсли;			
				НоваяСтрока.ВысотаБоковойСтороны = НоваяСтрока.ВысотаЯщика;
				НоваяСтрока.ДлинаБоковойСтороны = НоваяСтрока.ГлубинаЯщика;
				НоваяСтрока.ДлинаДно = НоваяСтрока.ГлубинаЯщика - 2;
				//Ребро? [Наличие ребра указываем после заполнения спецификации по желанию]
				//НоваяСтрока.ДлинаРебро =
				НоваяСтрока.ДноНоменклатура = Элемент.НоменклатураДВП;
			ИначеЕсли НоваяСтрока.ВидЯщика = Перечисления.ВидыЯщика.Тандембокс Тогда
				НоваяСтрока.ШиринаБоковойСтороны = НоваяСтрока.ПроемЯщика - 93;
				НоваяСтрока.ШиринаДно = НоваяСтрока.ПроемЯщика - 87;
				НоваяСтрока.ДноНоменклатура = Элемент.НоменклатураЛДСП;
				
				Если НоваяСтрока.ВысотаЯщика > 86 И НоваяСтрока.ВысотаЯщика < 151 Тогда 
					НоваяСтрока.ВысотаБоковойСтороны = 70;
				ИначеЕсли НоваяСтрока.ВысотаЯщика > 150 И НоваяСтрока.ВысотаЯщика < 201 Тогда 
					НоваяСтрока.ВысотаБоковойСтороны = 130;
				ИначеЕсли НоваяСтрока.ВысотаЯщика > 200 Тогда 
					НоваяСтрока.ВысотаБоковойСтороны = 190; 
				КонецЕсли;
				
				НоваяСтрока.ДлинаБоковойСтороны = 0;
				НоваяСтрока.ДлинаДно = НоваяСтрока.ГлубинаЯщика - 5;
				
			ИначеЕсли НоваяСтрока.ВидЯщика = Перечисления.ВидыЯщика.Метабокс Тогда
				НоваяСтрока.ШиринаБоковойСтороны = НоваяСтрока.ПроемЯщика - 30; 
				НоваяСтрока.ШиринаДно = НоваяСтрока.ПроемЯщика - 30;
				НоваяСтрока.ДноНоменклатура = Элемент.НоменклатураЛДСП;
				
				Если НоваяСтрока.ВысотаЯщика > 86 И НоваяСтрока.ВысотаЯщика < 151 Тогда 
					НоваяСтрока.ВысотаБоковойСтороны = 80; 
				ИначеЕсли НоваяСтрока.ВысотаЯщика > 150 И НоваяСтрока.ВысотаЯщика < 201 Тогда 
					НоваяСтрока.ВысотаБоковойСтороны = 120; 
				ИначеЕсли НоваяСтрока.ВысотаЯщика > 200 Тогда 
					НоваяСтрока.ВысотаБоковойСтороны = 200; 
				КонецЕсли;
				
				НоваяСтрока.ДлинаБоковойСтороны = 0;
				НоваяСтрока.ДлинаДно = НоваяСтрока.ГлубинаЯщика - 5;
				
			КонецЕсли;
			
			НоваяСтрока.Номенклатура = Элемент.НоменклатураЛДСП; 
			НоваяСтрока.КоличествоЯщиков =  Строка.КоличествоЯщиков;
			НоваяСтрока.КромкаНоменклатура = Элемент.КромкаЛДСП;
			
			НоваяСтрока.ВидФасада = Строка.ВидФасада;
			Если НоваяСтрока.ВидФасада <> "Нет" Тогда
				Попытка
					ШиринаФасад = 0; 
					ВысотаФасад = 0;
					Выполнить("ШиринаФасад = " + Строка.ШиринаФасада);
					Выполнить("ВысотаФасад = " + Строка.ВысотаФасада);
					НоваяСтрока.ШиринаФасад = Окр(ШиринаФасад, 0, РежимОкругления.Окр15как10);
					НоваяСтрока.ВысотаФасад = Окр(ВысотаФасад, 0, РежимОкругления.Окр15как10);
				Исключение
					Текст = "Ошибка при формировании формул для фасадов ящика каталога изделий";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
				КонецПопытки;
				
				НоваяСтрока.ФасадНоменклатура = СтрокаПоиска.Фасад;
				НоваяСтрока.КромкаФасадНоменклатура = СтрокаПоиска.КромкаФасада;
				НоваяСтрока.РучкаНоменклатура =  СтрокаПоиска.Ручка;
				НоваяСтрока.КоличествоРучек =  1;
			КонецЕсли;
			НоваяСтрока.НомерИзделия = Элемент.НомерСтроки;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НайтиНаправляющиеНоменклатура(НоменклатурнаяГруппа, ГлубинаЯщика) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	спрНоменклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК спрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураПодразделений КАК НоменклатураПодразделений
	|		ПО (НоменклатураПодразделений.Номенклатура = спрНоменклатура.Ссылка)
	|ГДЕ
	|	спрНоменклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
	|	И спрНоменклатура.ДлинаДетали <= &ДлинаДетали
	|	И НоменклатураПодразделений.Подразделение = &Подразделение
	|	И НоменклатураПодразделений.Доступность
	|
	|УПОРЯДОЧИТЬ ПО
	|	спрНоменклатура.ДлинаДетали УБЫВ";
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("ДлинаДетали", ГлубинаЯщика);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Если Выборка.Количество() > 0 Тогда
		Возврат Выборка[0].Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПерезаполнитьТаблицу(Таблица) 
	
	Количество = Таблица.Количество();
	Если Количество > 0 Тогда
		Для индекс = 1 По Количество Цикл
			Элемент = Таблица[Количество - индекс];
			Если Элемент.НомерИзделия > 0 Тогда
				Таблица.Удалить(Элемент);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СтатусСпецификации = Документы.Спецификация.ПолучитьСтатусСпецификации(Объект.Ссылка);
	
	// по хорошему такие вещи нужно разруливать ну уровне ролей
	
	Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	ПользовательИнженер = УправлениеДоступомПереопределяемый.ЕстьДоступКПрофилюГруппДоступа(Пользователь, Справочники.ПрофилиГруппДоступа.Инженер) ИЛИ УправлениеДоступомПереопределяемый.ЕстьДоступКПрофилюГруппДоступа(Пользователь, Справочники.ПрофилиГруппДоступа.ИнженерТехнолог);
	ПользовательАдминистратор = УправлениеДоступомПереопределяемый.ЕстьДоступКПрофилюГруппДоступа(Пользователь, Справочники.ПрофилиГруппДоступа.Администратор);
	ПользовательДизайнер = УправлениеДоступомПереопределяемый.ЕстьДоступКПрофилюГруппДоступа(Пользователь, Справочники.ПрофилиГруппДоступа.ДизайнерКонсультант);
	ПользовательДилер = УправлениеДоступомПереопределяемый.ЕстьДоступКПрофилюГруппДоступа(Пользователь, Справочники.ПрофилиГруппДоступа.Дилер);
	
	ДоступныСтатусы = ПользовательАдминистратор ИЛИ ПользовательИнженер;
	
	ДизайнеруВПроизводство = (Объект.Изделие = Справочники.Изделия.Детали) И ПользовательДизайнер;
	
	КомандыИзменитьСтатус = ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.Статусы.ПодчиненныеЭлементы;
	
	КомандыИзменитьСтатус.ФормаНаПроверкуИнженеру.Доступность = Истина;
	КомандыИзменитьСтатус.ФормаЕстьЗамечания.Доступность = ДоступныСтатусы;
	КомандыИзменитьСтатус.ФормаПроверена.Доступность = ДоступныСтатусы;
	КомандыИзменитьСтатус.ФормаПередатьВПроизводство.Доступность = ДоступныСтатусы ИЛИ ДизайнеруВПроизводство ИЛИ (ПользовательДилер И СтатусСпецификации = Перечисления.СтатусыСпецификации.Проверен);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	//Монтаж
	Монтаж = Документы.Спецификация.ПолучитьМонтаж(Объект.Ссылка);
	Если НЕ ЗначениеЗаполнено(Монтаж) Тогда
		Монтаж = "Ввести Монтаж";
	КонецЕсли;
	
	//Договор
	
	Договор = Документы.Спецификация.ПолучитьДоговор(Объект.Ссылка);
	Если НЕ ЗначениеЗаполнено(Договор) Тогда
		Договор = "Ввести Договор";
	КонецЕсли;
	
	// дилерские элементы
	
	Элементы.ГруппаСкидки.Видимость = Объект.Дилерский;
	Элементы.Офис.Видимость = НЕ Объект.Дилерский;
	Элементы.Изделие.Видимость = НЕ Объект.Дилерский;
	Элементы.Контрагент.Доступность = НЕ Объект.Дилерский;
	//Элементы.Монтаж.Видимость = НЕ Объект.Дилерский;
	Элементы.Договор.Видимость = НЕ Объект.Дилерский;
	Элементы.УслугаМонтаж.Видимость = НЕ Объект.Дилерский;
	
	Если Объект.Дилерский Тогда
		
		Объект.Изделие = Справочники.Изделия.Детали;
		
	КонецЕсли;
	
	Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	ПользовательИнженер = УправлениеДоступомПереопределяемый.ЕстьДоступКПрофилюГруппДоступа(Пользователь, Справочники.ПрофилиГруппДоступа.Инженер) ИЛИ УправлениеДоступомПереопределяемый.ЕстьДоступКПрофилюГруппДоступа(Пользователь, Справочники.ПрофилиГруппДоступа.ИнженерТехнолог);
	ПользовательАдминистратор = УправлениеДоступомПереопределяемый.ЕстьДоступКПрофилюГруппДоступа(Пользователь, Справочники.ПрофилиГруппДоступа.Администратор);
	ПользовательДизайнер = УправлениеДоступомПереопределяемый.ЕстьДоступКПрофилюГруппДоступа(Пользователь, Справочники.ПрофилиГруппДоступа.ДизайнерКонсультант);
	
	Элементы.СтраницаСписокНоменклатуры.Видимость = ПользовательАдминистратор;
	Элементы.СтраницаСкладГотовойПродукции.Видимость = ПользовательАдминистратор;
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		
		МассивСтатусов = Новый Массив;
		МассивСтатусов.Добавить(Перечисления.СтатусыСпецификации.Сохранен);
		МассивСтатусов.Добавить(Перечисления.СтатусыСпецификации.Проверен);
		МассивСтатусов.Добавить(Перечисления.СтатусыСпецификации.ЕстьОшибки);
		
		// инженерам и админам можно больше
		Если ПользовательИнженер ИЛИ ПользовательАдминистратор Тогда
			МассивСтатусов.Добавить(Перечисления.СтатусыСпецификации.Размещен);
			МассивСтатусов.Добавить(Перечисления.СтатусыСпецификации.ПроверяетсяИнженером);
			МассивСтатусов.Добавить(Перечисления.СтатусыСпецификации.Рассчитывается);
		КонецЕсли;
		
		РазрешитьРедактирование = Ложь;
		
		Для каждого Статус Из МассивСтатусов Цикл
			
			Если СтатусСпецификации = Статус Тогда
				РазрешитьРедактирование = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		ЭтаФорма.ТолькоПросмотр = НЕ РазрешитьРедактирование;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЯщикиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КомплектацияНаменованиеПриИзменении(Элемент)
	
	ТекущиеДанные 								= Элементы.Комплектация.ТекущиеДанные;
	ТекущиеДанные.ЕдиницаИзмерения 	= ЛексСервер.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Номенклатура, "ЕдиницаИзмерения");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекущийСтатус = Документы.Спецификация.ПолучитьСтатусСпецификации(Объект.Ссылка);
		Если ЭтаФорма.Модифицированность И ТекущийСтатус = Перечисления.СтатусыСпецификации.Проверен Тогда
			Документы.Спецификация.УстановитьСтатусСпецификации(Объект.Ссылка, Перечисления.СтатусыСпецификации.Сохранен);
		КонецЕсли;
		
	КонецЕсли;
	
	//Если Объект.Дилерский Тогда
	//	
	//	СтруктураСкидок 					= ЛексСервер.ПолучитьСкидкуКонтрагента(Объект.Подразделение, Объект.Дата, Объект.Контрагент);
	//	Объект.СкидкаНаУслуги 			= СтруктураСкидок.СкидкаНаУслуги;
	//	Объект.СкидкаНаМатериалы 	= СтруктураСкидок.СкидкаНаМатериалы;
	//	
	//КонецЕсли;
	
	ТекущийОбъект.Дата 				= ТекущаяДата();
	ТекущийОбъект.ДатаОтгрузки 	= КонецДня(ТекущийОбъект.ДатаОтгрузки);
	ДатаОтгрузки 						= ТекущийОбъект.ДатаОтгрузки;
	ДатаДокумента 						= НачалоДня(ТекущийОбъект.Дата);
	
	Если ДатаДокумента = ДатаОтгрузки Тогда
		
		ТекущийОбъект.ДатаИзготовления = ДатаОтгрузки;
		
	ИначеЕсли ДатаДокумента < ДатаОтгрузки Тогда
		
		ТекущийОбъект.ДатаИзготовления = ДатаОтгрузки - 86400;
		
		Если ДеньНедели(ТекущийОбъект.ДатаИзготовления) = 7 Тогда
			
			ТекущийОбъект.ДатаИзготовления = ТекущийОбъект.ДатаИзготовления - 86400;
			
		КонецЕсли;
		
	КонецЕсли;
	
	//ТекущийОбъект.СкладГотовойПродукции.Очистить();
		
	ЗаполнитьМатериалы(ТекущийОбъект);
	ЗаполнитьУслуги(ТекущийОбъект);
	ЗаполнитьСтоимость(ТекущийОбъект);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокНоменклатурыКомплектации", ТекущийОбъект.СписокНоменклатуры);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокНоменклатурыКомплектации.Номенклатура,
	|	СписокНоменклатурыКомплектации.Количество,
	|	СписокНоменклатурыКомплектации.ЕдиницаИзмерения,
	|	СписокНоменклатурыКомплектации.НомерСтроки,
	|	СписокНоменклатурыКомплектации.ЧерезСклад,
	|	СписокНоменклатурыКомплектации.НомерИзделия
	|ПОМЕСТИТЬ СписокНоменклатурыКомплектации
	|ИЗ
	|	&СписокНоменклатурыКомплектации КАК СписокНоменклатурыКомплектации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНоменклатурыКомплектации.Номенклатура,
	|	СУММА(СписокНоменклатурыКомплектации.Количество),
	|	МИНИМУМ(СписокНоменклатурыКомплектации.ЕдиницаИзмерения),
	|	МИНИМУМ(СписокНоменклатурыКомплектации.НомерСтроки),
	|ВЫБОР 
	|	КОГДА СписокНоменклатурыКомплектации.ЕдиницаИзмерения.Дробный ТОГДА СписокНоменклатурыКомплектации.НомерСтроки
	|		ИНАЧЕ 0
	|	КОНЕЦ как Номерок
	|ИЗ
	|	СписокНоменклатурыКомплектации КАК СписокНоменклатурыКомплектации
	|ГДЕ
	|	СписокНоменклатурыКомплектации.ЧерезСклад
	//|	СписокНоменклатурыКомплектации.Номенклатура.МестоОбработки = Значение(Перечисление.МестоОбработки.Склад)
	//|		ИЛИ СписокНоменклатурыКомплектации.Номенклатура.МестоОбработки = Значение(Перечисление.МестоОбработки.ПоКаталогуВЦех) И СписокНоменклатурыКомплектации.НомерИзделия <> 0
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР 
	|		КОГДА ЕдиницаИзмерения.Дробный ТОГДА СписокНоменклатурыКомплектации.НомерСтроки
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|	СписокНоменклатурыКомплектации.Номенклатура";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ТекущийОбъект.СкладГотовойПродукции.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока 								= ТекущийОбъект.СкладГотовойПродукции.Добавить();
		НоваяСтрока.Номенклатура 			= Выборка.Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения 	= Выборка.Номенклатура.ЕдиницаИзмерения;
		НоваяСтрока.Количество 			= Выборка.Количество;
		
	КонецЦикла;
	
	ТекущийОбъект.СкладГотовойПродукции.Сортировать("Номенклатура Возр");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("НовыйСтатус") Тогда
		Документы.Спецификация.УстановитьСтатусСпецификации(ТекущийОбъект.Ссылка, ПараметрыЗаписи.НовыйСтатус);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТипЗнч(Монтаж) = Тип("ДокументСсылка.Монтаж") Тогда
		
		Элементы.УслугаМонтаж.Доступность = Ложь;
		Элементы.Доставка.Доступность = Ложь;
		
	Иначе
		
		Элементы.УслугаМонтаж.Доступность = Истина;
		Элементы.Доставка.Доступность = Истина;
		
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ОбновитьСкидки();
		
	КонецЕсли;
	
	ДоступностьДатыМонтажа();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура НаПроверкуИнженеру(Команда)
	
	СохранитьИИзменитьСтатус(ПредопределенноеЗначение("Перечисление.СтатусыСпецификации.ПроверяетсяИнженером"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЕстьЗамечания(Команда)
	
	Если Объект.ЗамечанияИнженера = "" Тогда
		Текст = "Заполните замечания по спецификации";
		Поле = "Объект.ЗамечанияИнженера";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, ,Поле);
	Иначе
		СохранитьИИзменитьСтатус(ПредопределенноеЗначение("Перечисление.СтатусыСпецификации.ЕстьОшибки"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередатьВПроизводство(Команда)
	
	Если ЗначениеЗаполнено(Объект.ДатаОтгрузки) Тогда
		
		ПередатьВПроизводствоНаСервере();
		Закрыть();
		
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнена дата отгрузки";
		Сообщение.Поле = "Объект.ДатаОтгрузки";
		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПередатьВПроизводствоНаСервере()
	
	// { Васильев Александр Леонидович [07.10.2013]
	// палевная какая-то конструкция
	// но вроде отрабатывает правильно
	НачатьТранзакцию();
	Документы.Спецификация.УстановитьСтатусСпецификации(Объект.Ссылка, Перечисления.СтатусыСпецификации.Размещен);
	Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	ЗафиксироватьТранзакцию();
	// } Васильев Александр Леонидович [07.10.2013]
	
КонецФункции

&НаКлиенте
Процедура Проверена(Команда)
	
	СохранитьИИзменитьСтатус(ПредопределенноеЗначение("Перечисление.СтатусыСпецификации.Проверен"));
	
КонецПроцедуры

&НаКлиенте
Процедура Подобрать(Команда)
	
	Собрать();
	
КонецПроцедуры

&НаКлиенте
Процедура Фурнитура(Команда)
	
	СчетчикЛДСП 						= 0;
	КоличествоНужныхРадиусов 	= 0;
	
	Для каждого Строка Из Объект.СписокМатериалы Цикл
		
		Материал 			= Строка.Материал;
		ЛДСП = Материал = "10 ЛДСП" ИЛИ Материал = "16 ЛДСП" ИЛИ Материал = "10 ЛДСП+10 ЛДСП" 
		или Материал = "16 ЛДСП+10 ЛДСП" ИЛИ Материал = "16 ЛДСП+16 ЛДСП";
		СуммаРадиусов	= 0;
		СчетчикЛДСП 	= ?(Материал = "10 ЛДСП" ИЛИ Материал = "16 ЛДСП" ИЛИ Материал = "10 ЛДСП+10 ЛДСП" 
		или Материал = "16 ЛДСП+10 ЛДСП" ИЛИ Материал = "16 ЛДСП+16 ЛДСП", 
		СчетчикЛДСП + 1*Строка.Количество, СчетчикЛДСП);
		КоличествоНужныхРадиусов 	= ?(ЛДСП и (Строка.РадиусЛевоВерх >= 150 ИЛИ Строка.РадиусЛевоНиз >= 150 
		или Строка.РадиусПравоВерх >= 150 ИЛИ Строка.РадиусПравоНиз >= 150), КоличествоНужныхРадиусов + 1 * Строка.Количество, КоличествоНужныхРадиусов);
		
	КонецЦикла;
	
	Строка 			 			= "";
	ПараметрыФурнитуры 	= ПосчитатьКоличествоКрепежа();
	КоличествоЯщиков 		= Объект.СписокЯщики.Количество();
	
	ПараметрыФурнитуры.Вставить("КоличествоДеталейЛДСП", СчетчикЛДСП);
	ПараметрыФурнитуры.Вставить("КоличествоЯщиков", КоличествоЯщиков);
	ПараметрыФурнитуры.Вставить("Подразделение", Объект.Подразделение);
	ПараметрыФурнитуры.Вставить("КоличествоНужныхРадиусов", КоличествоНужныхРадиусов);
	
	ОткрытьФорму("Документ.Спецификация.Форма.ФормаФурнитура", ПараметрыФурнитуры, Элементы.Комплектация);
	
КонецПроцедуры

&НаКлиенте
Процедура СотовыеЭлементы(Команда)
	
	АдресТаблицы 			= ПолучитьАдресТаблицы();
	ПараметрыПодбора 	= Новый Структура;
	ПараметрыПодбора.Вставить("АдресТаблицы", АдресТаблицы);
	ПараметрыПодбора.Вставить("Подразделение", Объект.Подразделение);
	ОткрытьФорму("Документ.Спецификация.Форма.ФормаСотовыеЭлементы", ПараметрыПодбора, Элементы.Комплектация);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКаталогу(Команда = Неопределено)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = "Табличные части будут изменены." + Символы.ПС + "Продолжить?" ;
	
	Если (Объект.СписокМатериалы.Количество() > 0 ИЛИ Объект.СписокЯщики.Количество() > 0 ИЛИ Объект.СписокНоменклатуры.Количество() > 0) 
		И Вопрос(Текст, Режим, 0) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	//Очистка Табличных частей от данных полученных ранее
	ПерезаполнитьТаблицу(Объект.СписокМатериалы);
	ПерезаполнитьТаблицу(Объект.СписокЯщики);
	ПерезаполнитьТаблицу(Объект.Комплектация);
	
	Объект.СписокНоменклатуры.Очистить();
	ОбработкаИзделийПоКаталогу();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура АдресМонтажаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Подразделение) Тогда
		
		ТекстСообщения = "Выберите подразделение!";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Подразделение", "Объект");
		
	Иначе
		
		ПараметрыАдреса = Новый Структура;
		ПараметрыАдреса.Вставить("Подразделение", Объект.Подразделение);
		
		
		Если Объект.АдресМонтажа = "Введите адрес" Тогда
			
			СтарыйАдрес = "";
			
		Иначе
			
			СтарыйАдрес = Объект.АдресМонтажа;
			
		КонецЕсли;
		
		ПараметрыАдреса.Вставить("Офис", Объект.Офис);
		ПараметрыАдреса.Вставить("СтарыйАдрес", СтарыйАдрес);
		СтруктураАдреса = ОткрытьФормуМодально("ОбщаяФорма.ФормаВводаАдреса", ПараметрыАдреса, ЭтаФорма);
		
		Если ТипЗнч(СтруктураАдреса) = Тип("Структура") Тогда
			
			Объект.АдресМонтажа = СтруктураАдреса.Адрес;
			Объект.Километраж = СтруктураАдреса.Километраж;
			
		КонецЕсли;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаМонтажаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Офис) Тогда
		
		КонецПериода = Объект.Дата + 30 * 86400;
		
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Офис", Объект.Офис);
		ПараметрыФормы.Вставить("НачалоПериода", Объект.Дата + 3 * 86400);
		ПараметрыФормы.Вставить("КонецПериода", КонецПериода);
		
		ВыбраннаяДата = ОткрытьФормуМодально("Документ.Договор.Форма.ФормаВыбораДатыМонтажа", ПараметрыФормы);
		Если ЗначениеЗаполнено(ВыбраннаяДата) Тогда
			Объект.ДатаМонтажа = ВыбраннаяДата;
		КонецЕсли;
		
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен офис";
		Сообщение.Поле = "Объект.Офис";
		Сообщение.Сообщить();
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МонтажНажатие(Элемент, СтандартнаяОбработка)
	
	Если Монтаж = "Ввести Монтаж" Тогда
		
		ПараметрыМонтажа = Новый Структура;
		ПараметрыМонтажа.Вставить("Спецификация", Объект.Ссылка);
		
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("Документ.Монтаж.Форма.ФормаДокумента", ПараметрыМонтажа, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорНажатие(Элемент, СтандартнаяОбработка)
	
	Если Договор = "Ввести Договор" Тогда
		
		СтандартнаяОбработка = Ложь;
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("Основание", Объект.Ссылка);
		ОткрытьФорму("Документ.Договор.Форма.ФормаДокумента",ПараметрыЗаполнения, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ОбновитьСкидки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ОбновитьСкидки();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ СПИСОК ЛДСП

&НаКлиенте
Процедура СписокМатериалыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ЗагрузитьТабличнуюЧасть(ВыбранноеЗначение, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМатериалыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Собрать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ СПИСОК ОБТОЧЕК

&НаКлиенте
Процедура СписокСтеклаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ЗагрузитьТабличнуюЧасть(ВыбранноеЗначение, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСтеклаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Собрать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ СПИСОК ЯЩИКИ

&НаКлиенте
Процедура СписокЯщикиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ЗагрузитьТабличнуюЧасть(ВыбранноеЗначение, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЯщикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Собрать();
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
//// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ СПИСОК Двери

&НаКлиенте
Процедура Двери(Команда)
	
	ПараметрыФормы = Новый Структура("Подразделение", Объект.Подразделение);
	Форма = ПолучитьФорму("Справочник.Двери.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
	Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Форма.Открыть();
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДвери(Команда)
	
	Форма = ПолучитьФорму("Справочник.Двери.Форма.ФормаВыбора", , ЭтаФорма);
	Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДверейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СсылкаНаДверь = Элемент.ТекущиеДанные.Двери;
	ПараметрыФормы = Новый Структура("Ключ", СсылкаНаДверь);
	ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
	ОткрытьФорму("Справочник.Двери.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ Изделия по каталогу

&НаКлиенте
Процедура ИзделияПоКаталогуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Собрать();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзделияПоКаталогуОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ЗагрузитьТабличнуюЧасть(ВыбранноеЗначение, Элемент.Имя);
	ЗаполнитьПоКаталогу();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.Договор") Тогда 
		
		Договор = ВыбранноеЗначение;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.Монтаж") Тогда
		
		Монтаж = ВыбранноеЗначение;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Двери") Тогда
		
		НоваяСтрока 				= Объект.СписокДверей.Добавить();
		НоваяСтрока.Двери 	= ВыбранноеЗначение;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомплектацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Модифицированность = Истина;
	ДобавитьТабЧасть(ВыбранноеЗначение.АдресТаблицы, ВыбранноеЗначение.Таблица);
	
КонецПроцедуры

&НаСервере
Функция ДобавитьТабЧасть(АдресТаблицы, Таблица)
	
	ТЗ 									= ПолучитьИзВременногоХранилища(АдресТаблицы);
	СправочникНоменклатуры 	= Справочники.Номенклатура;
	СправочникГрупп 				= Справочники.НоменклатурныеГруппы;
	МассивСтрок 						= Новый Массив;
	
	Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") Тогда
		
		Для каждого Строка Из Объект.Комплектация Цикл
			
			НужнаяНоменклатурнаяГруппа 	= Ложь;
			Номенклатура 							= Строка.Номенклатура;
			Группа 										= Номенклатура.НоменклатурнаяГруппа;
			
			Если ЗначениеЗаполнено(Группа) Тогда
				
				Если Таблица = "СотовыеЭлементы" Тогда
					
					НужнаяНоменклатурнаяГруппа = Группа = СправочникГрупп.СотовыеПолки ИЛИ Группа = СправочникГрупп.СотовыеЭлементы 
					или Группа = СправочникГрупп.Корзины ИЛИ Группа.ПринадлежитЭлементу(СправочникГрупп.Направляющие);
					
				ИначеЕсли Таблица = "Фурнитура" Тогда
					
					//Можно будет внести уголки, подумаем
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Таблица = "СотовыеЭлементы" Тогда
				
				Предопределенный = Номенклатура = СправочникНоменклатуры.Прищепки ИЛИ Номенклатура = СправочникНоменклатуры.Наконечник 
				или Номенклатура = СправочникНоменклатуры.Клипсы ИЛИ Номенклатура = СправочникНоменклатуры.Карманы 
				или Номенклатура = СправочникНоменклатуры.КронштейнДляСотовойПолки;
				
			ИначеЕсли Таблица = "Фурнитура" Тогда
				
				Предопределенный = Номенклатура = СправочникНоменклатуры.Шуруп40х35золото ИЛИ Номенклатура = СправочникНоменклатуры.Шуруп16х35золото 
				или Номенклатура = СправочникНоменклатуры.Шуруп40х35хром ИЛИ Номенклатура = СправочникНоменклатуры.Шуруп16х35хром
				или Номенклатура = СправочникНоменклатуры.Евровинт50 ИЛИ Номенклатура = СправочникНоменклатуры.ФлянецХромированный
				или Номенклатура = СправочникНоменклатуры.Шуруп16х35черный ИЛИ Номенклатура = СправочникНоменклатуры.Шуруп30х35черный
				или Номенклатура = СправочникНоменклатуры.Шуруп30х35черный ИЛИ Номенклатура = СправочникНоменклатуры.Дюбель6х40черный;
				
			КонецЕсли;
			
			Если Предопределенный ИЛИ НужнаяНоменклатурнаяГруппа Тогда
				
				МассивСтрок.Добавить(Строка);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого Элемент Из МассивСтрок Цикл
			
			Объект.Комплектация.Удалить(Элемент);
			
		КонецЦикла;
		
		Для каждого Строчка Из ТЗ Цикл
			
			НоваяСтрока 								= Объект.Комплектация.Добавить();
			НоваяСтрока.Номенклатура 			= Строчка.Номенклатура;
			НоваяСтрока.Количество 			= Строчка.Количество;
			НоваяСтрока.ЕдиницаИзмерения 	= Строчка.ЕдиницаИзмерения;
			
		КонецЦикла;
		
	КонецЕсли;
	
	//Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") Тогда
	//	
	//	Модифицированность 					= Истина;
	//	СписокОбъектовКомплектации 		= Объект.Комплектация.Выгрузить();
	//	
	//	Для каждого Строка Из ТЗ Цикл
	//		
	//		СчетчикСовпадений = 0;
	//		
	//		Для Каждого СтрокаКомплектации Из СписокОбъектовКомплектации Цикл
	//			
	//			Если СтрокаКомплектации.Номенклатура = Строка.Номенклатура Тогда 
	//				
	//				СтрокаКомплектации.Количество 	= Строка.Количество;
	//				СчетчикСовпадений 					= СчетчикСовпадений +1;
	//				
	//			КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Если СчетчикСовпадений = 0 Тогда
	//			
	//			НоваяСтрока 							= Объект.Комплектация.Добавить();
	//			НоваяСтрока.Номенклатура 		= Строка.Номенклатура;
	//			НоваяСтрока.Количество 		= Строка.Количество;
	//			
	//		КонецЕсли;
	//		
	//	КонецЦикла;
	//	
	//КонецЕсли;
	
КонецФункции // ДобавитьТабЧасть()

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтрока", ПредопределенноеЗначение("Справочник.Контрагенты.ЧастноеЛицо"));
	
	ВыбранныйКонтрагент = ОткрытьФормуМодально("Справочник.Контрагенты.ФормаВыбора", ПараметрыФормы);
	Если ВыбранныйКонтрагент <> Неопределено Тогда
		Объект.Контрагент = ВыбранныйКонтрагент;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УслугаМонтажПриИзменении(Элемент)
	
	ДоступностьДатыМонтажа();
	
	Объект.Доставка = Объект.УслугаМонтаж;
	
	Если НЕ Объект.УслугаМонтаж Тогда
		
		Объект.ДатаМонтажа = Неопределено;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДоставкаПриИзменении(Элемент)
	
	Если Объект.УслугаМонтаж Тогда
		
		Объект.Доставка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ДоступностьДатыМонтажа()
	
	Если Объект.УслугаМонтаж Тогда
		
		Элементы.ДатаМонтажа.Доступность = Истина;
		
	Иначе
		
		Элементы.ДатаМонтажа.Доступность 	= Ложь;
		
	КонецЕсли;
	
КонецФункции // ()

//////////////////////////////////////////////////////////////////////////////////
//// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ СПИСОК Столешницы

//Nrn24.05.13
&НаСервере
Функция ПосчитатьПрисадкиКриволинейнаяДеталь(СтрокаФлэш)
	
	ВсегоОтверстий 					= 0;
	МассивПодстрок 				= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаФлэш, "#");
	
	Если МассивПодстрок.Количество() > 0 Тогда
		
		НужнаяСтрока					= МассивПодстрок[2];
		ВторойМассив						= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(НужнаяСтрока, "_");
		
		Если ВторойМассив.Количество() > 0 Тогда
			
			Определитель						= ВторойМассив[0];
			КоличествоОтверстиВРяду	= 0;
			КоличествоРядовОтверстий	= 0;
			
			Если Определитель = "10" или Определитель = "11" или Определитель = "14" Тогда
				
				КоличествоОтверстиВРяду 	=Число( ВторойМассив[4]);
				КоличествоРядовОтверстий 	= Число(ВторойМассив[5]);
				
			ИначеЕсли Определитель = "12" Тогда 
				
				КоличествоОтверстиВРяду = ВторойМассив[3];
				
			КонецЕсли;
			
			Если КоличествоОтверстиВРяду > 0 и КоличествоРядовОтверстий > 0 Тогда
				
				// { Васильев Александр Леонидович [04.10.2013]
				// тут вылетает если в криволинейной детали выбрали ПРИСАДКУ ПОД ЕВРОВИНТ ТОРЦЕВУЮ
				// } Васильев Александр Леонидович [04.10.2013]
				Попытка
					ВсегоОтверстий =  КоличествоОтверстиВРяду * КоличествоРядовОтверстий;
				Исключение
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В криволинейной детали выбрали ПРИСАДКУ ПОД ЕВРОВИНТ ТОРЦЕВУЮ");
				КонецПопытки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ВсегоОтверстий;
	
КонецФункции // ПосчитатьПрисадкиКриволинейнаяДеталь()
//Nrn24.05.13

&НаКлиентеНаСервереБезКонтекста
Функция Клееная(Материал)
	
	Возврат Материал = "10 ЛДСП+10 ЛДСП" ИЛИ Материал = "16 ЛДСП+10 ЛДСП" ИЛИ Материал = "16 ЛДСП+16 ЛДСП";
	
КонецФункции

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Вставить содержимое обработчика.
КонецПроцедуры



