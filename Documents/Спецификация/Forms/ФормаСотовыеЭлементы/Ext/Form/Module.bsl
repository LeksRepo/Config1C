
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Подразделение = Параметры.Подразделение;
	
	СписокЭлементов.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресТаблицы));
	НоменклатурныеГруппы = Новый СписокЗначений;
	НоменклатурныеГруппы.Добавить(Справочники.НоменклатурныеГруппы.Корзины);
	НоменклатурныеГруппы.Добавить(Справочники.НоменклатурныеГруппы.СотовыеПолки);
	НоменклатурныеГруппы.Добавить(Справочники.НоменклатурныеГруппы.СотовыеЭлементы);

	МассивСотовыхЭлементов 	= ЛексСервер.ОтборНоменклатурныхГрупп(НоменклатурныеГруппы, Подразделение);
	СотовыеЭлементы 				= Новый Массив;
	
	Для каждого Элемент Из МассивСотовыхЭлементов.Корзины Цикл
	
		СотовыеЭлементы.Добавить(Элемент);
	
	КонецЦикла;
	
	Для каждого Элемент Из МассивСотовыхЭлементов.СотовыеПолки Цикл
	
		СотовыеЭлементы.Добавить(Элемент);
	
	КонецЦикла;
	
	Для каждого Элемент Из МассивСотовыхЭлементов.СотовыеЭлементы Цикл
	
		СотовыеЭлементы.Добавить(Элемент);
	
	КонецЦикла;

	Элементы.СписокЭлементовНоменклатура.СписокВыбора.ЗагрузитьЗначения(СотовыеЭлементы);
	КарманКронштейн = "Карман";
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	Если ПроверитьПередСохранением() Тогда
		
		АдресТаблицы 				= ПосчитатьИСохранить();
		Модифицированность 		= Ложь;
		СтруктураОповещения 	= Новый Структура;
		СтруктураОповещения.Вставить("АдресТаблицы", АдресТаблицы);
		СтруктураОповещения.Вставить("Таблица", "СотовыеЭлементы");
		ОповеститьОВыборе(СтруктураОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПосчитатьИСохранить()
	
	ОбщаяНоменклатура = ЛексСерверПовтИсп.ПолучитьОбщуюНоменклатуруПолностью(Подразделение);
	
	КоличествоПолок 	= 0;
	КоличествоКорзин 	= 0;
	НовыйСписок 			= Новый ТаблицаЗначений;
	НовыйСписок.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	НовыйСписок.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	НовыйСписок.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
	
	Для каждого Строка Из СписокЭлементов Цикл
		
		НоменклатурнаяГруппа 	= Строка.Номенклатура.НоменклатурнаяГруппа;
		Длина 							= Строка.ДлинаДетали;
		Номенклатура 				= Строка.Номенклатура;
		Дробный 						= Номенклатура.ЕдиницаИзмерения.Дробный;
		
		Если НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.Корзины Тогда
			
			КоличествоКорзин= КоличествоКорзин + Строка.Количество;
			
		ИначеЕсли НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.СотовыеПолки Тогда
			
			КоличествоПолок= КоличествоПолок + Строка.Количество
			
		КонецЕсли;
		
		ДопЭлемент = Номенклатура.ДополнительныйЭлемент;
		
		Если ЗначениеЗаполнено(ДопЭлемент) Тогда
			
			ДобавитьСтроку(НовыйСписок, ДопЭлемент, Строка.Количество);
		
		КонецЕсли;
		
		Если Длина > 0 и Дробный Тогда
			
			Для Счетчик = 1 По Строка.Количество Цикл
			
				ДобавитьСтроку(НовыйСписок, Номенклатура, Длина / 1000);
				
			КонецЦикла;
			
		Иначе
				
			ДобавитьСтроку(НовыйСписок, Номенклатура, Строка.Количество);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если КоличествоКорзин > 0 Тогда 
		
		ДобавитьСтроку(НовыйСписок, ОбщаяНоменклатура.Прищепки, КоличествоКорзин * 4);
		
	КонецЕсли;
	
	Если КоличествоПолок > 0 Тогда 
		
		ДобавитьСтроку(НовыйСписок, ОбщаяНоменклатура.Наконечник, КоличествоПолок * 8);
		ДобавитьСтроку(НовыйСписок, ОбщаяНоменклатура.Клипсы, КоличествоПолок * 2);
		
		Если КарманКронштейн = "Карман" Тогда
			
			ДобавитьСтроку(НовыйСписок, ОбщаяНоменклатура.Карманы, КоличествоПолок * 2);
			
		ИначеЕсли КарманКронштейн = "Кронштейн" Тогда
			
			ДобавитьСтроку(НовыйСписок, ОбщаяНоменклатура.КронштейнДляСотовойПолки, КоличествоПолок * 2);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(НовыйСписок);

КонецФункции // ДобавитьДопДетали()

&НаСервере
Функция ДобавитьСтроку(Таблица, Номенклатура, Количество)

	НоваяСтрока 									= Таблица.Добавить();
	НоваяСтрока.Номенклатура 				= Номенклатура;
	НоваяСтрока.Количество 				= Количество;
	НоваяСтрока.ЕдиницаИзмерения 		= Номенклатура.ЕдиницаИзмерения;

КонецФункции // ДобавитьСтроку()

&НаКлиенте
Функция ПроверитьПередСохранением()
	
	Ответ = Истина;
	
	Для Каждого Строка Из СписокЭлементов Цикл
		
			Если ЗначениеЗаполнено(Строка.Номенклатура) И Строка.Количество = 0 Тогда
				
				Сообщение 			= Новый СообщениеПользователю;
				Сообщение.Текст 	= "Количество должно быть больше 0";
				Сообщение.Поле 	= "Элементы.СписокЭлементовКоличество";
				Сообщение.Сообщить();
				Ответ = Ложь;
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Строка.Номенклатура) И Строка.Количество > 0 Тогда
				
				Сообщение 			= Новый СообщениеПользователю;
				Сообщение.Текст 	= "Не заполнена Номенклатура";
				Сообщение.Поле 	= "Элементы.СписокЭлементовНоменклатура";
				Сообщение.Сообщить();
				Ответ = Ложь;
				
			КонецЕсли;
			
			Если Строка.Дробный и Строка.ДлинаДетали < 200 Тогда
				
				Элементы.СписокЭлементов.ТекущаяСтрока 	= Строка.ПолучитьИдентификатор();
				Сообщение 			= Новый СообщениеПользователю;
				Сообщение.Текст 	= "Слишком маленькая деталь";
				Сообщение.Поле 	= "Элементы.СписокЭлементов.ТекущиеДанные.ДлинаДетали";
				Сообщение.Сообщить();
				Ответ = Ложь;
				
			КонецЕсли;
				
		КонецЦикла;
		
	Возврат Ответ;

КонецФункции // ПроверитьПередСохранением()

&НаСервереБезКонтекста
Функция ПолучитьДлину(Номенклатура)

	Дробный 						= Номенклатура.ЕдиницаИзмерения.Дробный;
	НоменклатурнаяДлина 	= ?(НЕ Дробный, Номенклатура.ДлинаДетали, 0);
	Структурка = Новый Структура;
	Структурка.Вставить("Дробный", Дробный);
	Структурка.Вставить("НоменклатурнаяДлина", НоменклатурнаяДлина);
	
	Возврат Структурка;

КонецФункции // ПолучитьДлину()

&НаКлиенте
Процедура СписокЭлементовНоменклатураПриИзменении(Элемент)
	
	Структурка 																= ПолучитьДлину(Элементы.СписокЭлементов.ТекущиеДанные.Номенклатура);
	НоменклатурнаяДлина 												= Структурка.НоменклатурнаяДлина;
	Элементы.СписокЭлементов.ТекущиеДанные.Дробный 	= Структурка.Дробный;
	
	Если НоменклатурнаяДлина > 0 Тогда 
		
		Элементы.СписокЭлементов.ТекущиеДанные.ДлинаДетали = НоменклатурнаяДлина;
		
	КонецЕсли;

КонецПроцедуры
