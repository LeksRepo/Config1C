////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервереБезКонтекста
Функция ОпределитьКорневойВидИзделия(ВидИзделия)
	
	//Справочник наш, при условии что 2 уровня в иерархии
	Возврат ?(ВидИзделия.Родитель.Пустая(), ВидИзделия, ВидИзделия.Родитель);	
	
КонецФункции
	
&НаСервере
Процедура ДобавитьДопГруппы() 
	
	Кромка2 = Новый Массив;
	Для каждого Элемент Из МассивыНоменклатурныхГрупп.Кромка2_19 Цикл
		Кромка2.Добавить(Элемент);
	КонецЦикла;
	//Для каждого Элемент Из МассивыНоменклатурныхГрупп.Кромка2_35 Цикл
	//	Кромка2.Добавить(Элемент);
	//КонецЦикла;
	МассивыНоменклатурныхГрупп.Вставить("Кромка2мм", Кромка2);
	
	Кромка 	= Новый Массив;
	//Для каждого Элемент Из МассивыНоменклатурныхГрупп.Кромка045_19 Цикл
	//	Кромка.Добавить(Элемент);
	//КонецЦикла;
	Для каждого Элемент Из МассивыНоменклатурныхГрупп.Кромка2мм Цикл
		Кромка.Добавить(Элемент);
	КонецЦикла;
	Для каждого Элемент Из МассивыНоменклатурныхГрупп.КантТ Цикл
		Кромка.Добавить(Элемент);
	КонецЦикла;
	МассивыНоменклатурныхГрупп.Вставить("Кромка", Кромка);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаАдресаПредопределенных()
	
	//Получаем Таблицу значений предопределенных изделий(Стены) их адреса на картинку и список несовместимых изделий с ними
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КаталогИзделий.Ссылка КАК Изделие,
	|	ВЫБОР
	|		КОГДА КаталогИзделий.Ссылка = ЗНАЧЕНИЕ(Справочник.КаталогИзделий.ПраваяСтена)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент)
	|		КОГДА КаталогИзделий.ВидИзделияПоКаталогу.Родитель = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ПустаяСсылка)
	|			ТОГДА КаталогИзделий.ВидИзделияПоКаталогу
	|		ИНАЧЕ КаталогИзделий.ВидИзделияПоКаталогу.Родитель
	|	КОНЕЦ КАК ВидИзделия,
	|	НесовместимостьИзделийПоКаталогу.НесовместимостимоеИзделие КАК НесовместимостимоеИзделие
	|ИЗ
	|	Справочник.КаталогИзделий КАК КаталогИзделий
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НесовместимостьИзделийПоКаталогу КАК НесовместимостьИзделийПоКаталогу
	|		ПО (НесовместимостьИзделийПоКаталогу.Изделие = КаталогИзделий.Ссылка)
	|ГДЕ
	|	(КаталогИзделий.Ссылка = ЗНАЧЕНИЕ(Справочник.КаталогИзделий.ЗадняяСтенаЗаказчика)
	|			ИЛИ КаталогИзделий.Ссылка = ЗНАЧЕНИЕ(Справочник.КаталогИзделий.ЛеваяСтена)
	|			ИЛИ КаталогИзделий.Ссылка = ЗНАЧЕНИЕ(Справочник.КаталогИзделий.ПолЗаказчика)
	|			ИЛИ КаталогИзделий.Ссылка = ЗНАЧЕНИЕ(Справочник.КаталогИзделий.ПотолокЗаказчика)
	|			ИЛИ КаталогИзделий.Ссылка = ЗНАЧЕНИЕ(Справочник.КаталогИзделий.ПраваяСтена))
	|ИТОГИ ПО
	|	Изделие";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = АдресаПредопределенных.Добавить();
		НоваяСтрока.Изделие = Выборка.Изделие;
		НоваяСтрока.ВидИзделия = Выборка.ВидИзделия;
		
		ВыборкаПоИзделиям = Выборка.Выбрать();
		Пока ВыборкаПоИзделиям.Следующий() Цикл
			НоваяСтрока.СписокНесовместимых.Добавить(ВыборкаПоИзделиям.НесовместимостимоеИзделие);
		КонецЦикла;
		НоваяСтрока.АдресИзделия = ПолучитьАдрес(НоваяСтрока.Изделие, НоваяСтрока.ВидИзделия);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьАдрес(Изделие, ВидИзделия)
	
	Если ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент Тогда
		Расположение = Строка(Перечисления.ВидыПрисоединенныхФайлов.КартинкаЛевая);
	ИначеЕсли ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент Тогда
		Расположение = Строка(Перечисления.ВидыПрисоединенныхФайлов.КартинкаПравая);
	Иначе
		Расположение = Строка(Перечисления.ВидыПрисоединенныхФайлов.ОсновнаяКартинка);
	КонецЕсли;
	
	Возврат Строка(Расположение) + Изделие.Код;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОпределитьСтруктурыЛДСП(ЛДСП, Подразделение, СтруктураНоменклатураМатериала)
	
	Структура = Новый Структура;
	
	Структура.Вставить("НоменклатураМатериала", СтруктураНоменклатураМатериала(СтруктураНоменклатураМатериала, ЛДСП));
	Структура.Вставить("СтруктураПодставляяемойНоменклатуры", ЛексСервер.ПолучитьСтруктуруПодставляемойНоменклатурыПоЦветуЛДСП(ЛДСП, Подразделение));
		
	Возврат Структура;
	
КонецФункции

&НаСервереБезКонтекста
Функция СтруктураНоменклатураМатериала(Структура, Номенклатура) 
			
	Структура.Вставить("ДлинаДетали", Номенклатура.ДлинаДетали);
	Структура.Вставить("ШиринаДетали ", Номенклатура.ШиринаДетали);
	Структура.Вставить("ГлубинаДетали ", Номенклатура.ГлубинаДетали);
	
	Возврат Структура;
	
КонецФункции

&НаСервере
Функция ПолучитьСписокСтенок() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КаталогИзделий.Ссылка
	|ИЗ
	|	Справочник.КаталогИзделий КАК КаталогИзделий
	|ГДЕ
	|	КаталогИзделий.ВидИзделияПоКаталогу = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ЗадняяСтенка)";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервере
Процедура ПолучитьИтоговыеРазмеры(ВысотаОсновного, ШиринаОсновного)
	
	ШиринаИтог = ШиринаОсновного;
	ВысотаИтог = ВысотаОсновного;
	
	Для Каждого Строка Из Детали Цикл
		Если (Строка.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.Потолок 
			ИЛИ Строка.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.Пол) И НЕ Строка.НеВлияетНаОсновной Тогда
			ВысотаИтог = ВысотаИтог + Строка.ВысотаИзделия;	 	
		ИначеЕсли (Строка.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент
			ИЛИ Строка.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент) И НЕ Строка.НеВлияетНаОсновной Тогда
			ШиринаИтог = ШиринаИтог + Строка.ШиринаИзделия;	
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьИУстановитьРазмерыПередСохранением(РазмерыОсновного)
	
	Ошибки = Неопределено;
	
	ЕстьКрыша = Ложь;
	ЕстьКрышаНаВсе = Ложь;
	ЕстьПол = Ложь;
	ЕстьЛевыйБоковой = Ложь;
	ЕстьПравыйБоковой = Ложь;
	ЕстьЗадняяСтенка = Ложь;
	
	НеВлияетНаОсновнойСнизу = Ложь;
	НеВлияетНаОсновнойСверху = Ложь;
	НеВлияетНаОсновнойСлева = Ложь;
	НеВлияетНаОсновнойСправа = Ложь;
	
	МинимальнаяГлубина = 0;
	МаксимальнаяГлубина = 0;
	
	СтруктураДиапазонов = Новый Структура;
	
	СтруктураДиапазонов.Вставить("ВысотаМинЛевый", 0);
	СтруктураДиапазонов.Вставить("ВысотаМаксЛевый", 0);
	СтруктураДиапазонов.Вставить("ВысотаМинЦентр", 0);
	СтруктураДиапазонов.Вставить("ВысотаМаксЦентр", 0);
	СтруктураДиапазонов.Вставить("ВысотаМинПравый", 0);
	СтруктураДиапазонов.Вставить("ВысотаМаксПравый", 0);
	
	СтруктураДиапазонов.Вставить("ШиринаМинВерхний", 0);
	СтруктураДиапазонов.Вставить("ШиринаМаксВерхний", 0);
	СтруктураДиапазонов.Вставить("ШиринаМинЦентр", 0);
	СтруктураДиапазонов.Вставить("ШиринаМаксЦентр", 0);
	СтруктураДиапазонов.Вставить("ШиринаМинНижний", 0);
	СтруктураДиапазонов.Вставить("ШиринаМаксНижний", 0);	
	
	Для Каждого Строка Из Детали Цикл
		
		ВидИзделияПоКаталогу = Строка.Изделие.ВидИзделияПоКаталогу;
		
		Если Строка.ВидИзделия <> Справочники.ВидыИзделийПоКаталогу.ОсновнойЭлемент И НЕ ЗначениеЗаполнено(Строка.Завал) И НЕ Корпусный Тогда
			
			Текст = "Заполните завал у " + Строка.ВидИзделия;
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Детали", Текст);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.Завал) И Число(Строка.Завал) >= 10 
			И (ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.СтенаСверху
			ИЛИ ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.СтенаСлева
			ИЛИ ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.СтенаСнизу
			ИЛИ ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.СтенаСправа
			ИЛИ ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ФальшПанельСлева
			ИЛИ ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ФальшПанельСправа) Тогда
			
			Текст = "" + Строка.ВидИзделия + ", ошибка установки завала или элемента (для завала более 10 мм. не подходят стены и фальш панели)";
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Детали", Текст);
			
		КонецЕсли;
				
		Если Строка.Предопределенный Тогда
			
			Продолжить;
					
		КонецЕсли;
		
		Строка.ГлубинаИзделия = ГлубинаИтог;
		Строка.Ручка = РучкиЯщиков;
		
		Если Строка.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.Потолок Тогда 
			
			НеВлияетНаОсновнойСверху = Строка.Изделие.НеВлияетНаОсновной;
			
			СтруктураДиапазонов.ВысотаМинЦентр = СтруктураДиапазонов.ВысотаМинЦентр + Строка.ВысотаИзделияМин;
			СтруктураДиапазонов.ВысотаМаксЦентр = СтруктураДиапазонов.ВысотаМаксЦентр + Строка.ВысотаИзделияМакс;
			
			СтруктураДиапазонов.ШиринаМинВерхний = СтруктураДиапазонов.ШиринаМинВерхний + Строка.ШиринаИзделияМин;
			СтруктураДиапазонов.ШиринаМаксВерхний = СтруктураДиапазонов.ШиринаМаксВерхний + Строка.ШиринаИзделияМакс;
			
			Если Строка.Изделие.НаВсеИзделие Тогда
				
				ЕстьКрышаНаВсе = Истина;
				Строка.ШиринаИзделия = ШиринаИтог;
				
				СтруктураДиапазонов.ВысотаМинЛевый = СтруктураДиапазонов.ВысотаМинЛевый + Строка.ВысотаИзделияМин;
				СтруктураДиапазонов.ВысотаМаксЛевый = СтруктураДиапазонов.ВысотаМаксЛевый + Строка.ВысотаИзделияМакс;
				СтруктураДиапазонов.ВысотаМинПравый = СтруктураДиапазонов.ВысотаМинПравый + Строка.ВысотаИзделияМин;
				СтруктураДиапазонов.ВысотаМаксПравый = СтруктураДиапазонов.ВысотаМаксПравый + Строка.ВысотаИзделияМакс;
				
				СтруктураДиапазонов.ШиринаМинВерхний = Строка.ШиринаИзделияМин;
				СтруктураДиапазонов.ШиринаМаксВерхний = Строка.ШиринаИзделияМакс;
				
			Иначе
				
				ЕстьКрыша = Истина;
				Строка.ШиринаИзделия = РазмерыОсновного.Ширина;
				
			КонецЕсли;
						
		ИначеЕсли Строка.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.Пол Тогда
			
			СтруктураДиапазонов.ВысотаМинЦентр = СтруктураДиапазонов.ВысотаМинЦентр + Строка.ВысотаИзделияМин;
			СтруктураДиапазонов.ВысотаМаксЦентр = СтруктураДиапазонов.ВысотаМаксЦентр + Строка.ВысотаИзделияМакс;
			
			СтруктураДиапазонов.ШиринаМинНижний = СтруктураДиапазонов.ШиринаМинНижний + Строка.ШиринаИзделияМин;
			СтруктураДиапазонов.ШиринаМаксНижний = СтруктураДиапазонов.ШиринаМаксНижний + Строка.ШиринаИзделияМакс;
			
			Строка.ШиринаИзделия = РазмерыОсновного.Ширина;
			ЕстьПол = Истина;
			НеВлияетНаОсновнойСнизу = Строка.Изделие.НеВлияетНаОсновной;
			
		ИначеЕсли Строка.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент Тогда
			
			СтруктураДиапазонов.ВысотаМинЛевый = СтруктураДиапазонов.ВысотаМинЛевый + Строка.ВысотаИзделияМин;
			СтруктураДиапазонов.ВысотаМаксЛевый = СтруктураДиапазонов.ВысотаМаксЛевый + Строка.ВысотаИзделияМакс;
			
			СтруктураДиапазонов.ШиринаМинВерхний = ?(ЕстьКрышаНаВсе, СтруктураДиапазонов.ШиринаМинВерхний, СтруктураДиапазонов.ШиринаМинВерхний + Строка.ШиринаИзделияМин);
			СтруктураДиапазонов.ШиринаМаксВерхний = ?(ЕстьКрышаНаВсе, СтруктураДиапазонов.ШиринаМаксВерхний, СтруктураДиапазонов.ШиринаМаксВерхний + Строка.ШиринаИзделияМакс);
			СтруктураДиапазонов.ШиринаМинЦентр = СтруктураДиапазонов.ШиринаМинЦентр + Строка.ШиринаИзделияМин;
			СтруктураДиапазонов.ШиринаМаксЦентр = СтруктураДиапазонов.ШиринаМаксЦентр + Строка.ШиринаИзделияМакс;
			СтруктураДиапазонов.ШиринаМинНижний = СтруктураДиапазонов.ШиринаМинНижний + Строка.ШиринаИзделияМин;
			СтруктураДиапазонов.ШиринаМаксНижний = СтруктураДиапазонов.ШиринаМаксНижний + Строка.ШиринаИзделияМакс;
			
			Строка.ВысотаИзделия = РазмерыОсновного.ВысотаБоковой;
			ЕстьЛевыйБоковой = Истина;
			НеВлияетНаОсновнойСлева = Строка.Изделие.НеВлияетНаОсновной;
			
		ИначеЕсли Строка.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент Тогда
			
			СтруктураДиапазонов.ВысотаМинПравый = СтруктураДиапазонов.ВысотаМинПравый + Строка.ВысотаИзделияМин;
			СтруктураДиапазонов.ВысотаМаксПравый = СтруктураДиапазонов.ВысотаМаксПравый + Строка.ВысотаИзделияМакс;			
			
			СтруктураДиапазонов.ШиринаМинВерхний = ?(ЕстьКрышаНаВсе, СтруктураДиапазонов.ШиринаМинВерхний, СтруктураДиапазонов.ШиринаМинВерхний + Строка.ШиринаИзделияМин);
			СтруктураДиапазонов.ШиринаМаксВерхний = ?(ЕстьКрышаНаВсе, СтруктураДиапазонов.ШиринаМаксВерхний, СтруктураДиапазонов.ШиринаМаксВерхний + Строка.ШиринаИзделияМакс);			
			СтруктураДиапазонов.ШиринаМинЦентр = СтруктураДиапазонов.ШиринаМинЦентр + Строка.ШиринаИзделияМин;
			СтруктураДиапазонов.ШиринаМаксЦентр = СтруктураДиапазонов.ШиринаМаксЦентр + Строка.ШиринаИзделияМакс;
			СтруктураДиапазонов.ШиринаМинНижний = СтруктураДиапазонов.ШиринаМинНижний + Строка.ШиринаИзделияМин;
			СтруктураДиапазонов.ШиринаМаксНижний = СтруктураДиапазонов.ШиринаМаксНижний + Строка.ШиринаИзделияМакс;
			
			Строка.ВысотаИзделия = РазмерыОсновного.ВысотаБоковой;
			ЕстьПравыйБоковой = Истина;
			НеВлияетНаОсновнойСправа = Строка.Изделие.НеВлияетНаОсновной;
			
		ИначеЕсли Строка.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ОсновнойЭлемент Тогда
			
			СтруктураДиапазонов.ВысотаМинЦентр = СтруктураДиапазонов.ВысотаМинЦентр + Строка.ВысотаИзделияМин;
			СтруктураДиапазонов.ВысотаМаксЦентр = СтруктураДиапазонов.ВысотаМаксЦентр + Строка.ВысотаИзделияМакс;
			
			СтруктураДиапазонов.ШиринаМинЦентр = СтруктураДиапазонов.ШиринаМинЦентр + Строка.ШиринаИзделияМин;
			СтруктураДиапазонов.ШиринаМаксЦентр = СтруктураДиапазонов.ШиринаМаксЦентр + Строка.ШиринаИзделияМакс;
			
			Строка.ШиринаИзделия = РазмерыОсновного.Ширина;
			Строка.ВысотаИзделия = РазмерыОсновного.Высота;
			
		ИначеЕсли Строка.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ЗадняяСтенка Тогда
			
			ЕстьЗадняяСтенка = Истина;
			Строка.ШиринаИзделия = РазмерыОсновного.Ширина + 30;
			Строка.ВысотаИзделия = РазмерыОсновного.Высота + 30;
			
			Если НоменклатураСтенка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ЛДСП16 Тогда
				Строка.НоменклатураЛДСП = НоменклатураСтенка;
			ИначеЕсли НоменклатураСтенка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ДВП Тогда
				Строка.НоменклатураДВП = НоменклатураСтенка;
			КонецЕсли;
			
			НашаСтенка = Строка.Изделие;
			Строка.ШиринаИзделияМакс = НашаСтенка.ШиринаИзделияМакс;
			Строка.ВысотаИзделияМакс = НашаСтенка.ВысотаИзделияМакс;
			Строка.ГлубинаИзделияМакс = НашаСтенка.ГлубинаИзделияМакс;
			Строка.ШиринаИзделияМин = НашаСтенка.ШиринаИзделияМин;
			Строка.ВысотаИзделияМин = НашаСтенка.ВысотаИзделияМин;
			Строка.ГлубинаИзделияМин = НашаСтенка.ГлубинаИзделияМин;
			
			Если НЕ ЗначениеЗаполнено(НоменклатураСтенка) Тогда
				Текст = "Не выбрана номенклатура задней стенки";
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НоменклатураСтенка", Текст);
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Строка.НоменклатураЛДСП) И (Строка.ВидИзделия <> Справочники.ВидыИзделийПоКаталогу.ЗадняяСтенка) Тогда
			Если ЗначениеЗаполнено(ШапкаОсновныхНастроек.НоменклатураЛДСП) Тогда
				Строка.НоменклатураЛДСП = ШапкаОсновныхНастроек.НоменклатураЛДСП;
			Иначе
				Элементы.Детали.ТекущаяСтрока = Строка.ПолучитьИдентификатор();
				Текст = "Не выбрана номенклатура ЛДСП у " + Строка.ВидИзделия;
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Элементы.Детали.ТекущиеДанные.НоменклатураЛДСП", Текст);
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Строка.КромкаЛДСП) И (Строка.ВидИзделия <> Справочники.ВидыИзделийПоКаталогу.ЗадняяСтенка) Тогда
			Если ЗначениеЗаполнено(ШапкаОсновныхНастроек.КромкаЛДСП) Тогда
				Строка.КромкаЛДСП = ШапкаОсновныхНастроек.КромкаЛДСП;
			Иначе
				Элементы.Детали.ТекущаяСтрока = Строка.ПолучитьИдентификатор();
				Текст = "Не выбрана кромка у " + Строка.ВидИзделия;
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Элементы.Детали.ТекущиеДанные.КромкаЛДСП", Текст);
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(РучкиЯщиков) И Строка.ЕстьЯщики Тогда
			Текст = "Не выбраны ручки у " + Строка.ВидИзделия;
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "РучкиЯщиков", Текст);
		КонецЕсли;
		
		
		МинимальнаяГлубина = ?(ЗначениеЗаполнено(МинимальнаяГлубина), Макс(МинимальнаяГлубина, Строка.ГлубинаИзделияМин), Строка.ГлубинаИзделияМин);
		МаксимальнаяГлубина = ?(ЗначениеЗаполнено(МаксимальнаяГлубина), Мин(МаксимальнаяГлубина, Строка.ГлубинаИзделияМакс), Строка.ГлубинаИзделияМакс);
		
	КонецЦикла;
	
	Если ГлубинаИтог > МаксимальнаяГлубина ИЛИ ГлубинаИтог < МинимальнаяГлубина Тогда
		Текст = "Шкаф не подходит по глубине. Диапазон глубины изделия Мин = " + МинимальнаяГлубина + ", Макс = " + МаксимальнаяГлубина;
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ГлубинаИтог", Текст);
	КонецЕсли;
	
	МинимальнаяВысота = Макс(СтруктураДиапазонов.ВысотаМинЛевый, СтруктураДиапазонов.ВысотаМинЦентр, СтруктураДиапазонов.ВысотаМинПравый);
	МаксимальнаяВысота = СтруктураДиапазонов.ВысотаМаксЦентр;	
	Если ЗначениеЗаполнено(СтруктураДиапазонов.ВысотаМаксЛевый) И ЗначениеЗаполнено(СтруктураДиапазонов.ВысотаМаксПравый) Тогда
		МаксимальнаяВысота = Мин(СтруктураДиапазонов.ВысотаМаксЛевый, МаксимальнаяВысота, СтруктураДиапазонов.ВысотаМаксПравый);
	ИначеЕсли ЗначениеЗаполнено(СтруктураДиапазонов.ВысотаМаксЛевый) Тогда 						
		МаксимальнаяВысота = Мин(СтруктураДиапазонов.ВысотаМаксЛевый, МаксимальнаяВысота);
	ИначеЕсли ЗначениеЗаполнено(СтруктураДиапазонов.ВысотаМаксПравый) Тогда
		МаксимальнаяВысота = Мин(СтруктураДиапазонов.ВысотаМаксПравый, МаксимальнаяВысота);
	КонецЕсли;
	
	Если ВысотаИтог > МаксимальнаяВысота ИЛИ ВысотаИтог < МинимальнаяВысота Тогда
		Текст = "Шкаф не подходит по высоте. Диапазон высоты изделия Мин = " + МинимальнаяВысота + ", Макс = " + МаксимальнаяВысота;
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ВысотаИтог", Текст);
	КонецЕсли;
	
	МинимальнаяШирина = Макс(СтруктураДиапазонов.ШиринаМинВерхний, СтруктураДиапазонов.ШиринаМинЦентр, СтруктураДиапазонов.ШиринаМинНижний);
	МаксимальнаяШирина = СтруктураДиапазонов.ШиринаМаксЦентр;	
	Если ЗначениеЗаполнено(СтруктураДиапазонов.ШиринаМаксВерхний) И ЗначениеЗаполнено(СтруктураДиапазонов.ШиринаМаксНижний) Тогда
		МаксимальнаяВысота = Мин(СтруктураДиапазонов.ШиринаМаксВерхний, МаксимальнаяШирина, СтруктураДиапазонов.ШиринаМаксНижний);
	ИначеЕсли ЗначениеЗаполнено(СтруктураДиапазонов.ШиринаМаксВерхний) Тогда 						
		МаксимальнаяВысота = Мин(СтруктураДиапазонов.ШиринаМаксВерхний, МаксимальнаяШирина);
	ИначеЕсли ЗначениеЗаполнено(СтруктураДиапазонов.ШиринаМаксНижний) Тогда
		МаксимальнаяВысота = Мин(СтруктураДиапазонов.ШиринаМаксНижний, МаксимальнаяШирина);
	КонецЕсли;
	
	Если ШиринаИтог > МаксимальнаяШирина ИЛИ ШиринаИтог < МинимальнаяШирина Тогда
		Текст = "Шкаф не подходит по ширине. Диапазон ширины изделия Мин = " + МинимальнаяШирина + ", Макс = " + МаксимальнаяШирина;
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ШиринаИтог", Текст);
	КонецЕсли;
	
	Если Ошибки <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
		Возврат Неопределено;
	КонецЕсли;
	
	# Область СозданиеСтрокиПрипусков
	
	Для Каждого Элемент Из Детали Цикл
		
		Элемент.СтрокаПрипусков = "";
		Элемент.СтрокаЗавалов = "";
		
		Если Элемент.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.Потолок Тогда 
			
			Если НЕ ЕстьЛевыйБоковой ИЛИ НеВлияетНаОсновнойСлева Тогда
				Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСлева";
			КонецЕсли;
			Если НЕ ЕстьПравыйБоковой ИЛИ НеВлияетНаОсновнойСправа Тогда
				Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСправа";
			КонецЕсли;
			
			Элемент.СтрокаЗавалов = "ЗавалПотолок";
			
		ИначеЕсли Элемент.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.Пол Тогда
			
			Если НЕ ЕстьЛевыйБоковой ИЛИ НеВлияетНаОсновнойСлева Тогда
				Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСлева";
			КонецЕсли;
			Если НЕ ЕстьПравыйБоковой ИЛИ НеВлияетНаОсновнойСправа Тогда
				Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСправа";
			КонецЕсли;
			
			Элемент.СтрокаЗавалов = "ЗавалПол";
			
		ИначеЕсли Элемент.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент Тогда
			
			Если НЕ ЕстьКрышаНаВсе Тогда
				Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСверху";
			КонецЕсли;
			Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСнизу";
			
			Элемент.СтрокаЗавалов = "ЗавалЛевый";
			
		ИначеЕсли Элемент.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент Тогда
			
			Если НЕ ЕстьКрышаНаВсе Тогда
				Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСверху";
			КонецЕсли;
			Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСнизу";
			
			Элемент.СтрокаЗавалов = "ЗавалПравый";
			
		ИначеЕсли Элемент.ВидИзделия = Справочники.ВидыИзделийПоКаталогу.ОсновнойЭлемент Тогда
			
			Если (НЕ ЕстьКрыша И НЕ ЕстьКрышаНаВсе) ИЛИ НеВлияетНаОсновнойСверху Тогда
				Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСверху";
				Элемент.СтрокаЗавалов = Элемент.СтрокаЗавалов + "ЗавалПотолок"
			КонецЕсли;
			Если НЕ ЕстьЛевыйБоковой ИЛИ НеВлияетНаОсновнойСлева Тогда
				Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСлева";
				Элемент.СтрокаЗавалов = Элемент.СтрокаЗавалов + "ЗавалЛевый"
			КонецЕсли;
			Если НЕ ЕстьПол ИЛИ НеВлияетНаОсновнойСнизу Тогда
				Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСнизу";
				Элемент.СтрокаЗавалов = Элемент.СтрокаЗавалов + "ЗавалПол"
			КонецЕсли;
			Если НЕ ЕстьПравыйБоковой ИЛИ НеВлияетНаОсновнойСправа Тогда
				Элемент.СтрокаПрипусков = Элемент.СтрокаПрипусков + "ПрипускСправа";
				Элемент.СтрокаЗавалов = Элемент.СтрокаЗавалов + "ЗавалПравый"
			КонецЕсли;
			Элемент.СтрокаЗавалов = Элемент.СтрокаЗавалов + "ЗавалСтенка"
						
		КонецЕсли;
		
	КонецЦикла;
	
	# КонецОбласти
	
	Структура = Новый Структура;
	Структура.Вставить("Детали", Детали.Выгрузить());
	Структура.Вставить("Двери", Двери);
		
	Возврат ПоместитьВоВременноеХранилище(Структура);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруИзделия(Изделие, ВидИзделия)
	
	ЕстьЯщики = Изделие.СписокЯщики.Количество() > 0;
	ЕстьЛДСПДоп = ЗначениеЗаполнено(Изделие.СписокМатериалы.Найти(Истина, "ВторойЦвет"));
	АдресЭлемента = ПолучитьАдрес(Изделие, ВидИзделия);
	
	Структура = Новый Структура;
	Структура.Вставить("АдресЭлемента", АдресЭлемента);
	Структура.Вставить("ВысотаИзделия", Изделие.ВысотаИзделия);
	Структура.Вставить("ШиринаИзделия", Изделие.ШиринаИзделия);
	Структура.Вставить("ГлубинаИзделия", Изделие.ГлубинаИзделия);
	Структура.Вставить("ВысотаИзделияМин", Изделие.ВысотаИзделияМин);
	Структура.Вставить("ШиринаИзделияМин", Изделие.ШиринаИзделияМин);
	Структура.Вставить("ГлубинаИзделияМин", Изделие.ГлубинаИзделияМин);
	Структура.Вставить("ВысотаИзделияМакс", Изделие.ВысотаИзделияМакс);
	Структура.Вставить("ШиринаИзделияМакс", Изделие.ШиринаИзделияМакс);
	Структура.Вставить("ГлубинаИзделияМакс", Изделие.ГлубинаИзделияМакс);
	Структура.Вставить("ВысотаИзделияСтрока", Изделие.ВысотаИзделияСтрока);
	Структура.Вставить("ШиринаИзделияСтрока", Изделие.ШиринаИзделияСтрока);
	Структура.Вставить("ГлубинаИзделияСтрока", Изделие.ГлубинаИзделияСтрока);
	Структура.Вставить("ЕстьЯщики", ЕстьЯщики);
	Структура.Вставить("ЕстьЛДСПДоп", ЕстьЛДСПДоп);
	Структура.Вставить("НаВсеИзделие", Изделие.НаВсеИзделие);
	Структура.Вставить("НеВлияетНаОсновной", Изделие.НеВлияетНаОсновной);
	
	Возврат Структура;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьМатериалСтенки(ЗадняяСтенка)
	
	//Изделие по каталогу Задняя стенка должна иметь 1 деталь - саму стенку, определяем ее материал
	Если ЗначениеЗаполнено(ЗадняяСтенка) Тогда
		Если ЗадняяСтенка.СписокМатериалы.Количество() > 0 Тогда
			Возврат ЗадняяСтенка.СписокМатериалы[0].Материал;
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ПолучитьРазмерыОсновногоЭлемента()
	
	НашОсновнойЭлемент = Детали.НайтиСтроки(Новый Структура("ВидИзделия", ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ОсновнойЭлемент")));
	ЕстьОсновной = НашОсновнойЭлемент.Количество() > 0;
	Если ЕстьОсновной Тогда
		Размеры = Новый Структура;
		Размеры.Вставить("Глубина", ГлубинаИтог);
		
		ШиринаОсновногоЭлемента = ШиринаИтог;
		ВысотаОсновногоЭлемента = ВысотаИтог;
		ВысотаКрыша = 0;
		
		Для Каждого Строка Из Детали Цикл
			Если Строка.ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.Потолок") Тогда
				Если Строка.НаВсеИзделие Тогда
					ВысотаКрыша = Строка.ВысотаИзделия;
				КонецЕсли;
				Если НЕ Строка.НеВлияетНаОсновной Тогда
					ВысотаОсновногоЭлемента = ВысотаОсновногоЭлемента - Строка.ВысотаИзделия;	
				КонецЕсли;
			ИначеЕсли Строка.ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.Пол") И НЕ Строка.НеВлияетНаОсновной Тогда
				ВысотаОсновногоЭлемента = ВысотаОсновногоЭлемента - Строка.ВысотаИзделия;
			ИначеЕсли (Строка.ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент")
				ИЛИ Строка.ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент"))
				И НЕ Строка.НеВлияетНаОсновной Тогда
				ШиринаОсновногоЭлемента = ШиринаОсновногоЭлемента - Строка.ШиринаИзделия;	
			КонецЕсли;	
		КонецЦикла;                                                      
		
		Размеры.Вставить("Ширина", ШиринаОсновногоЭлемента);
		Размеры.Вставить("Высота", ВысотаОсновногоЭлемента);
		Размеры.Вставить("ВысотаБоковой", ВысотаИтог - ВысотаКрыша);
		
		Возврат Размеры;
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выберите основной элемент", , "ОсновнойЭлемент");
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступность(ВидИзделия)
	
	СтрокаДетали = Детали.НайтиСтроки(Новый Структура("ВидИзделия", ВидИзделия));
	
	Если (СтрокаДетали.Количество() = 1) И (ВидИзделия <> ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЗадняяСтенка")) Тогда
		Флаг = НЕ СтрокаДетали[0].Предопределенный;
		ЕстьЯщики = ?(СтрокаДетали[0].Предопределенный, Ложь, СтрокаДетали[0].ЕстьЯщики);
		ЕстьЛДСПДоп = ?(СтрокаДетали[0].Предопределенный, Ложь, СтрокаДетали[0].ЕстьЛДСПДоп);
	Иначе
		Флаг = Ложь;
		ЕстьЯщики = Ложь;
		ЕстьЛДСПДоп = Ложь;
	КонецЕсли;
	
	Элементы.ДеталиНоменклатураЛДСП.Доступность = Флаг;
	Элементы.ДеталиКромкаЛДСП.Доступность = Флаг;
	Элементы.РучкиЯщиков.Доступность = ЕстьЯщики;
	Элементы.ДеталиНоменклатураЛДСПДоп.Доступность = ЕстьЛДСПДоп;
	Элементы.ДеталиКромкаЛДСПДоп.Доступность = ЕстьЛДСПДоп;
	Элементы.НоменклатураСтенка.Доступность = (ЗадняяСтенка <> ПредопределенноеЗначение("Справочник.КаталогИзделий.ЗадняяСтенаЗаказчика"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьКартинку(АдресЭлемента, ЭлементИзделия)
	
	Если ЗначениеЗаполнено(АдресЭлемента) Тогда
		АдресЭлемента = РабочийКаталог + АдресЭлемента;
		АдресВХранилище = "";
		Если ЗначениеЗаполнено(АдресЭлемента) Тогда
			ИмяФайла = АдресЭлемента;
			ФайлИзображения = Новый Файл(ИмяФайла);
			Если ФайлИзображения.Существует() Тогда
				ПоместитьФайл(АдресВХранилище, ИмяФайла, , Ложь, ЭтаФорма.УникальныйИдентификатор);
			КонецЕсли;
		КонецЕсли;
		
		ЭтаФорма[ЭлементИзделия] = АдресВХранилище;
		
	Иначе
		ВызватьИсключение "Ошибка 735: Критическая ошибка каталога (нет изображения изделия)!!!";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтроку(НашаСтрока, ВидИзделия, Изделие = Неопределено, СтруктураИзделия = Неопределено, ЭлементИзделия = Неопределено)
	
	ЭтоПредопределенный = Ложь;
	Ошибки = Неопределено;
	АдресЭлемента = "";
	
	Если Изделие = Неопределено Тогда
		СтрокаПредопределенных = АдресаПредопределенных.НайтиСтроки(Новый Структура("ВидИзделия", ВидИзделия));
		Если СтрокаПредопределенных.Количество() = 1 Тогда
			ЭтоПредопределенный = Истина;
			
			Изделие	= СтрокаПредопределенных[0].Изделие;
			АдресЭлемента = СтрокаПредопределенных[0].АдресИзделия;
			
			СписокНесовместимых = СтрокаПредопределенных[0].СписокНесовместимых;
			Для Каждого СтрокаДетали Из Детали Цикл
				Если СписокНесовместимых.НайтиПоЗначению(СтрокаДетали.Изделие) <> Неопределено Тогда
					Текст = "Изделие """ + Изделие + """ несовместимо с """ + СтрокаДетали.Изделие + """";
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , Текст);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если Ошибки <> Неопределено Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
		Возврат;
	КонецЕсли;
	
	Если Изделие <> Неопределено Тогда
		НашаСтрока.Изделие = Изделие;
		НашаСтрока.ВидИзделия = ВидИзделия;
		Если СтруктураИзделия <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(НашаСтрока, СтруктураИзделия);
		Иначе
			НашаСтрока.ВысотаИзделия = 0;
			НашаСтрока.ШиринаИзделия = 0;
			НашаСтрока.ГлубинаИзделия = 0;
			НашаСтрока.ВысотаИзделияМин = 0;
			НашаСтрока.ШиринаИзделияМин = 0;
			НашаСтрока.ГлубинаИзделияМин = 0;
			НашаСтрока.ВысотаИзделияМакс = 0;
			НашаСтрока.ШиринаИзделияМакс = 0;
			НашаСтрока.ГлубинаИзделияМакс = 0;
			НашаСтрока.ВысотаИзделияСтрока = "";
			НашаСтрока.ШиринаИзделияСтрока = "";
			НашаСтрока.ГлубинаИзделияСтрока = "";
			НашаСтрока.ЕстьЯщики = Ложь;
			НашаСтрока.НаВсеИзделие = Ложь;
			НашаСтрока.НеВлияетНаОсновной = Ложь;
		КонецЕсли;
		
		НашаСтрока.Предопределенный = ЭтоПредопределенный;
		
		Элементы.Детали.ТекущаяСтрока = Детали.Индекс(НашаСтрока);
		
		Если ВидИзделия <> ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЗадняяСтенка") Тогда
			АдресЭлемента = ?(СтруктураИзделия <> Неопределено, СтруктураИзделия.АдресЭлемента, АдресЭлемента);
			ОтобразитьКартинку(АдресЭлемента, ЭлементИзделия);
			Если ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ОсновнойЭлемент") Тогда
				НашаСтрока.ПредставлениеВидаИзделия = "Основной";
			КонецЕсли;
		Иначе
			ЗадняяСтенка = Изделие;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НашаСтрока.ВысотаИзделияСтрока) ИЛИ ЗначениеЗаполнено(НашаСтрока.ШиринаИзделияСтрока) ИЛИ ЗначениеЗаполнено(НашаСтрока.ГлубинаИзделияСтрока) Тогда
			//Если есть формульные значения размеров, определяем значеия завалов
			
			ЗавалПол = 0;
			ЗавалЛевый = 0;
			ЗавалПравый = 0;
			ЗавалПотолок = 0;
			ЗавалСтенка = 0; 
			
			НоменклатураМатериала = НашаСтрока.НоменклатураМатериала;
			
			Если ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЗадняяСтенка") Тогда
				ЗавалСтенка = НашаСтрока.Завал;
			ИначеЕсли ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент") Тогда
				  ЗавалПравый =  НашаСтрока.Завал;
			ИначеЕсли ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент") Тогда
				  ЗавалЛевый =  НашаСтрока.Завал;
			ИначеЕсли ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.Пол") Тогда
				 ЗавалПол =  НашаСтрока.Завал;
			ИначеЕсли ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.Потолок") Тогда
				  ЗавалПотолок =  НашаСтрока.Завал;
			КонецЕсли;
					
			Если ЗначениеЗаполнено(НашаСтрока.ВысотаИзделияСтрока) Тогда
				Попытка
					Выполнить("НашаСтрока.ВысотаИзделия = " + НашаСтрока.ВысотаИзделияСтрока);
				Исключение
					Текст = "Ошибка при формировании формул для Высоты каталога изделий " + НашаСтрока.Изделие;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
					ЗаполнитьСтроку(НашаСтрока, ТекущийЭлементИзделия,,, ЭлементИзделия);
				КонецПопытки;	
			КонецЕсли;
			
			Если ЗначениеЗаполнено(НашаСтрока.ШиринаИзделияСтрока) Тогда
				Попытка
					Выполнить("НашаСтрока.ШиринаИзделия = " + НашаСтрока.ШиринаИзделияСтрока);
				Исключение
					Текст = "Ошибка при формировании формул для Ширины каталога изделий " + НашаСтрока.Изделие;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
					ЗаполнитьСтроку(НашаСтрока, ТекущийЭлементИзделия,,, ЭлементИзделия);
				КонецПопытки;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(НашаСтрока.ГлубинаИзделияСтрока) Тогда
				Попытка
					Выполнить("НашаСтрока.ГлубинаИзделия = " + НашаСтрока.ГлубинаИзделияСтрока);
				Исключение
					Текст = "Ошибка при формировании формул для Глубины каталога изделий " + НашаСтрока.Изделие;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
					ЗаполнитьСтроку(НашаСтрока, ТекущийЭлементИзделия,,, ЭлементИзделия);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Детали.Удалить(НашаСтрока);
		ЭтаФорма[ЭлементИзделия] = "";
	КонецЕсли;
	
	УстановитьДоступность(ВидИзделия);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РабочийКаталог = ФайловыеФункцииСлужебныйКлиент.ВыбратьПутьККаталогуДанныхПользователя();
	
	Если ЗначениеЗаполнено(Двери) Тогда		
		РазмерыДвери = ОпределитьРазмерыДвери();
		ВысотаПроемаДвери = РазмерыДвери.ВысотаПроема;
		ШиринаПроемаДвери = РазмерыДвери.ШиринаПроема;
	КонецЕсли;
	
	Если Детали.Количество() > 1 Тогда
		
		Если ЗначениеЗаполнено(Детали[1].НоменклатураЛДСП) Тогда
			
			СтруктураПодставляяемойНоменклатуры = ЛексСервер.ПолучитьСтруктуруПодставляемойНоменклатурыПоЦветуЛДСП(Детали[1].НоменклатураЛДСП, Подразделение);
			
		КонецЕсли;
		
	КонецЕсли;
	
	//КРИВИЗНА
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("Потолок");
	МассивЭлементов.Добавить("ЛевыйБоковойЭлемент");
	МассивЭлементов.Добавить("ОсновнойЭлемент");
	МассивЭлементов.Добавить("Пол");
	МассивЭлементов.Добавить("ПравыйБоковойЭлемент");
	
	Для Каждого Строка Из МассивЭлементов Цикл
		Если ЗначениеЗаполнено(ЭтаФорма[Строка]) Тогда
			ОтобразитьКартинку(ЭтаФорма[Строка], Строка);
		КонецЕсли;	
	КонецЦикла;
	
	//УстановитьДоступность(ТекущийЭлементИзделия);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Подразделение = Параметры.Подразделение;
	Спецификация = Параметры.Спецификация;
	Корпусный = Спецификация.Изделие = Справочники.Изделия.КорпусныйШкафКупеПоКаталогу;
	Элементы.ДеталиЗавал.ТолькоПросмотр = Корпусный;
		
	ЗагрузкаАдресаПредопределенных();
	
	#Область Заполнение_номенклатурных_групп
	СписокНоменклатурныхГрупп = Новый СписокЗначений;
	
	СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ЛДСП16);
	СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.КантТ);
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.Кромка045_19);
	СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.Кромка2_19);
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.Кромка2_35);
	СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ДВП);
	СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.Ручка);
	
	МассивыНоменклатурныхГрупп = ЛексСервер.ОтборНоменклатурныхГрупп(СписокНоменклатурныхГрупп, Подразделение);
	ДобавитьДопГруппы();
	
	Элементы.ДеталиНоменклатураЛДСП.СписокВыбора.ЗагрузитьЗначения(МассивыНоменклатурныхГрупп.ЛДСП16);
	Элементы.ДеталиКромкаЛДСП.СписокВыбора.ЗагрузитьЗначения(МассивыНоменклатурныхГрупп.Кромка);
	Элементы.ДеталиНоменклатураЛДСПДоп.СписокВыбора.ЗагрузитьЗначения(МассивыНоменклатурныхГрупп.ЛДСП16);
	Элементы.ДеталиКромкаЛДСПДоп.СписокВыбора.ЗагрузитьЗначения(МассивыНоменклатурныхГрупп.Кромка);
	Элементы.РучкиЯщиков.СписокВыбора.ЗагрузитьЗначения(МассивыНоменклатурныхГрупп.Ручка);	
	Элементы.ЗадняяСтенка.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокСтенок());	
	#КонецОбласти
	
	НоменклатураМатериала = Новый Структура;
	НоменклатураМатериала.Вставить("ДлинаДетали", 0);
	НоменклатураМатериала.Вставить("ШиринаДетали ", 0);
	НоменклатураМатериала.Вставить("ГлубинаДетали ", 0);
	
	#Область ШапкаОсновныхНастроек
	ШапкаОсновныхНастроек = Новый Структура;
	
	ШапкаОсновныхНастроек.Вставить("НоменклатураЛДСП", "");
	ШапкаОсновныхНастроек.Вставить("КромкаЛДСП", "");
	ШапкаОсновныхНастроек.Вставить("НоменклатураМатериала", НоменклатураМатериала);
	ШапкаОсновныхНастроек.Вставить("НоменклатураЛДСПДоп", "");
	ШапкаОсновныхНастроек.Вставить("КромкаЛДСПДоп", "");
	#КонецОбласти
	
	СтруктураФормы = ПолучитьИзВременногоХранилища(Параметры.АдресТаблицы);
	Двери = СтруктураФормы.Двери;
	Детали.Загрузить(СтруктураФормы.Детали.Выгрузить());
	
	Если Детали.Количество() = 0 Тогда
		Для Каждого ЗначениеЭлемента Из АдресаПредопределенных Цикл
			НоваяСтрока = Детали.Добавить();
			НоваяСтрока.Изделие = ЗначениеЭлемента.Изделие;
			НоваяСтрока.ВидИзделия = ЗначениеЭлемента.ВидИзделия;
		КонецЦикла;
	КонецЕсли;	
	
	Для Каждого Строка Из Детали Цикл
		
		//Если Строка.ПолучитьИдентификатор() = 0 Тогда
		//	ТекущийЭлементИзделия = Строка.ВидИзделия;
		//КонецЕсли;
		
		НашеИзделие = Строка.Изделие;
		НашВидИзделия = ОпределитьКорневойВидИзделия(Строка.ВидИзделия);
		
		Строка.НоменклатураМатериала = НоменклатураМатериала;
		Строка.НоменклатураМатериала.Вставить("ДлинаДетали", Строка.НоменклатураЛДСП.ДлинаДетали);
		Строка.НоменклатураМатериала.Вставить("ШиринаДетали ", Строка.НоменклатураЛДСП.ШиринаДетали);
		Строка.НоменклатураМатериала.Вставить("ГлубинаДетали ", Строка.НоменклатураЛДСП.ГлубинаДетали);
		
		Если НашВидИзделия = Справочники.ВидыИзделийПоКаталогу.ЗадняяСтенка Тогда
			
			ЗадняяСтенка = НашеИзделие;
			МатериалСтенки = ПолучитьМатериалСтенки(ЗадняяСтенка);
						
			Если МатериалСтенки = "16 ЛДСП" Тогда
				Элементы.НоменклатураСтенка.СписокВыбора.ЗагрузитьЗначения(МассивыНоменклатурныхГрупп.ЛДСП16);
				НоменклатураСтенка = Строка.НоменклатураЛДСП;
			ИначеЕсли МатериалСтенки = "ДВП" Тогда
				Элементы.НоменклатураСтенка.СписокВыбора.ЗагрузитьЗначения(МассивыНоменклатурныхГрупп.ДВП);
				НоменклатураСтенка = Строка.НоменклатураДВП;
			Иначе
				Элементы.НоменклатураСтенка.СписокВыбора.Очистить();
			КонецЕсли;
			Строка.ПредставлениеВидаИзделия = "Стенка";
			
		ИначеЕсли НашВидИзделия = Справочники.ВидыИзделийПоКаталогу.ОсновнойЭлемент Тогда
			ГлубинаИтог = Строка.ГлубинаИзделия;
			ВысотаОсновного = Строка.ВысотаИзделия;
			ШиринаОсновного = Строка.ШиринаИзделия;
			ОсновнойЭлемент = ПолучитьАдрес(НашеИзделие, Строка.ВидИзделия);
			РучкиЯщиков = Строка.Ручка;
			ШапкаОсновныхНастроек.Вставить("НоменклатураЛДСП", Строка.НоменклатураЛДСП);
			ШапкаОсновныхНастроек.Вставить("КромкаЛДСП", Строка.КромкаЛДСП);
			ШапкаОсновныхНастроек.Вставить("НоменклатураМатериала", НоменклатураМатериала);
			Строка.ПредставлениеВидаИзделия = "Основной";
		ИначеЕсли НашВидИзделия = Справочники.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент Тогда
			ЛевыйБоковойЭлемент = ПолучитьАдрес(НашеИзделие, Строка.ВидИзделия);
			РучкиЯщиков = Строка.Ручка;
			Строка.ПредставлениеВидаИзделия = "Левый";
		ИначеЕсли НашВидИзделия = Справочники.ВидыИзделийПоКаталогу.Пол Тогда
			Пол = ПолучитьАдрес(НашеИзделие, Строка.ВидИзделия);
			Строка.ПредставлениеВидаИзделия = "Пол";
		ИначеЕсли НашВидИзделия = Справочники.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент Тогда
			ПравыйБоковойЭлемент = ПолучитьАдрес(НашеИзделие, Строка.ВидИзделия);
			РучкиЯщиков = Строка.Ручка;
			Строка.ПредставлениеВидаИзделия = "Правый";
		ИначеЕсли НашВидИзделия = Справочники.ВидыИзделийПоКаталогу.Потолок Тогда
			Потолок = ПолучитьАдрес(НашеИзделие, Строка.ВидИзделия);
			Строка.ПредставлениеВидаИзделия = "Потолок";
		КонецЕсли;
		                          
		Строка.ШиринаИзделияМакс = НашеИзделие.ШиринаИзделияМакс;
		Строка.ВысотаИзделияМакс = НашеИзделие.ВысотаИзделияМакс;
		Строка.ГлубинаИзделияМакс = НашеИзделие.ГлубинаИзделияМакс;
		Строка.ШиринаИзделияМин = НашеИзделие.ШиринаИзделияМин;
		Строка.ВысотаИзделияМин = НашеИзделие.ВысотаИзделияМин;
		Строка.ГлубинаИзделияМин = НашеИзделие.ГлубинаИзделияМин;
		Строка.ШиринаИзделияСтрока = НашеИзделие.ШиринаИзделияСтрока;
		Строка.ВысотаИзделияСтрока = НашеИзделие.ВысотаИзделияСтрока;
		Строка.ГлубинаИзделияСтрока = НашеИзделие.ГлубинаИзделияСтрока;
		ЕстьЯщики = НашеИзделие.СписокЯщики.Количество() > 0;
		Строка.ЕстьЯщики = ЕстьЯщики;
		ЕстьЛДСПДоп = ЗначениеЗаполнено(НашеИзделие.СписокМатериалы.Найти(Истина, "ВторойЦвет"));
		Строка.ЕстьЛДСПДоп = ЕстьЛДСПДоп;
		Строка.НаВсеИзделие = НашеИзделие.НаВсеИзделие;
		Строка.НеВлияетНаОсновной = НашеИзделие.НеВлияетНаОсновной;
		Строка.Предопределенный = НашеИзделие.Предопределенный;
				
	КонецЦикла;
	
	ПолучитьИтоговыеРазмеры(ВысотаОсновного, ШиринаОсновного);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Двери") И ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		ДвериПриИзмененииНаКлиенте(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ВыборИзделия(Команда)
	
	ЭлементИзделия = ЭтаФорма.ТекущийЭлемент.Имя;
	ТекущийЭлементИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу." + ЭлементИзделия);
	
	МассивИзделий = Новый Массив;
	Для Каждого Строка Из Детали Цикл
		МассивИзделий.Добавить(Строка.Изделие);
	КонецЦикла;	
	
	Изделие = ОткрытьФормуМодально("Справочник.КаталогИзделий.ФормаВыбора", Новый Структура("Отбор, ВидИзделияПоКаталогу, МассивИзделий", Новый Структура("Активный, Корпусный", Истина, Корпусный), ТекущийЭлементИзделия, МассивИзделий), ЭтаФорма);
	                                                                                                                                                                 
	Если ЗначениеЗаполнено(Изделие) Тогда	
		СтруктураИзделия = ПолучитьСтруктуруИзделия(Изделие, ТекущийЭлементИзделия);
		НашаСтрока = Детали.НайтиСтроки(Новый Структура("ВидИзделия", ТекущийЭлементИзделия));
		
		Если НашаСтрока.Количество() = 1 Тогда
			НоваяСтрока = НашаСтрока[0];
		Иначе
			НоваяСтрока = Детали.Добавить();
		КонецЕсли;
		
		НоваяСтрока.НоменклатураЛДСП = ШапкаОсновныхНастроек.НоменклатураЛДСП;
		НоваяСтрока.КромкаЛДСП = ШапкаОсновныхНастроек.КромкаЛДСП;
		НоваяСтрока.НоменклатураМатериала = ШапкаОсновныхНастроек.НоменклатураМатериала;
		
		ЗаполнитьСтроку(НоваяСтрока, ТекущийЭлементИзделия, Изделие, СтруктураИзделия, ЭлементИзделия);		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ЭлементИзделия = ЭтаФорма.ТекущийЭлемент.Имя;
	ТекущийЭлементИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу." + ЭлементИзделия);
	НашаСтрока = Детали.НайтиСтроки(Новый Структура("ВидИзделия", ТекущийЭлементИзделия));
	
	Если НашаСтрока.Количество() = 1 Тогда
		ЗаполнитьСтроку(НашаСтрока[0], ТекущийЭлементИзделия,,, ЭлементИзделия);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	РазмерыОсновногоЭлемента = ПолучитьРазмерыОсновногоЭлемента();
	Отказ = Ложь;
	Если РазмерыОсновногоЭлемента <> Неопределено Тогда 
		Модифицированность = Ложь;
		СтруктураФормы = ПроверитьИУстановитьРазмерыПередСохранением(РазмерыОсновногоЭлемента);
		
		Если ЗначениеЗаполнено(Двери) Тогда
			
			Отказ = ПроверкаДвери();
			
		КонецЕсли;
		
		Если (СтруктураФормы <> Неопределено) И (НЕ Отказ) Тогда
			ОповеститьОВыборе(СтруктураФормы);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ИзделиеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Детали.ТекущиеДанные;
	ТекущийЭлементИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу." + ЭтаФорма.ТекущийЭлемент.Имя);	
	НашаСтрока = Детали.НайтиСтроки(Новый Структура("ВидИзделия", ТекущийЭлементИзделия));
	ЭтоПредопределенный = Ложь;
	ЕстьЯщики = Ложь;
	
	Если НашаСтрока.Количество() = 1 Тогда
		
		Элементы.Детали.ТекущаяСтрока = Детали.Индекс(НашаСтрока[0]);
		СтрокаПредопределенных = АдресаПредопределенных.НайтиСтроки(Новый Структура("Изделие",  ТекущиеДанные.Изделие));
		ЭтоПредопределенный = СтрокаПредопределенных.Количество() <> 0;
		
		Если НЕ ЭтоПредопределенный Тогда
			ЕстьЯщики = ТекущиеДанные.ЕстьЯщики;
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.НоменклатураЛДСП) И ЗначениеЗаполнено(ШапкаОсновныхНастроек.НоменклатураЛДСП) Тогда
				ТекущиеДанные.НоменклатураЛДСП = ШапкаОсновныхНастроек.НоменклатураЛДСП;
			ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.НоменклатураЛДСП) Тогда
				ШапкаОсновныхНастроек.Вставить("НоменклатураЛДСП", ТекущиеДанные.НоменклатураЛДСП);
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.КромкаЛДСП) И ЗначениеЗаполнено(ШапкаОсновныхНастроек.КромкаЛДСП) Тогда
				ТекущиеДанные.КромкаЛДСП = ШапкаОсновныхНастроек.КромкаЛДСП;
			ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.КромкаЛДСП) Тогда
				ШапкаОсновныхНастроек.Вставить("КромкаЛДСП", ТекущиеДанные.КромкаЛДСП);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Элементы.Детали.ТекущаяСтрока = Неопределено;
	КонецЕсли;
	
	УстановитьДоступность(ТекущийЭлементИзделия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадняяСтенкаПриИзменении(Элемент)
	
	ТекущийЭлементИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЗадняяСтенка");
	
	УстановитьДоступность(ТекущийЭлементИзделия);
	
	Если ЗначениеЗаполнено(ЗадняяСтенка) Тогда
		
		МатериалСтенки = ПолучитьМатериалСтенки(ЗадняяСтенка);
		
		Если МатериалСтенки = "16 ЛДСП" Тогда
			Элементы.НоменклатураСтенка.СписокВыбора.ЗагрузитьЗначения(МассивыНоменклатурныхГрупп.ЛДСП16);
		ИначеЕсли МатериалСтенки = "ДВП" Тогда
			Элементы.НоменклатураСтенка.СписокВыбора.ЗагрузитьЗначения(МассивыНоменклатурныхГрупп.ДВП);
		Иначе
			Элементы.НоменклатураСтенка.СписокВыбора.Очистить();
		КонецЕсли;
		
		Стенка = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЗадняяСтенка");
		НашаСтрока = Детали.НайтиСтроки(Новый Структура("ВидИзделия", Стенка));
		
		Если НашаСтрока.Количество() = 1 Тогда
			НоваяСтрока = НашаСтрока[0];
		Иначе
			НоваяСтрока = Детали.Добавить();
		КонецЕсли;
		
		НоваяСтрока.Изделие = ЗадняяСтенка;
		НоваяСтрока.ВидИзделия = Стенка;
		НоменклатураСтенка = Неопределено;
	Иначе
		НоменклатураСтенка = Неопределено;
		Элементы.НоменклатураСтенка.СписокВыбора.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадняяСтенкаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭлементИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЗадняяСтенка");
	НашаСтрока = Детали.НайтиСтроки(Новый Структура("ВидИзделия", ЭлементИзделия));
	Если НашаСтрока.Количество() = 1 Тогда
		ЗаполнитьСтроку(НашаСтрока[0], ЭлементИзделия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураСтенкаПриИзменении(Элемент)
	
	ТекущийЭлементИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЗадняяСтенка");
	УстановитьДоступность(ТекущийЭлементИзделия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеталиНоменклатураЛДСППриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Детали.ТекущиеДанные;
	ЛДСП = ТекущиеДанные.НоменклатураЛДСП;
	ШапкаОсновныхНастроек.Вставить("НоменклатураЛДСП", ЛДСП);
	
	Структура = ОпределитьСтруктурыЛДСП(ЛДСП, Подразделение, ТекущиеДанные.НоменклатураМатериала);
	
	ТекущиеДанные.НоменклатураМатериала = Структура.НоменклатураМатериала;
	ШапкаОсновныхНастроек.Вставить("НоменклатураМатериала", ТекущиеДанные.НоменклатураМатериала);
	
	Если Найти(ТекущиеДанные.ВысотаИзделияСтрока, "НоменклатураМатериала") > 0 
		ИЛИ Найти(ТекущиеДанные.ШиринаИзделияСтрока, "НоменклатураМатериала") > 0
		ИЛИ Найти(ТекущиеДанные.ГлубинаИзделияСтрока, "НоменклатураМатериала") > 0 Тогда
		
		НоменклатураМатериала = ТекущиеДанные.НоменклатураМатериала;
		
		Если Найти(ТекущиеДанные.ВысотаИзделияСтрока, "НоменклатураМатериала") Тогда
			Попытка
				Выполнить("ТекущиеДанные.ВысотаИзделия = " + ТекущиеДанные.ВысотаИзделияСтрока);
			Исключение
				Текст = "Ошибка при формировании формул для Высоты каталога изделий " + ТекущиеДанные.Изделие;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			КонецПопытки;	
		КонецЕсли;
		
		Если Найти(ТекущиеДанные.ШиринаИзделияСтрока, "НоменклатураМатериала") Тогда
			Попытка
				Выполнить("ТекущиеДанные.ШиринаИзделия = " + ТекущиеДанные.ШиринаИзделияСтрока);
			Исключение
				Текст = "Ошибка при формировании формул для Ширины каталога изделий " + ТекущиеДанные.Изделие;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			КонецПопытки;
		КонецЕсли;
		
		Если Найти(ТекущиеДанные.ГлубинаИзделияСтрока, "НоменклатураМатериала") Тогда
			Попытка
				Выполнить("ТекущиеДанные.ГлубинаИзделия = " + ТекущиеДанные.ГлубинаИзделияСтрока);
			Исключение
				Текст = "Ошибка при формировании формул для Глубины каталога изделий " + ТекущиеДанные.Изделие;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;

	Если ТекущиеДанные.ЕстьЛДСПДоп Тогда
		
		ТекущиеДанные.НоменклатураЛДСПДоп = ЛДСП;	
		ШапкаОсновныхНастроек.Вставить("НоменклатураЛДСПДоп", ТекущиеДанные.НоменклатураЛДСПДоп);
				
	КонецЕсли;
	
	ТекущиеДанные.КромкаЛДСП = Структура.СтруктураПодставляяемойНоменклатуры.Кромка2_19;
	УстановитьПараметрыКромки(ТекущиеДанные)
	
КонецПроцедуры

&НаКлиенте
Процедура ДеталиКромкаЛДСППриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Детали.ТекущиеДанные;
	УстановитьПараметрыКромки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыКромки(ТекущиеДанные)
	
	ШапкаОсновныхНастроек.Вставить("КромкаЛДСП", ТекущиеДанные.КромкаЛДСП);
	
	Если ТекущиеДанные.ЕстьЛДСПДоп Тогда
		
		ТекущиеДанные.КромкаЛДСПДоп = ТекущиеДанные.КромкаЛДСП;	
		ШапкаОсновныхНастроек.Вставить("КромкаЛДСПДоп", ТекущиеДанные.КромкаЛДСПДоп);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеталиНоменклатураЛДСПДопПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Детали.ТекущиеДанные;
	НоменклатураЛДСПДоп = ТекущиеДанные.НоменклатураЛДСПДоп;	
	ШапкаОсновныхНастроек.Вставить("НоменклатураЛДСПДоп", НоменклатураЛДСПДоп);
	
	СтруктураПодставляяемойНоменклатуры = ЛексСервер.ПолучитьСтруктуруПодставляемойНоменклатурыПоЦветуЛДСП(НоменклатураЛДСПДоп, Подразделение);	
	ТекущиеДанные.КромкаЛДСПДоп = СтруктураПодставляяемойНоменклатуры.Кромка2_19;	
	ШапкаОсновныхНастроек.Вставить("КромкаЛДСПДоп", ТекущиеДанные.КромкаЛДСПДоп);
		
КонецПроцедуры

&НаКлиенте
Процедура ДеталиКромкаЛДСПДопПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Детали.ТекущиеДанные;
	ТекущиеДанные.КромкаЛДСПДоп = ТекущиеДанные.КромкаЛДСП;	
	ШапкаОсновныхНастроек.Вставить("КромкаЛДСПДоп", ТекущиеДанные.КромкаЛДСПДоп);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЯ ДВЕРИ

&НаКлиенте
Функция ПроверкаДвери()
	
	Отказ = Ложь;
	
	РазмерыДвери = ОпределитьРазмерыДвери();
	
	Если ВысотаПроемаДвери <> РазмерыДвери.ВысотаПроема ИЛИ ШиринаПроемаДвери <> РазмерыДвери.ШиринаПроема Тогда
		
		СписокКнопок = Новый СписокЗначений;	
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, "Редактировать");
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		
		Ответ = Вопрос("Размеры двери не совпадают с размерами изделия.", СписокКнопок,,);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			ПараметрыФормы = Новый Структура("Ключ", Двери);
			ПараметрыФормы.Вставить("ВысотаПроема", РазмерыДвери.ВысотаПроема);
			ПараметрыФормы.Вставить("ШиринаПроема", РазмерыДвери.ШиринаПроема);
			ПараметрыФормы.Вставить("Редактирование", Истина);
			Форма = ПолучитьФорму("Справочник.Двери.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
			Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
			Форма.Открыть();
			
		КонецЕсли;
		
		Отказ = Истина;
		
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

&НаКлиенте
Процедура ДвериНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РазмерыДвери = ОпределитьРазмерыДвери();
	Если РазмерыДвери.ВысотаПроема > 0 И РазмерыДвери.ШиринаПроема > 0  Тогда
		
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, "Создать");
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, "Выбрать");
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, "Отмена");
		
		Ответ = Вопрос("Создать новую или выбрать существующую дверь?",СписокКнопок,,);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ВысотаПроема", РазмерыДвери.ВысотаПроема);
			ПараметрыФормы.Вставить("ШиринаПроема", РазмерыДвери.ШиринаПроема);
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("Спецификация", Спецификация));
			
			Форма = ПолучитьФорму("Справочник.Двери.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
			Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
			Форма.Открыть();
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			           
			ПараметрыФормы = Новый Структура("ШиринаПроема", РазмерыДвери.ШиринаПроема);
			ПараметрыФормы.Вставить("ВысотаПроема", РазмерыДвери.ВысотаПроема);
			ПараметрыФормы.Вставить("Спецификация", Спецификация);
			Форма = ПолучитьФорму("Справочник.Двери.Форма.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
			Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
			Форма.Открыть();
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДвериПриИзменении(Элемент)
	
	ДвериПриИзмененииНаКлиенте(Двери);
	
КонецПроцедуры

&НаКлиенте
Процедура ДвериПриИзмененииНаКлиенте(Значение)
	
	Если ЗначениеЗаполнено(Значение) Тогда
		РазмерыДвери = ПолучитьРазмерыВыбраннойДвери(Значение);
		РазмерыПроема = ОпределитьРазмерыДвери();
		
		Если РазмерыПроема.ВысотаПроема = РазмерыДвери.ВысотаПроема И РазмерыПроема.ШиринаПроема = РазмерыДвери.ШиринаПроема Тогда
			
			Двери = Значение;
			ВысотаПроемаДвери = РазмерыПроема.ВысотаПроема;
			ШиринаПроемаДвери = РазмерыПроема.ШиринаПроема;
			
		Иначе
			
			Двери = Неопределено;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Двери не подходят по размерам", , "Двери");
			
		КонецЕсли;
		
	Иначе
		
		Двери = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

//Размеры двери при выборе уже существующей двери
&НаСервереБезКонтекста
Функция ПолучитьРазмерыВыбраннойДвери(Дверь)
	
	Структура = Новый Структура;
	
	Структура.Вставить("ВысотаПроема", Дверь.ВысотаПроема);
	Структура.Вставить("ШиринаПроема", Дверь.ШиринаПроема);
	
	Возврат Структура;
	
КонецФункции

//Размеры двери с учетом размеров элементов шкафа-купе
&НаКлиенте
Функция ОпределитьРазмерыДвери()
	
	ВысотаПроема = 0;
	ШиринаПроема = 0;
	
	РазмерыОсновногоЭлемента = ПолучитьРазмерыОсновногоЭлемента();
	Если РазмерыОсновногоЭлемента <> Неопределено Тогда
		
		ВысотаПроема = РазмерыОсновногоЭлемента.Высота;
		ШиринаПроема = РазмерыОсновногоЭлемента.Ширина;
		
		Если ВысотаПроема > 0 И ШиринаПроема > 0  Тогда
			Для Каждого Элемент Из Детали Цикл
				
				Если (Элемент.ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент") ИЛИ
					Элемент.ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент")) Тогда
					
					Если Элемент.НеВлияетНаОсновной Тогда
						ШиринаПроема = ШиринаПроема - Элемент.ШиринаИзделия;
					КонецЕсли;
				
					//ШиринаПроема = ШиринаПроема - Число(Элемент.Завал);
					
				ИначеЕсли (Элемент.ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.Потолок") ИЛИ
					Элемент.ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.Пол")) Тогда
					
					Если Элемент.НеВлияетНаОсновной Тогда
						ВысотаПроема = ВысотаПроема - Элемент.ВысотаИзделия;
					КонецЕсли;
					
					//ВысотаПроема = ВысотаПроема - Число(Элемент.Завал);
					
				КонецЕсли;
								
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Структура = Новый Структура;
	
	Структура.Вставить("ВысотаПроема", ВысотаПроема);
	Структура.Вставить("ШиринаПроема", ШиринаПроема);
	
	Возврат Структура;
	
КонецФункции

&НаКлиенте
Процедура ДеталиПриАктивизацииСтроки(Элемент)
	
	ТекущийЭлементИзделия = Элемент.ТекущиеДанные.ВидИзделия;
	УстановитьДоступность(ТекущийЭлементИзделия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеталиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеталиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеталиЗавалПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Детали.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ВысотаИзделияСтрока) ИЛИ ЗначениеЗаполнено(ТекущиеДанные.ШиринаИзделияСтрока) ИЛИ ЗначениеЗаполнено(ТекущиеДанные.ГлубинаИзделияСтрока) Тогда
		//Если есть формульные значения размеров, определяем значеия завалов
		
		ВидИзделия = ТекущиеДанные.ВидИзделия; 
		
		ЗавалПол = 0;
		ЗавалЛевый = 0;
		ЗавалПравый = 0;
		ЗавалПотолок = 0;
		ЗавалСтенка = 0; 
		
		Если ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЗадняяСтенка") Тогда
			ЗавалСтенка = ТекущиеДанные.Завал;
		ИначеЕсли ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент") Тогда
			ЗавалПравый =  ТекущиеДанные.Завал;
		ИначеЕсли ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент") Тогда
			ЗавалЛевый =  ТекущиеДанные.Завал;
		ИначеЕсли ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.Пол") Тогда
			ЗавалПол =  ТекущиеДанные.Завал;
		ИначеЕсли ВидИзделия = ПредопределенноеЗначение("Справочник.ВидыИзделийПоКаталогу.Потолок") Тогда
			ЗавалПотолок =  ТекущиеДанные.Завал;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ВысотаИзделияСтрока) Тогда
			Попытка
				Выполнить("ТекущиеДанные.ВысотаИзделия = " + ТекущиеДанные.ВысотаИзделияСтрока);
			Исключение
				Текст = "Ошибка при формировании формул для Высоты каталога изделий " + ТекущиеДанные.Изделие;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			КонецПопытки;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ШиринаИзделияСтрока) Тогда
			Попытка
				Выполнить("ТекущиеДанные.ШиринаИзделия = " + ТекущиеДанные.ШиринаИзделияСтрока);
			Исключение
				Текст = "Ошибка при формировании формул для Ширины каталога изделий " + ТекущиеДанные.Изделие;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			КонецПопытки;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ГлубинаИзделияСтрока) Тогда
			Попытка
				Выполнить("ТекущиеДанные.ГлубинаИзделия = " + ТекущиеДанные.ГлубинаИзделияСтрока);
			Исключение
				Текст = "Ошибка при формировании формул для Глубины каталога изделий " + ТекущиеДанные.Изделие;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ


