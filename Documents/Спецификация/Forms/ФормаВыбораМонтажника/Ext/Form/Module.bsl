
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Спецификация = Параметры.Спецификация; 	
	НачалоПериода = Спецификация.Дата;
	КонецПериода = Спецификация.Дата + 30 * 86400;
	Город = Спецификация.Офис.Город;
	Монтажник = Спецификация.Монтажник;
	ДатаМонтажа = Спецификация.ДатаМонтажа;
	ТабДок.Вывести(Сформировать(НачалоПериода, КонецПериода, Город, ДатаМонтажа, Монтажник, Спецификация));
	ТабДок.ФиксацияСверху = 1;
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ИзменитьМонтажНаСервере(ДанныеМонтажа)
	
	Если ЗначениеЗаполнено(ДанныеМонтажа) Тогда
		
		Объект = ДанныеМонтажа.Спецификация.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект, ДанныеМонтажа);
		
		Если Объект.Проведен Тогда
			РежимЗаписи= РежимЗаписиДокумента.Проведение;
		Иначе
			РежимЗаписи= РежимЗаписиДокумента.Запись;
		КонецЕсли;
		Объект.Записать(РежимЗаписи);
		
	КонецЕсли;
	
КонецПроцедуры



&НаСервереБезКонтекста
Функция Сформировать(НачалоПериода, КонецПериода, Город, ДатаМонтажа, Монтажник, Спецификация)
	ТабДокТаблица = Новый ТабличныйДокумент;
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = Документы.Спецификация.ПолучитьМакет("ВыборМонтажника");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТекущийМонтаж = Макет.ПолучитьОбласть("ТекущийМонтаж");
	ОбластьШапкаТаблица = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаОтчета");
	ОбластьСтрокаСотрудник = Макет.ПолучитьОбласть("СтрокаМонтажник");
	ОбластьРазделительНедель = Макет.ПолучитьОбласть("РазделительНедель");
	
	ТабДок.Вывести(ОбластьШапка);
	ОбластьТекущийМонтаж.Параметры.ДатаМонтажа = Формат(ДатаМонтажа, "ДЛФ=Д");
	ОбластьТекущийМонтаж.Параметры.Монтажник = Монтажник;
	ТабДок.Вывести(ОбластьТекущийМонтаж);
	
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ГородРабочий", Город);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РабочиеДниМонтажников.Спецификация.АдресМонтажа КАК АдресМонтажа,
	|	РабочиеДниМонтажников.Монтажник КАК Монтажник,
	|	РабочиеДниМонтажников.День КАК День
	|ПОМЕСТИТЬ ВТ_РабочиеДни
	|ИЗ
	|	РегистрСведений.РабочиеДниМонтажников КАК РабочиеДниМонтажников
	|ГДЕ
	|	РабочиеДниМонтажников.Город = &ГородРабочий
	|	И РабочиеДниМонтажников.День МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка КАК ФизЛицо,
	|	ВТ_РабочиеДни.День КАК День,
	|	ВТ_РабочиеДни.АдресМонтажа КАК АдресМонтажа
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РабочиеДни КАК ВТ_РабочиеДни
	|		ПО ФизическиеЛица.Ссылка = ВТ_РабочиеДни.Монтажник
	|ГДЕ
	|	ФизическиеЛица.Должность = ЗНАЧЕНИЕ(Справочник.Должности.Монтажник)
	|	И НЕ ФизическиеЛица.ПометкаУдаления
	|	И ФизическиеЛица.Активность
	|	И ФизическиеЛица.ГородРабочий = &ГородРабочий
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо УБЫВ,
	|	День
	|ИТОГИ
	|	МАКСИМУМ(АдресМонтажа)
	|ПО
	|	ФизЛицо,
	|	День ПЕРИОДАМИ(ДЕНЬ, &НачалоПериода, &КонецПериода)";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ФизЛицо", "Все");
	
	Пока Выборка.Следующий() Цикл
		
		ОбластьСтрокаСотрудник.Параметры.Монтажник = Выборка.ФизЛицо;
		ТабДокТаблица.Вывести(ОбластьСтрокаСотрудник);
		ТабДокТаблица.Вывести(ОбластьШапкаТаблица);
		ВыборкаПоСотруднику = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "День", "Все");
		
		ВыборкаПоСотруднику.Следующий();
		Пока ВыборкаПоСотруднику.Следующий() Цикл
			ЭтоВс = ДеньНедели(ВыборкаПоСотруднику.День) = 7;
			Обл = ?(ЭтоВс, ОбластьРазделительНедель, ОбластьСтрока);
			Обл.Параметры.Дата = ВыборкаПоСотруднику.День;
			Обл.Параметры.Адрес = ВыборкаПоСотруднику.АдресМонтажа;
			Обл.Параметры.Расшифровка = Новый Структура("Спецификация, ДатаМонтажа, Монтажник, Воскресенье", Спецификация, ВыборкаПоСотруднику.День, Выборка.ФизЛицо, ЭтоВс);
			Обл.Параметры.Расшифровка.Вставить("МонтажникЗанят", ЗначениеЗаполнено(ВыборкаПоСотруднику.АдресМонтажа));
			ТабДокТаблица.Вывести(Обл);
		КонецЦикла;
		
		ТабДок.Присоединить(ТабДокТаблица);
		ТабДокТаблица.Очистить();
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции // Сформировать()

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		
		Если НЕ Расшифровка.МонтажникЗанят Тогда
			Если Расшифровка.Воскресенье Тогда
				ТекстВопроса = "Действительно хотите поставить монтаж на воскресенье?";
				Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да И ВладелецФормы = Неопределено Тогда
					ИзменитьМонтажНаСервере(Расшифровка);
					Закрыть();
				Иначе
					ОповеститьОВыборе(Расшифровка);
				КонецЕсли;
			ИначеЕсли ВладелецФормы = Неопределено Тогда
				ИзменитьМонтажНаСервере(Расшифровка);
				Закрыть();
			Иначе
				ОповеститьОВыборе(Расшифровка);
			КонецЕсли;
		Иначе
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 уже занят %2", Расшифровка.Монтажник, Формат(Расшифровка.ДатаМонтажа, "ДЛФ=ДД")); 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьТабличныйДокумент()
	
	ТабДок = Сформировать(НачалоПериода, КонецПериода, Город, ДатаМонтажа, Монтажник, Спецификация);
	ТабДок.ФиксацияСверху = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	СформироватьТабличныйДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	СформироватьТабличныйДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура ГородПриИзменении(Элемент)
	
	СформироватьТабличныйДокумент();
	
КонецПроцедуры


