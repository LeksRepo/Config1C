
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	//МассивСсылок = Новый Массив;
	
	Для каждого СпецификацияСсылка Из ПараметрКоманды Цикл
		
		//МассивСсылок.Добавить(СпецификацияСсылка);
		
		Массив = ОбновитьРаскройНаСервере(СпецификацияСсылка);
		
		Для Каждого Элемент Из Массив Цикл
			
			НашаСпецификация = Элемент.Спецификация;
			
			Если ЗначениеЗаполнено(Элемент.СтрокаКривогоПила) Тогда
				
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("ХранимыйФайл", "КривойПил");
				ПараметрыФормы.Вставить("Спецификация", НашаСпецификация);
				ПараметрыФормы.Вставить("СтрокаКривогоПила", Элемент.СтрокаКривогоПила);
				
				Значение = ОткрытьФормуМодально("Документ.Спецификация.Форма.ФормаФлэш", ПараметрыФормы);
				
				Элемент.РисунокКривогоПила = Значение;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Элемент.СтрокаРаскрой) Тогда
				
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("ХранимыйФайл", "НовыйРаскрой");
				ПараметрыФормы.Вставить("Спецификация", НашаСпецификация);
				ПараметрыФормы.Вставить("СтрокаНовогоРаскрояЛДСП", Элемент.СтрокаРаскрой);
				ПараметрыФормы.Вставить("ВидОтображения", "1");
				
				Значение = ОткрытьФормуМодально("Документ.Спецификация.Форма.ФормаФлэш", ПараметрыФормы);
				
				Элемент.РисунокРаскроя = Значение;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ЗаписатьРаскрой(Массив);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьРаскройНаСервере(Элемент)
	
	Массив = Новый Массив;
	
	//Для Каждого Элемент Из МассивСсылок Цикл
		
		Структура = РегистрыСведений.РаскройДеталей.СформироватьРаскрой(Элемент);
		
		СтруктураПередачи = Новый Структура;
		СтруктураПередачи.Вставить("СтрокаКривогоПила", Структура.СтрокаКривогоПила);
		СтруктураПередачи.Вставить("ТекущаяСтрокаРаскроя", Структура.ДанныеДляРаскроя);
		СтруктураПередачи.Вставить("СтрокаРаскрой", Структура.ДанныеДляРаскроя);
		СтруктураПередачи.Вставить("ТаблицаДеталей", Структура.ТаблицаДеталей);
		СтруктураПередачи.Вставить("ТаблицаДеталей", Структура.ТаблицаДеталей);
		
		// { Васильев Александр Леонидович [09.08.2015]
		// Сделать одинаковый формат возврата структуры
		// } Васильев Александр Леонидович [09.08.2015]
		
		Попытка
			СтруктураПередачи.Вставить("ЛучшийПроцентОтхода", Структура.ЛучшийПроцентОтхода);
			СтруктураПередачи.Вставить("ВремяФормирования", Структура.ВремяФормирования);
		Исключение
			
		КонецПопытки;
		
		СтруктураПередачи.Вставить("АлгоритмРаскроя", Структура.АлгоритмРаскроя);
		СтруктураПередачи.Вставить("Спецификация", Элемент);
		СтруктураПередачи.Вставить("РисунокКривогоПила", "");
		СтруктураПередачи.Вставить("РисунокРаскроя", "");
		
		Массив.Добавить(СтруктураПередачи);
		
	//КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

&НаСервере
Функция ЗаписатьРаскрой(Массив)
	
	Для Каждого Элемент Из Массив Цикл
		
		НаборЗаписей = РегистрыСведений.РаскройДеталей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Элемент.Спецификация);
		
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() = 1 Тогда
			Запись = НаборЗаписей[0];
		Иначе
			Запись = НаборЗаписей.Добавить();
			Запись.Объект = Элемент.Спецификация;
		КонецЕсли;
		
		Запись.СтрокаРаскрой = Элемент.СтрокаРаскрой;
		Запись.ТекущаяСтрокаРаскроя = Элемент.ТекущаяСтрокаРаскроя;	
		Запись.РисунокРаскроя = Элемент.РисунокРаскроя;
		Запись.РисунокКривогоПила = Элемент.РисунокКривогоПила;
		Запись.СтрокаКривогоПила = Элемент.СтрокаКривогоПила;
		
		// { Васильев Александр Леонидович [09.08.2015]
		// Сделать одинаковый формат возврата структуры
		// } Васильев Александр Леонидович [09.08.2015]
		
		Попытка
			Запись.ИдеальныйПроцентОтхода = Элемент.ЛучшийПроцентОтхода;
			Запись.ВремяФормирования = Элемент.ВремяФормирования;
		Исключение
			
		КонецПопытки;
		
		Запись.ТаблицаДеталей = Элемент.ТаблицаДеталей;
		Запись.АлгоритмРаскроя = Элемент.АлгоритмРаскроя;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецФункции