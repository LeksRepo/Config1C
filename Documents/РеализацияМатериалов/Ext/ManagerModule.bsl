
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка) Экспорт
	
	ЛексСервер.ПолучитьПредставлениеДокумента(Данные, Представление, СтандартнаяОбработка);
	
КонецПроцедуры

Функция ПечатьТоварныйЧек(МассивДокументов, ОбъектыПечати) Экспорт
	
	Макет = Документы.РеализацияМатериалов.ПолучитьМакет("ПечатьТоварныйЧек");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСписокНоменклатурыШапка = Макет.ПолучитьОбласть("СписокНоменклатурыШапка");
	ОбластьСписокНоменклатуры = Макет.ПолучитьОбласть("СписокНоменклатуры");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал"); 
	ОбластьСтрокаРазделитель = Макет.ПолучитьОбласть("СтрокаРазделитель");
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_РеализацияМатериалов";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	//RonEXI: Выбриаем пустые строки из таблицы хлыстов, для того чтобы напечатать хлысты если ничего нет в списке номенклатуры, сами строки пропускаем по пустому подразделению. 
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияМатериалов.Ссылка КАК ДокРеализация,
	|	РеализацияМатериалов.Ссылка.Подразделение,
	|	РеализацияМатериалов.Ссылка.Автор,
	|	РеализацияМатериалов.Ссылка.Дата,
	|	РеализацияМатериалов.Ссылка.Контрагент,
	|	РеализацияМатериалов.Ссылка.Комментарий,
	|	РеализацияМатериалов.Ссылка.Номер,
	|	РеализацияМатериалов.Ссылка.Склад,
	|	РеализацияМатериалов.Ссылка.Склад.МОЛ КАК МОЛ,
	|	РеализацияМатериалов.Ссылка.СуммаДокумента,
	|	РеализацияМатериалов.Ссылка.Подразделение.Организация КАК Организация,
	|	РеализацияМатериалов.НомерСтроки,
	|	РеализацияМатериалов.Номенклатура,
	|	РеализацияМатериалов.Количество,
	|	РеализацияМатериалов.Цена,
	|	РеализацияМатериалов.Сумма,
	|	РеализацияМатериалов.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	НастройкиНоменклатуры.АдресХранения КАК АдресХранения,
	|	РеализацияМатериалов.Ссылка.АдресДоставки
	|ИЗ
	|	Документ.РеализацияМатериалов.СписокНоменклатуры КАК РеализацияМатериалов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиНоменклатуры.СрезПоследних(, ) КАК НастройкиНоменклатуры
	|		ПО РеализацияМатериалов.Номенклатура = НастройкиНоменклатуры.Номенклатура
	|			И РеализацияМатериалов.Ссылка.Подразделение = НастройкиНоменклатуры.Подразделение
	|ГДЕ
	|	РеализацияМатериалов.Ссылка В(&МассивДокументов)
	|	И РеализацияМатериалов.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хлыст.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка),
	|	Хлыст.Ссылка.Автор,
	|	Хлыст.Ссылка.Дата,
	|	Хлыст.Ссылка.Контрагент,
	|	Хлыст.Ссылка.Комментарий,
	|	Хлыст.Ссылка.Номер,
	|	Хлыст.Ссылка.Склад,
	|	Хлыст.Ссылка.Склад.МОЛ,
	|	Хлыст.Ссылка.СуммаДокумента,
	|	Хлыст.Ссылка.Подразделение.Организация,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	Хлыст.Ссылка.АдресДоставки
	|ИЗ
	|	Документ.РеализацияМатериалов.ОбрезкиХлыстовогоМатериала КАК Хлыст
	|ГДЕ
	|	Хлыст.Ссылка В(&МассивДокументов)
	|	И Хлыст.Ссылка.Проведен
	|ИТОГИ ПО
	|	ДокРеализация";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДокРеализация");
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		ТабДокДоп = Новый ТабличныйДокумент;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		Если ВставлятьРазделительСтраниц Тогда
			
			ТабДокДоп.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Дата = Формат(Выборка.Дата, "ДЛФ=DD");
		ОбластьЗаголовок.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Выборка.Номер);
	
		ТабДокДоп.Вывести(ОбластьЗаголовок);
		
		ОбластьШапка.Параметры.Заполнить(Выборка);
		ОбластьШапка.Параметры.АдресДоставки = ?(Выборка.АдресДоставки = "Введите адрес", "Без доставки", Выборка.АдресДоставки);
		ОбластьШапка.Параметры.ВремяДокумента = Выборка.Дата;
		
		ТабДокДоп.Вывести(ОбластьШапка, Выборка.Уровень());
		
		ТабДокДоп.Вывести(ОбластьСписокНоменклатурыШапка);
		
		ВыборкаСписокНоменклатуры = Выборка.Выбрать();
		
		Пока ВыборкаСписокНоменклатуры.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ВыборкаСписокНоменклатуры.Подразделение) Тогда
				ОбластьСписокНоменклатуры.Параметры.Заполнить(ВыборкаСписокНоменклатуры);
				ТабДокДоп.Вывести(ОбластьСписокНоменклатуры, ВыборкаСписокНоменклатуры.Уровень());
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьПодвал.Параметры.Заполнить(Выборка);
		ОбластьПодвал.Параметры.СуммаДокументаПрописью = ЧислоПрописью(Выборка.СуммаДокумента, СтрокиСообщений.ФормСтрока(), СтрокиСообщений.ПарПредмета());
		
		Если Выборка.ДокРеализация.ОбрезкиХлыстовогоМатериала.Количество() > 0 Тогда
			ПечатьХлыстовойМатериал(ТабДокДоп, Выборка.ДокРеализация, ОбъектыПечати, МассивДокументов);
		КонецЕсли;
		
		ТабДок.Вывести(ТабДокДоп);
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.Вывести(ОбластьСтрокаРазделитель);
		
		ТабДок.Вывести(ТабДокДоп);
		ТабДок.Вывести(ОбластьПодвал);
		
		//Если Выборка.ДокРеализация.ОбрезкиХлыстовогоМатериала.Количество() > 0 Тогда
		//	ПечатьХлыстовойМатериал(ТабДокДоп, Выборка.ДокРеализация, ОбъектыПечати, МассивДокументов);
		//КонецЕсли;
		
		ВставлятьРазделительСтраниц = Истина;
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, МассивДокументов);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьХлыстовойМатериал(ТабДок, РеализацияСсылка, ОбъектыПечати, МассивДокументов) Экспорт
	
	ТабДокХлыстовойМатериал = Новый ТабличныйДокумент;
	
	Макет = ПолучитьОбщийМакет("ПечатьХлыстовойМатериал");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("РеализацияСсылка", РеализацияСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияМатериаловОбрезкиХлыстовогоМатериала.Ссылка.Номер КАК НомерДокумента,
	|	РеализацияМатериаловОбрезкиХлыстовогоМатериала.Ссылка.Дата КАК ДатаДокумента,
	|	РеализацияМатериаловОбрезкиХлыстовогоМатериала.Номенклатура,
	|	РеализацияМатериаловОбрезкиХлыстовогоМатериала.Описание,
	|	РеализацияМатериаловОбрезкиХлыстовогоМатериала.РазмерЗаготовки,
	|	РеализацияМатериаловОбрезкиХлыстовогоМатериала.РазмерПродаваемый,
	|	РеализацияМатериаловОбрезкиХлыстовогоМатериала.РазмерХлыста,
	|	РеализацияМатериаловОбрезкиХлыстовогоМатериала.Сумма
	|ИЗ
	|	Документ.РеализацияМатериалов.ОбрезкиХлыстовогоМатериала КАК РеализацияМатериаловОбрезкиХлыстовогоМатериала
	|ГДЕ
	|	РеализацияМатериаловОбрезкиХлыстовогоМатериала.Ссылка = &РеализацияСсылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат -277;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	НомерСтрокиНачало = ТабДокХлыстовойМатериал.ВысотаТаблицы + 1;
	
	ОбластьЗаголовок.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Выборка.НомерДокумента);
	ОбластьЗаголовок.Параметры.ДатаДокумента = Формат(Выборка.ДатаДокумента, "ДЛФ=DD");
	ОбластьЗаголовок.Параметры.ЗаголовокДокумента = "Хлыстовой материал для реализации ";
	
	ТабДокХлыстовойМатериал.Вывести(ОбластьЗаголовок);
	ТабДокХлыстовойМатериал.Вывести(ОбластьШапка);
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ОбластьСтрока.Параметры.Комментарий = Выборка.Описание;
		ОбластьСтрока.Параметры.АдресХранения = "Обрезок";
		ОбластьСтрока.Параметры.Оприходовать = Выборка.РазмерХлыста - Выборка.РазмерПродаваемый;
		
		ТабДокХлыстовойМатериал.Вывести(ОбластьСтрока);
		ТабДокХлыстовойМатериал.Области.Строка.СоздатьФорматСтрок();
		
	КонецЦикла;
	
	ТабДокХлыстовойМатериал.Области.Заголовок.СоздатьФорматСтрок();
	ТабДокХлыстовойМатериал.Области.Шапка.СоздатьФорматСтрок();
	
	ТабДок.Вывести(ТабДокХлыстовойМатериал);
	
КонецФункции

Функция ПечатьТорг12(МассивДокументов, ОбъектыПечати) Экспорт
	
	ТабДок = ЛексСервер.ПечататьТорг12(МассивДокументов, ОбъектыПечати);
	Возврат ТабДок;
	
КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТорг12") Тогда
		
		ПодготовитьПечатнуюФорму("ПечатьТорг12", "ПечатьТорг12", "Документ.РеализацияМатериалов.ПечатьТорг12",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТоварныйЧек") Тогда
		
		ПодготовитьПечатнуюФорму("ПечатьТоварныйЧек", "ПечатьТоварныйЧек", "Документ.РеализацияМатериалов.ПечатьТоварныйЧек",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетНаОплатуПокупателю") Тогда
		
		ПодготовитьПечатнуюФорму("СчетНаОплатуПокупателю", "СчетНаОплатуПокупателю", "Документ.РеализацияМатериалов.СчетНаОплатуПокупателю",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
		
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

Процедура ПодготовитьПечатнуюФорму(Знач ИмяМакета, ПредставлениеМакета, ПолныйПутьКМакету = "", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	Если ИмяМакета = "ПечатьТорг12" Тогда
		
		ТабДок = ПечатьТорг12(МассивОбъектов, ОбъектыПечати); 
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "ПечатьТоварныйЧек" Тогда
		
		ТабДок = ПечатьТоварныйЧек(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
		
	ИначеЕсли ИмяМакета = "СчетНаОплатуПокупателю" Тогда
		
		ТабДок = ПечатьСчетНаОплатуПокупателю(МассивОбъектов, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, 
		ПредставлениеМакета, ТабДок, , ПолныйПутьКМакету);
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьСчетНаОплатуПокупателю(МассивДокументов, ОбъектыПечати) Экспорт
	
	Ошибки = Неопределено;
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_СчетНаОплатуПокупателю";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ПолеСправа = 0;
	ТабДок.ПолеСверху = 2;
	
	НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	Макет = Документы.Спецификация.ПолучитьМакет("СчетНаОплатуПокупателю");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияМатериалов.Ссылка  КАК Ссылка
	|ПОМЕСТИТЬ СписокДокументовОкончательный
	|ИЗ
	|	Документ.РеализацияМатериалов КАК РеализацияМатериалов
	|ГДЕ
	|	РеализацияМатериалов.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(МассивДокументов.Ссылка) КАК ПредставлениеДокумента,
	|	МассивДокументов.Ссылка КАК Ссылка,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.ПолноеНаименование КАК ПредставлениеПолучателяПлатежа,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.ИНН КАК ИННПолучателяПлатежа,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.КПП КАК КПППолучателяПлатежа,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.Банк КАК БанкПолучателяПлатежа,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.БИК КАК БИКБанкаПолучателяПлатежа,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.КорреспондирующийСчет КАК СчетБанкаПолучателяПлатежа,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.РасчетныйСчет КАК СчетПолучателяПлатежа,
	|	МассивДокументов.ССылка.Дата КАК Дата,
	|	МассивДокументов.ССылка.Номер КАК Номер,
	|	МассивДокументов.ССылка.СуммаДокумента КАК СуммаДокумента,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.ПолноеНаименование КАК ПоставщикПолноеНаименование,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.ИНН КАК ИННПоставщика,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.КПП КАК КПППоставщика,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.ЮридическийАдрес КАК ЮридическийАдресПоставщика,
	|	МассивДокументов.ССылка.Контрагент.ПолноеНаименование КАК КонтрагентПолноеНаименование,
	|	МассивДокументов.ССылка.Контрагент.ИНН КАК ИННКонтрагента,
	|	МассивДокументов.ССылка.Контрагент.КПП КАК КППКонтрагента,
	|	МассивДокументов.ССылка.Контрагент.ЮридическийАдрес КАК ЮридическийАдресКонтрагента,
	|	МассивДокументов.ССылка.Подразделение.ОрганизацияДляЮрЛиц.ФИОДолжностногоЛица КАК ФИОРуководителя
	|ИЗ
	|	СписокДокументовОкончательный КАК МассивДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товар (по реализации матеиралов №"" КАК Товар,
	|	1 КАК НомерСтроки,
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Ссылка.СуммаДокумента КАК Сумма,
	|	Товары.Ссылка.СуммаДокумента КАК Цена,
	|	1 КАК Количество,
	|	""шт"" КАК ЕдиницаИзмерения
	|ИЗ
	|	СписокДокументовОкончательный КАК Товары";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокументов = РезультатЗапроса[1].Выбрать();
	
	РезультатТовары =  РезультатЗапроса[2].Выгрузить();
	
	ПервыйЛист = Истина;
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		Если НЕ ПервыйЛист Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтого = Макет.ПолучитьОбласть("Итого");
		ОбластьИтогоНДС = Макет.ПолучитьОбласть("ИтогоНДС");
		ОбластьИтогоКОплате = Макет.ПолучитьОбласть("ИтогоКОплате");
		
		//выводим шапку
		ОбластьЗаголовокСчета = Макет.ПолучитьОбласть("ЗаголовокСчета");
		ОбластьЗаголовокСчета.Параметры.Заполнить(ВыборкаДокументов);
		ОбластьЗаголовокСчета.Параметры.БанкПолучателяПлатежаПредставление = ВыборкаДокументов.БанкПолучателяПлатежа;
		
		ТабДок.Вывести(ОбластьЗаголовокСчета);
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		НомерДокумента = ВыборкаДокументов.Номер;
		ДатаДокумента =  Формат(ВыборкаДокументов.Дата, "ДФ='дд ММММ гггг'") + " г.";
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = "Счет на оплату №" + НомерДокумента + "от " + ДатаДокумента;
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьПоставщик = Макет.ПолучитьОбласть("Поставщик");
		ЮридическийАдресПоставщика = ВыборкаДокументов.ЮридическийАдресПоставщика;
		ПредставлениеПоставщика =  ВыборкаДокументов.ПоставщикПолноеНаименование + 
		", ИНН " + ВыборкаДокументов.ИННПоставщика +
		", КПП " + ВыборкаДокументов.КПППоставщика +
		?(ЗначениеЗаполнено(ЮридическийАдресПоставщика),"," + ЮридическийАдресПоставщика ,"");
		
		
		ОбластьПокупатель = Макет.ПолучитьОбласть("Покупатель");
		ЮридическийАдресПокупателя = 	ВыборкаДокументов.ЮридическийАдресКонтрагента;	
		ИННПокупателя =  ВыборкаДокументов.ИННКонтрагента;
		КПППокупателя =  ВыборкаДокументов.КППКонтрагента;
		ПредставлениеПокупателя =  ВыборкаДокументов.КонтрагентПолноеНаименование + 
		?(ЗначениеЗаполнено(ИННПокупателя), ", ИНН " + ИННПокупателя, "") +
		?(ЗначениеЗаполнено(КПППокупателя), ", КПП " + КПППокупателя, "") +
		?(ЗначениеЗаполнено(ЮридическийАдресПокупателя),"," + ЮридическийАдресПокупателя ,"");
		
		ОбластьПоставщик.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьПокупатель.Параметры.ПредставлениеПокупателя = ПредставлениеПокупателя;
		
		ТабДок.Вывести(ОбластьПокупатель);
		ТабДок.Вывести(ОбластьПоставщик);
		
		//выводим товары
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ФорматнаяСтрока = "ЧЦ=15;ЧДЦ=2";
		Всего = 0;
		Сумма = 0;
		ВсегоНаименований = 0;
		
		СтруктураОтбора = Новый Структура();
		СтруктураОтбора.Вставить("Ссылка",ВыборкаДокументов.Ссылка);
		
		Товары = РезультатТовары.Скопировать(СтруктураОтбора);
		
		Для каждого СтрокаТовар Из Товары Цикл
			
			ОбластьСтрока.Параметры.Заполнить(СтрокаТовар);
			ОбластьСтрока.Параметры.Товар = СтрокаТовар.Товар  +  НомерДокумента + " от " + ДатаДокумента +")";
			Сумма = СтрокаТовар.Сумма;
			ОбластьСтрока.Параметры.Сумма = СокрЛП(Формат(Сумма, ФорматнаяСтрока));
			
			ТабДок.Вывести(ОбластьСтрока);
			
			ВсегоНаименований = ВсегоНаименований + 1;
			Всего = Всего + Сумма; 
			
		КонецЦикла;
		
		СуммаДокумента = ВыборкаДокументов.СуммаДокумента;
		ОбластьИтого.Параметры.Всего = СокрЛП(Формат(СуммаДокумента, ФорматнаяСтрока));
		ТабДок.Вывести(ОбластьИтого);
		
		ТабДок.Вывести(ОбластьИтогоНДС);
		
		ОбластьИтогоКОплате.Параметры.ИтогоКОплате = СокрЛП(Формат(СуммаДокумента, ФорматнаяСтрока));
		ТабДок.Вывести(ОбластьИтогоКОплате);
		
		//вывод сумма прописью
		ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = СуммаДокумента;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = ЧислоПрописью(СуммаКПрописи,"Л=ru_RU; ДП=Ложь","рубль, рубля, рублей, м, копейка, копейки, копеек, ж");
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = "Всего наименований "+  ВсегоНаименований + ", на сумму " + СокрЛП(Формат(СуммаКПрописи,ФорматнаяСтрока)) + " руб.";
		ТабДок.Вывести(ОбластьСуммаПрописью); 
		
		//подвал
		ОбластьПодвалСчета = Макет.ПолучитьОбласть("ПодвалСчета");
		ОбластьПодвалСчета.Параметры.ФИОРуководителя = ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(ВыборкаДокументов.ФИОРуководителя);
		ТабДок.Вывести(ОбластьПодвалСчета);
		
		ПервыйЛист = Ложь;
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, МассивДокументов);
	
	Возврат ТабДок;
	
КонецФункции // ПечатьСчетНаОплатуПокупателю()

