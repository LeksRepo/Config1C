
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДатыЗапретаИзменения.ПроверитьДатуЗапретаИзмененияПередЗаписьюДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	ПользовательАдминистратор = УправлениеДоступомПереопределяемый.ЕстьДоступКПрофилюГруппДоступа(Пользователь, Справочники.ПрофилиГруппДоступа.Администратор);
	
	СменаДаты = ПользовательАдминистратор;
	НашаДата = ТекущаяДата();
	
	Если НЕ (ЗначениеЗаполнено(ДатаКонтроля) И СменаДаты) Тогда
		
		Если ВидСлужебнойЗаписки <> Перечисления.ВидыСлужебнойЗаписки.Поручение Тогда 
			
			ДатаКонтроля = НашаДата + 2 * 86400;
			
		КонецЕсли;
		
		Если ДеньНедели(Дата) >= 5 Тогда
			ДатаКонтроля = ДатаКонтроля + 86400;
		КонецЕсли;
		
	КонецЕсли;
	
	ДатаКонтроля = КонецДня(ДатаКонтроля);
	
	Если ЭтоНовый() Тогда
		Если ДатаКонтроля < ТекущаяДата() Тогда
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата контроля не может быть меньше текущей даты");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаВАрхив) И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ДатаВАрхив = ТекущаяДата();
		
	КонецЕсли;
	
	ПодпискиНаСобытия.ПередЗаписьюДокументаИлиСправочника(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если ВидСлужебнойЗаписки = Перечисления.ВидыСлужебнойЗаписки.НарушенияВРаботе Тогда
		Движение = Движения.ОшибкиСотрудников.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = Адресат.ФизическоеЛицо;
		Движение.Количество = 1;
	КонецЕсли;
	
	Движения.ОшибкиСотрудников.Записывать = Истина;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Документ = ДанныеЗаполнения.Ссылка;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			Если ДанныеЗаполнения.Свойство("Текст") Тогда
				Проблема = ДанныеЗаполнения.Текст;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВидСлужебнойЗаписки = Перечисления.ВидыСлужебнойЗаписки.НарушенияВРаботе Тогда
		
	ИначеЕсли ВидСлужебнойЗаписки = Перечисления.ВидыСлужебнойЗаписки.Поручение Тогда
		
		ПроверяемыеРеквизиты.Добавить("ДатаКонтроля");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ДатаВАрхив = Дата(1,1,1);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.НеОзнакомленныеСлужебныеЗаписки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СлужебнаяЗаписка.Установить(Ссылка);
	
	НаборЗаписей.Прочитать();
	
	Если Ознакомлен ИЛИ Проведен Тогда
		
		НаборЗаписей.Очистить();
		
	Иначе
		
		Если НаборЗаписей.Количество() = 0 Тогда
			Запись = НаборЗаписей.Добавить();
		Иначе
			Запись = НаборЗаписей[0];
		КонецЕсли;
		
		Запись.СлужебнаяЗаписка = Ссылка;
		Запись.Пользователь = Адресат;
		
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры
