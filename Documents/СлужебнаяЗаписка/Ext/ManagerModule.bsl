
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ЛексСервер.ПолучитьПредставлениеДокумента(Данные, Представление, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОбОказанныхУслугах") Тогда
		ПодготовитьПечатнуюФорму("АктОбОказанныхУслугах", "Акт об оказанных услугах", "Документ.СлужебнаяЗаписка.АктОбОказанныхУслугах",
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

Процедура ПодготовитьПечатнуюФорму(Знач ИмяМакета, ПредставлениеМакета, ПолныйПутьКМакету = "", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, ИмяМакета);
	Если НужноПечататьМакет Тогда
		
		Если ИмяМакета = "АктОбОказанныхУслугах" Тогда
			ТабДок = ПечатьАктОбОказанныхУслугах(МассивОбъектов, ОбъектыПечати);
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, ПредставлениеМакета, ТабДок,, ПолныйПутьКМакету);
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьАктОбОказанныхУслугах(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_АктОбОказанныхУслугах";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СлужебнаяЗаписка.Ссылка,
	|	СлужебнаяЗаписка.ВерсияДанных,
	|	СлужебнаяЗаписка.ПометкаУдаления,
	|	СлужебнаяЗаписка.Номер,
	|	СлужебнаяЗаписка.Дата,
	|	СлужебнаяЗаписка.Проведен,
	|	СлужебнаяЗаписка.Автор,
	|	СлужебнаяЗаписка.Адресат,
	|	СлужебнаяЗаписка.ВидСлужебнойЗаписки,
	|	СлужебнаяЗаписка.Виновный,
	|	СлужебнаяЗаписка.Выполнена,
	|	СлужебнаяЗаписка.ДатаВыполнения,
	|	СлужебнаяЗаписка.ДатаКонтроля,
	|	СлужебнаяЗаписка.ДатаОзнакомления,
	|	СлужебнаяЗаписка.Документ,
	|	СлужебнаяЗаписка.НеСогласен,
	|	СлужебнаяЗаписка.Ознакомлен,
	|	СлужебнаяЗаписка.Ответ,
	|	СлужебнаяЗаписка.Проблема,
	|	СлужебнаяЗаписка.Служебное,
	|	СлужебнаяЗаписка.Сумма,
	|	СлужебнаяЗаписка.Тема,
	|	СлужебнаяЗаписка.Утверждаю,
	|	ВЫРАЗИТЬ(СлужебнаяЗаписка.Документ КАК Документ.Договор).Контрагент КАК Заказчик,
	|	СлужебнаяЗаписка.Документ.Контрагент.Фамилия + "" "" + ПОДСТРОКА(СлужебнаяЗаписка.Документ.Контрагент.Имя, 1, 1) + "". "" + ПОДСТРОКА(СлужебнаяЗаписка.Документ.Контрагент.Отчество, 1, 1) + ""."" КАК ФИО
	|ИЗ
	|	Документ.СлужебнаяЗаписка КАК СлужебнаяЗаписка
	|ГДЕ
	|	СлужебнаяЗаписка.Ссылка В(&МассивОбъектов)";
	
	Макет = Документы.СлужебнаяЗаписка.ПолучитьМакет("АктОбОказанныхУслугах");
	Тело = Макет.ПолучитьОбласть("Тело");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Тело.Параметры.Заполнить(Выборка);
			
		ТабДок.Вывести(Тело);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, 1, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции


 //Записыват в Регистр сведений текущий статус СлужебнойЗаписки
 //
 //Параметры
 // Записка - ДокументСсылка.СлужебнаяЗаписка - Ссылка на СлужебнуюЗаписку для которой меняем статус
//Функция ОбработатьСтатусыСлужебныхЗаписок(МассивЗаписок) Экспорт
//	
//	ДатаВремя = ТекущаяДата();
//	СтатусыСлужебнойЗаписки = Перечисления.СтатусыСлужебнойЗаписки;
//	
//	Запрос = Новый Запрос;
//	Запрос.УстановитьПараметр("МассивЗаписок", МассивЗаписок);
//	Запрос.Текст =
//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
//	|	СлужебнаяЗаписка.Ссылка,
//	|	СлужебнаяЗаписка.Дата,
//	|	СлужебнаяЗаписка.Ознакомлен,
//	|	СлужебнаяЗаписка.Утверждаю,
//	|	СлужебнаяЗаписка.ДатаКонтроля,
//	|	СлужебнаяЗаписка.НеСогласен,
//	|	СлужебнаяЗаписка.Проведен
//	|ИЗ
//	|	Документ.СлужебнаяЗаписка КАК СлужебнаяЗаписка
//	|ГДЕ
//	|	СлужебнаяЗаписка.Ссылка В(&МассивЗаписок)";
//	
//	РезультатЗапроса = Запрос.Выполнить();

//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		
//		Записка = ВыборкаДетальныеЗаписи.Ссылка;
//		НаборЗаписей = РегистрыСведений.СтатусыСлужебныхЗаписок.СоздатьНаборЗаписей();
//		НаборЗаписей.Отбор.СлужебнаяЗаписка.Установить(Записка);
//		НаборЗаписей.Прочитать();
//	
//		Если НаборЗаписей.Количество() = 0 Тогда
//			
//			Запись = НаборЗаписей.Добавить();
//			
//		Иначе
//			
//			Запись = НаборЗаписей[0];
//			
//		КонецЕсли;
//		
//		Если ВыборкаДетальныеЗаписи.ДатаКонтроля < НачалоДня(ДатаВремя) Тогда
//			
//			НовыйСтатус = СтатусыСлужебнойЗаписки.Просрочена;
//			
//		ИначеЕсли НЕ ВыборкаДетальныеЗаписи.Ознакомлен и НЕ ВыборкаДетальныеЗаписи.Утверждаю и НЕ ВыборкаДетальныеЗаписи.НеСогласен Тогда
//			
//			НовыйСтатус = СтатусыСлужебнойЗаписки.Новая;
//			
//		Иначе
//			
//			НовыйСтатус = СтатусыСлужебнойЗаписки.Прочитана;
//			
//		КонецЕсли;
//		
//		Если ВыборкаДетальныеЗаписи.Проведен Тогда
//			
//			НовыйСтатус = СтатусыСлужебнойЗаписки.Архивная;
//			
//		КонецЕсли;
//		
//		Запись.Статус = НовыйСтатус;
//		Запись.СлужебнаяЗаписка = Записка;
//		Запись.Период = ДатаВремя;
//		
//		НаборЗаписей.Записать();
//		
//	КонецЦикла;
//	
//КонецФункции // ОбработатьСтатусыСлужебныхЗаписок()
