
&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.СписокФизлиц.Количество() > 0 Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Текст = "Таблица будет перезаполнена" + Символы.ПС + "Продолжить?";
		
		Если Вопрос(Текст, Режим, 0) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		Объект.СписокФизлиц.Очистить();
		
	КонецЕсли;
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Если Объект.ВидНачисления = Перечисления.ВидыНачисленийЗаработнойПлаты.Монтажники Тогда
		
		СтавкиМонтажников = ПолучитьСтавкиМонтажников(Объект.Подразделение.Регион, Объект.Дата);
		
		МассивПоказателей = Новый Массив;
		МассивПоказателей.Добавить(Перечисления.ВидыПоказателейСотрудников.КилометровУдаленныхМонтажей);
		МассивПоказателей.Добавить(Перечисления.ВидыПоказателейСотрудников.КоличествоМетровУстановленныхИзделий);
		МассивПоказателей.Добавить(Перечисления.ВидыПоказателейСотрудников.КоличествоУстановленныхИзделий);
		МассивПоказателей.Добавить(Перечисления.ВидыПоказателейСотрудников.ОбзвонНормально);
		МассивПоказателей.Добавить(Перечисления.ВидыПоказателейСотрудников.ОбзвонХорошо);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
		Запрос.УстановитьПараметр("МассивПоказателей", МассивПоказателей);
		Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
		Запрос.УстановитьПараметр("ОкончаниеПериода", КонецДня(Объект.ОкончаниеПериода));
		
		// { Васильев Александр Леонидович [02.12.2013]
		// отфильтровать красиво монтажников, когда будет приличный механизм
		// } Васильев Александр Леонидович [02.12.2013]
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	УправленческийОбороты.Субконто2 КАК Монтажник,
		|	УправленческийОбороты.Субконто1 КАК Показатель,
		|	УправленческийОбороты.СуммаОборот КАК Количество
		|ИЗ
		|	РегистрБухгалтерии.Управленческий.Обороты(
		|			&НачалоПериода,
		|			&ОкончаниеПериода,
		|			,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПоказателиСотрудника),
		|			,
		|			Подразделение = &Подразделение
		|				И Субконто1 В (&МассивПоказателей)
		|				И Субконто2.ОсновнаяДолжность = ЗНАЧЕНИЕ(Справочник.Должности.Монтажник),
		|			,
		|			) КАК УправленческийОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Монтажник";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Сумма = 0;
			Комментарий = "";
			НоваяСтрока = Объект.СписокФизлиц.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.Монтажник;
			НоваяСтрока.Статья = Справочники.СтатьиДоходовРасходов.РасходыЗарплатаМонтаж;
			
			Если Выборка.Показатель = Перечисления.ВидыПоказателейСотрудников.КилометровУдаленныхМонтажей Тогда
				
				Сумма = Выборка.Количество * СтавкиМонтажников.ПроездМонтажникаЗаГородом;
				Комментарий = "За удаленные монтажи - " + Выборка.Количество + " км.";
				
			ИначеЕсли Выборка.Показатель = Перечисления.ВидыПоказателейСотрудников.КоличествоМетровУстановленныхИзделий Тогда
				
				Сумма = Выборка.Количество * СтавкиМонтажников.СборкаИзделия;
				Комментарий = "За объем выполненных работ - " + Выборка.Количество + " кв.м.";
				
			ИначеЕсли Выборка.Показатель = Перечисления.ВидыПоказателейСотрудников.КоличествоУстановленныхИзделий Тогда
				
				Сумма = Выборка.Количество * СтавкиМонтажников.ВыездМастера;
				Комментарий = "За выезды - " + Выборка.Количество + " шт.";
				
			ИначеЕсли Выборка.Показатель = Перечисления.ВидыПоказателейСотрудников.ОбзвонНормально Тогда
				
				Сумма = Выборка.Количество * СтавкиМонтажников.МонтажникуОбзвонНормально;
				Комментарий = "За обзвон без нареканий - " + Выборка.Количество + " шт.";
				
			ИначеЕсли Выборка.Показатель = Перечисления.ВидыПоказателейСотрудников.ОбзвонХорошо Тогда
				
				Сумма = Выборка.Количество * СтавкиМонтажников.МонтажникуОбзвонХорошо;
				Комментарий = "За положительный отзыв в обзвоне - " + Выборка.Количество + " шт.";
				
			КонецЕсли;
				
			НоваяСтрока.Сумма = Сумма;
			НоваяСтрока.Комментарий = Комментарий;
			
		КонецЦикла;
		
	ИначеЕсли Объект.ВидНачисления = Перечисления.ВидыНачисленийЗаработнойПлаты.Оклад Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
		Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
		Запрос.УстановитьПараметр("ОкончаниеПериода", Объект.ОкончаниеПериода);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДолжностиСотрудниковСрезПоследних.ФизЛицо,
		|	ДолжностиСотрудниковСрезПоследних.Должность,
		|	ШтатноеРасписаниеСрезПоследних.Оклад
		|ИЗ
		|	РегистрСведений.ДолжностиСотрудников.СрезПоследних(
		|			&НачалоПериода,
		|			Подразделение = &Подразделение
		|				И Работает) КАК ДолжностиСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписание.СрезПоследних(&НачалоПериода, Подразделение = &Подразделение) КАК ШтатноеРасписаниеСрезПоследних
		|		ПО (ШтатноеРасписаниеСрезПоследних.Должность = ДолжностиСотрудниковСрезПоследних.Должность)";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = Объект.СписокФизлиц.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
			НоваяСтрока.Сумма = Выборка.Оклад;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСтавкиМонтажников(Регион, Период)
	
	Ответ = Новый Структура;
	
	МассивНоменклатуры = Новый Массив;
	МассивНоменклатуры.Добавить(Справочники.Номенклатура.СборкаИзделия);
	МассивНоменклатуры.Добавить(Справочники.Номенклатура.ПроездМонтажникаЗаГородом);
	МассивНоменклатуры.Добавить(Справочники.Номенклатура.МонтажникуОбзвонНормально);
	МассивНоменклатуры.Добавить(Справочники.Номенклатура.МонтажникуОбзвонХорошо);
	МассивНоменклатуры.Добавить(Справочники.Номенклатура.ВыездМастера);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Запрос.УстановитьПараметр("Регион", Регион);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	спрНоменклатура.Ссылка,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная, 0) КАК Цена
	|ИЗ
	|	Справочник.Номенклатура КАК спрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&Период,
	|				Регион = &Регион
	|					И Номенклатура В (&МассивНоменклатуры)) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ЦеныНоменклатурыСрезПоследних.Номенклатура = спрНоменклатура.Ссылка)
	|ГДЕ
	|	спрНоменклатура.Ссылка В(&МассивНоменклатуры)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Имя = Справочники.Номенклатура.ПолучитьИмяПредопределенного(Выборка.Ссылка);
		Ответ.Вставить(Имя, Выборка.Цена);
		
	КонецЦикла;
	
	Возврат Ответ;
	
КонецФункции
