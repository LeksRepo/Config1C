
&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.СписокФизлиц.Количество() > 0 Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Текст = "Таблица будет перезаполнена" + Символы.ПС + "Продолжить?";
		
		Если Вопрос(Текст, Режим, 0) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		Объект.СписокФизлиц.Очистить();
		
	КонецЕсли;
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Если Объект.ВидНачисления = Перечисления.ВидыНачисленийЗаработнойПлаты.Монтажники Тогда
		
		ЗаполнитьНаСервереМонтажники();
		
	ИначеЕсли Объект.ВидНачисления = Перечисления.ВидыНачисленийЗаработнойПлаты.Оклад Тогда
		
		ЗаполнитьНаСервереПоОкладу();
		
	ИначеЕсли Объект.ВидНачисления = Перечисления.ВидыНачисленийЗаработнойПлаты.Дизайнеры Тогда
		
		ЗаполнитьНаСервереДизайнеры();
		
	ИначеЕсли Объект.ВидНачисления = Перечисления.ВидыНачисленийЗаработнойПлаты.ЭффективностьРаботы Тогда
		
		ЗаполнитьНаСервереЭффективностьРаботы();
		
	ИначеЕсли Объект.ВидНачисления = Перечисления.ВидыНачисленийЗаработнойПлаты.ИнженерТехнолог Тогда
		
		ЗаполнитьНаСервереИнженерТехнолог();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереИнженерТехнолог()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", Объект.ОкончаниеПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДолжностиСотрудниковСрезПоследних.ФизЛицо КАК Сотрудник,
	|	УправленческийОбороты.СуммаОборот КАК СуммаБалов,
	|	ОшибкиСотрудниковОбороты.КоличествоОборот КАК КоличествоОшибок
	|ИЗ
	|	РегистрСведений.ДолжностиСотрудников.СрезПоследних(
	|			&НачалоПериода,
	|			Подразделение = &Подразделение
	|				И Должность = ЗНАЧЕНИЕ(Справочник.Должности.ИнженерТехнолог)) КАК ДолжностиСотрудниковСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПоказателиСотрудника),
	|				,
	|				Подразделение = &Подразделение
	|					И Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСотрудников.БаллыТехнологов),
	|				,
	|				) КАК УправленческийОбороты
	|		ПО ДолжностиСотрудниковСрезПоследних.ФизЛицо = УправленческийОбороты.Субконто2
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОшибкиСотрудников.Обороты(&НачалоПериода, &КонецПериода, , ) КАК ОшибкиСотрудниковОбороты
	|		ПО ДолжностиСотрудниковСрезПоследних.ФизЛицо = ОшибкиСотрудниковОбороты.Сотрудник
	|ГДЕ
	|	ДолжностиСотрудниковСрезПоследних.Работает";
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		СуммаБалов = Выборка.СуммаБалов;
		Надбавка = 0;
		
		Если СуммаБалов > 80 Тогда
			
			НоваяСтрока = Объект.СписокФизлиц.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.Сотрудник;
			НоваяСтрока.Статья = Справочники.СтатьиДоходовРасходов.РасходыЗарплатаТехПерсонал;
			
			Если СуммаБалов < 110 Тогда
				
				Надбавка = 5000;
				
			ИначеЕсли СуммаБалов > 110 Тогда
				
				Надбавка = 10000;
				
			КонецЕсли;
			
			Комментарий = "Норма выработки = " + СуммаБалов;
			НоваяСтрока.Сумма = Надбавка;
			НоваяСтрока.Комментарий = Комментарий;
			
		КонецЕсли;
		
		КоличествоОшибок = Выборка.КоличествоОшибок;
		Комментарий = "Количество ошибок = " + КоличествоОшибок;
		
		Если КоличествоОшибок <=7 Тогда
			
			НоваяСтрока = Объект.СписокФизлиц.Добавить();
			НоваяСтрока.ФизЛицо = Выборка.Сотрудник;
			НоваяСтрока.Статья = Справочники.СтатьиДоходовРасходов.РасходыЗарплатаТехПерсонал;
			
			Если КоличествоОшибок > 5 Тогда
				
				Надбавка = 2000;
				
			ИначеЕсли КоличествоОшибок > 3 Тогда
				
				Надбавка = 5000;
				
			Иначе
				
				Надбавка = 10000;
				
			КонецЕсли;
			
			НоваяСтрока.Сумма = Надбавка;
			НоваяСтрока.Комментарий = Комментарий;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереЭффективностьРаботы()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДолжностиСотрудниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	НастройкиПоказателейЭффективностиСрезПоследних.Должность,
		|	НастройкиПоказателейЭффективностиСрезПоследних.Сумма
		|ИЗ
		|	РегистрСведений.ДолжностиСотрудников.СрезПоследних(&ОкончаниеПериода, Подразделение = &Подразделение) КАК ДолжностиСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПоказателейЭффективности.СрезПоследних(
		|				&ОкончаниеПериода,
		|				Подразделение = &Подразделение
		|					И КлючевойПоказательЭффективности = &КлючевойПоказательЭффективности) КАК НастройкиПоказателейЭффективностиСрезПоследних
		|		ПО ДолжностиСотрудниковСрезПоследних.Подразделение = НастройкиПоказателейЭффективностиСрезПоследних.Подразделение
		|			И ДолжностиСотрудниковСрезПоследних.Должность = НастройкиПоказателейЭффективностиСрезПоследних.Должность
		|ГДЕ
		|	ДолжностиСотрудниковСрезПоследних.Работает";
	
	Запрос.УстановитьПараметр("КлючевойПоказательЭффективности", Справочники.КлючевыеПоказателиЭффективности.ЭффективностьРаботы);
	Запрос.УстановитьПараметр("ОкончаниеПериода", Объект.ОкончаниеПериода);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ = РезультатЗапроса.Выгрузить();
	МассивСотрудников = ТЗ.ВыгрузитьКолонку("ФизЛицо");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатусыСлужебныхЗаписок.Ответственный,
		|	СтатусыСлужебныхЗаписок.СлужебнаяЗаписка
		|ИЗ
		|	РегистрСведений.СтатусыСлужебныхЗаписок КАК СтатусыСлужебныхЗаписок
		|ГДЕ
		|	СтатусыСлужебныхЗаписок.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСлужебнойЗаписки.Просрочена)
		|	И СтатусыСлужебныхЗаписок.Ответственный В(&МассивСотрудников)";
	
	Запрос.УстановитьПараметр("МассивСотрудников", МассивСотрудников);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Для каждого Строка Из ТЗ Цикл
		
			Если Строка.ФизЛицо = ВыборкаДетальныеЗаписи.Ответственный Тогда
				
				ТЗ.Удалить(Строка);
				
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЦикла;
	
	Объект.СписокФизлиц.Загрузить(ТЗ);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереДизайнеры()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", Объект.ОкончаниеПериода);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДолжностиСотрудниковСрезПоследних.ФизЛицо,
	|	ПлановыеПоказателиДизайнеровОбороты.ЗначениеОборот
	|ИЗ
	|	РегистрСведений.ДолжностиСотрудников.СрезПоследних(
	|			&НачалоПериода,
	|			Подразделение = &Подразделение
	|				И Должность = ЗНАЧЕНИЕ(Справочник.Должности.ДизайнерКонсультант)) КАК ДолжностиСотрудниковСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПлановыеПоказателиДизайнеров.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				Подразделение = &Подразделение
	|					И Показатель = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСотрудников.ВыручкаПоДоговорам)) КАК ПлановыеПоказателиДизайнеровОбороты
	|		ПО ДолжностиСотрудниковСрезПоследних.ФизЛицо = ПлановыеПоказателиДизайнеровОбороты.Дизайнер
	|ГДЕ
	|	ДолжностиСотрудниковСрезПоследних.Работает";
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереМонтажники()
	
	СтавкиМонтажников = ПолучитьСтавкиМонтажников(Объект.Подразделение.Регион, Объект.Дата);
	
	МассивПоказателей = Новый Массив;
	МассивПоказателей.Добавить(Перечисления.ВидыПоказателейСотрудников.КилометровУдаленныхМонтажей);
	МассивПоказателей.Добавить(Перечисления.ВидыПоказателейСотрудников.КоличествоМетровУстановленныхИзделий);
	МассивПоказателей.Добавить(Перечисления.ВидыПоказателейСотрудников.КоличествоУстановленныхИзделий);
	МассивПоказателей.Добавить(Перечисления.ВидыПоказателейСотрудников.ОбзвонНормально);
	МассивПоказателей.Добавить(Перечисления.ВидыПоказателейСотрудников.ОбзвонХорошо);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("МассивПоказателей", МассивПоказателей);
	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецДня(Объект.ОкончаниеПериода));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправленческийОбороты.Субконто2 КАК Монтажник,
	|	УправленческийОбороты.Субконто1 КАК Показатель,
	|	УправленческийОбороты.СуммаОборот КАК Количество
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПоказателиСотрудника),
	|			,
	|			Подразделение = &Подразделение
	|				И Субконто1 В (&МассивПоказателей)
	|				И Субконто2.ОсновнаяДолжность = ЗНАЧЕНИЕ(Справочник.Должности.Монтажник),
	|			,
	|			) КАК УправленческийОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Монтажник";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Сумма = 0;
		Комментарий = "";
		НоваяСтрока = Объект.СписокФизлиц.Добавить();
		НоваяСтрока.ФизЛицо = Выборка.Монтажник;
		НоваяСтрока.Статья = Справочники.СтатьиДоходовРасходов.РасходыЗарплатаМонтаж;
		
		Если Выборка.Показатель = Перечисления.ВидыПоказателейСотрудников.КилометровУдаленныхМонтажей Тогда
			
			Сумма = Выборка.Количество * СтавкиМонтажников.ПроездМонтажникаЗаГородом;
			Комментарий = "За удаленные монтажи - " + Выборка.Количество + " км.";
			
		ИначеЕсли Выборка.Показатель = Перечисления.ВидыПоказателейСотрудников.КоличествоМетровУстановленныхИзделий Тогда
			
			Сумма = Выборка.Количество * СтавкиМонтажников.СборкаИзделия;
			Комментарий = "За объем выполненных работ - " + Выборка.Количество + " кв.м.";
			
		ИначеЕсли Выборка.Показатель = Перечисления.ВидыПоказателейСотрудников.КоличествоУстановленныхИзделий Тогда
			
			Сумма = Выборка.Количество * СтавкиМонтажников.ВыездМастера;
			Комментарий = "За выезды - " + Выборка.Количество + " шт.";
			
		ИначеЕсли Выборка.Показатель = Перечисления.ВидыПоказателейСотрудников.ОбзвонНормально Тогда
			
			Сумма = Выборка.Количество * СтавкиМонтажников.МонтажникуОбзвонНормально;
			Комментарий = "За обзвон без нареканий - " + Выборка.Количество + " шт.";
			
		ИначеЕсли Выборка.Показатель = Перечисления.ВидыПоказателейСотрудников.ОбзвонХорошо Тогда
			
			Сумма = Выборка.Количество * СтавкиМонтажников.МонтажникуОбзвонХорошо;
			Комментарий = "За положительный отзыв в обзвоне - " + Выборка.Количество + " шт.";
			
		КонецЕсли;
		
		НоваяСтрока.Сумма = Сумма;
		НоваяСтрока.Комментарий = Комментарий;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереПоОкладу()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", Объект.ОкончаниеПериода);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДолжностиСотрудниковСрезПоследних.ФизЛицо,
	|	ДолжностиСотрудниковСрезПоследних.Должность,
	|	ШтатноеРасписаниеСрезПоследних.Оклад
	|ИЗ
	|	РегистрСведений.ДолжностиСотрудников.СрезПоследних(&НачалоПериода, Подразделение = &Подразделение) КАК ДолжностиСотрудниковСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписание.СрезПоследних(&НачалоПериода, Подразделение = &Подразделение) КАК ШтатноеРасписаниеСрезПоследних
	|		ПО (ШтатноеРасписаниеСрезПоследних.Должность = ДолжностиСотрудниковСрезПоследних.Должность)
	|ГДЕ
	|	ДолжностиСотрудниковСрезПоследних.Работает";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Объект.СписокФизлиц.Добавить();
		НоваяСтрока.ФизЛицо = Выборка.ФизЛицо;
		НоваяСтрока.Сумма = Выборка.Оклад;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтавкиМонтажников(Регион, Период)
	
	Ответ = Новый Структура;
	
	МассивНоменклатуры = Новый Массив;
	МассивНоменклатуры.Добавить(Справочники.Номенклатура.СборкаИзделия);
	МассивНоменклатуры.Добавить(Справочники.Номенклатура.ПроездМонтажникаЗаГородом);
	МассивНоменклатуры.Добавить(Справочники.Номенклатура.МонтажникуОбзвонНормально);
	МассивНоменклатуры.Добавить(Справочники.Номенклатура.МонтажникуОбзвонХорошо);
	МассивНоменклатуры.Добавить(Справочники.Номенклатура.ВыездМастера);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Запрос.УстановитьПараметр("Регион", Регион);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	спрНоменклатура.Ссылка,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная, 0) КАК Цена
	|ИЗ
	|	Справочник.Номенклатура КАК спрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&Период,
	|				Регион = &Регион
	|					И Номенклатура В (&МассивНоменклатуры)) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ЦеныНоменклатурыСрезПоследних.Номенклатура = спрНоменклатура.Ссылка)
	|ГДЕ
	|	спрНоменклатура.Ссылка В(&МассивНоменклатуры)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Имя = Справочники.Номенклатура.ПолучитьИмяПредопределенного(Выборка.Ссылка);
		Ответ.Вставить(Имя, Выборка.Цена);
		
	КонецЦикла;
	
	Возврат Ответ;
	
КонецФункции
