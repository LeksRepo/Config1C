////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервереБезКонтекста
Функция ЦенаДвери(Дверь, Дата)
	Цена = Справочники.Двери.ПолучитьЦенуДвери(Дверь, Дата);
	Возврат Цена; 
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЦенуНоменклатуры(Дата, Подразделение, Номенклатура)
	
	Возврат РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(Дата, Новый Структура("Подразделение, Номенклатура", Подразделение, Номенклатура));
	
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьОтбор(Группа) 
	
	Если Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.ЛДСПосн")
		ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.ЛДСПдоп") Тогда
		НоменклатурнаяГруппа = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.ЛДСП16");
		
	ИначеЕсли Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Кант") Тогда
		НоменклатурнаяГруппа = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.Кант");
		
	ИначеЕсли Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Кромка2ммОсн")
		ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Кромка2ммДоп")
		ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Кромка05ммОсн")
		ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Кромка05ммДоп") Тогда
		НоменклатурнаяГруппа = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.Кромка");
		
	ИначеЕсли Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.ПетляПростая")
		ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.ПетляУгловая") Тогда
		НоменклатурнаяГруппа = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.Петли");
		
	ИначеЕсли Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.ПолкаСотовая")
		ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Корзина") Тогда
		НоменклатурнаяГруппа = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.СотовыеЭлементы");
		
	ИначеЕсли Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Ручка") Тогда
		НоменклатурнаяГруппа = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.Ручка");
		
	ИначеЕсли Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Направляющие") Тогда
		НоменклатурнаяГруппа = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.Направляющие");
		
		//ИначеЕсли Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Софиты")
		//	ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Трансформатор") Тогда
		//	НоменклатурнаяГруппа = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.Электрика");
		
	ИначеЕсли Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.ТрубаХром")
		ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.ВешалоТорцевое")
		ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Кронштейн")
		ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Крючки")
		ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.НогаХром")
		ИЛИ Группа = ПредопределенноеЗначение("Перечисление.ВидыДеталей.Туканы") Тогда
		НоменклатурнаяГруппа = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.Фурнитура");
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
	|	И Номенклатура.Базовый";
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если НЕ РаботаСФайламиКлиент.МожноЗакрытьФормуСФайлами(Объект.Ссылка) Тогда 
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаРабочегоКаталога(Команда)
	РаботаСФайламиКлиент.ОткрытьФормуНастройкиРабочегоКаталога(Истина);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСканирования(Команда)
	РаботаСФайламиКлиент.ОткрытьФормуНастройкиСканирования(Истина);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура СуммаДокументаПриИзменении(Элемент = Неопределено)
	Объект.СуммаДокумента = Объект.Номенклатура.Итог("Стоимость") + 
	Объект.Двери.Итог("Стоимость");
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = "Цены номенклатуры будут изменены." + Символы.ПС + "Продолжить?" ;
	
	Если Вопрос(Текст, Режим, 0) = КодВозвратаДиалога.Нет Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ТекущиеЦены();
	СуммаДокументаПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если (Объект.СуммаДокумента > 0) ИЛИ (Объект.Номенклатура.Итог("Цена") > 0) Тогда
		ТекущиеЦены();
		СуммаДокументаПриИзменении();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТекущиеЦены() 
	
	Количество = Объект.Двери.Количество();
	Если Количество > 0 Тогда
		Для индекс = 1 По Количество Цикл
			Стр = Объект.Двери[Количество - индекс];
			Если НЕ ЗначениеЗаполнено(ЦенаДвери(Стр.Дверь, Объект.Дата)) Тогда
				Объект.Двери.Удалить(Стр);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ТЗ = Справочники.Двери.ТекущаяСтоимостьНоменклатуры(Объект.Номенклатура, Объект.Дата, Объект.Подразделение, Ложь);
	Объект.Номенклатура.Загрузить(ТЗ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ <Двери>

&НаКлиенте
Процедура СоздатьДверь(Команда)
	
	СтруктураЗначений = Новый Структура("Подразделение", Объект.Подразделение);
	Форма = ПолучитьФорму("Справочник.Двери.Форма.ФормаЭлемента", Новый Структура("ЗначенияЗаполнения", СтруктураЗначений), ЭтаФорма);
	Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДверь(Команда)
	
	Форма = ПолучитьФорму("Справочник.Двери.Форма.ФормаВыбора");
	Выбор = Форма.ОткрытьМодально();
	Если Выбор <> Неопределено Тогда
		ДобавитьДверВтч(Выбор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.Двери.Форма.ФормаЭлемента" Тогда
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			ДобавитьДверВтч(ВыбранноеЗначение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДверВтч(Номенклатура) 
	
	Цена = ЦенаДвери(Номенклатура, Объект.Дата);
	Если Цена <> Неопределено Тогда
		НоваяСтрока = Объект.Двери.Добавить();
		НоваяСтрока.Дверь = Номенклатура;
		НоваяСтрока.Стоимость = Цена;
		СуммаДокументаПриИзменении();
	Иначе
		Ответ = Вопрос("Цена двери не актуальна, хотите обновить дату(цену) двери?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ПараметрыФормы = Новый Структура("Ключ", Номенклатура);
			ОткрытьФорму("Справочник.Двери.Форма.ФормаЭлемента", ПараметрыФормы);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДвериПослеУдаления(Элемент)
	СуммаДокументаПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ДвериВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Двери.Форма.ФормаЭлемента", Новый Структура("Ключ", Элемент.ТекущиеДанные.Дверь));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ <Номенклатура>

&НаКлиенте
Процедура ДобавитьДопДетали(Команда)
	
	Форма = ПолучитьФорму("Справочник.Номенклатура.Форма.ФормаВыбора");
	Выбор = Форма.ОткрытьМодально();
	Если Выбор <> Неопределено Тогда
		НоваяСтрока = Объект.Номенклатура.Добавить();
		НоваяСтрока.Номенклатура = Выбор;
		НоваяСтрока.ДобавленоВручную = Истина;
		НоваяСтрока.Деталь = ПредопределенноеЗначение("Перечисление.ВидыДеталей.ДопДетали");
		НоваяСтрока.Цена = ПолучитьЦенуНоменклатуры(Объект.Дата, Объект.Подразделение, Выбор).Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПередУдалением(Элемент, Отказ)
	
	Отказ = НЕ Элемент.ТекущиеДанные.ДобавленоВручную;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Деталь = Элемент.Родитель.ТекущиеДанные.Деталь;
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(СформироватьОтбор(Деталь));
	Если ДанныеВыбора.Количество() = 0 Тогда
		СтандартнаяОбработка = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНоменклатураПриИзменении(Элемент)
	
	Данные = Элементы.Номенклатура.ТекущиеДанные;
	Если ЗначениеЗаполнено(Данные.Номенклатура) Тогда
		Данные.Цена = ПолучитьЦенуНоменклатуры(Объект.Дата, Объект.Подразделение, Данные.Номенклатура).Значение;
		Данные.Стоимость = Данные.Цена * Данные.Количество;
	Иначе
		Данные.Количество = 0;
		Данные.Стоимость = 0;
		Данные.Цена = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураКоличествоПриИзменении(Элемент)
	
	Данные = Элементы.Номенклатура.ТекущиеДанные;
	Данные.Стоимость = Данные.Цена * Данные.Количество;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ



