// { Васильев Александр Леонидович [11.06.2013]

// необходима проверка цен поступления

// } Васильев Александр Леонидович [11.06.2013]

&НаКлиенте
Процедура Подобрать(Команда)
	
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("АдресТаблицы", ВыгрузитьТаблицуВХранилище());
	ПараметрыПодбора.Вставить("Склад", Объект.Склад);
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыПодбора, Элементы.СписокНоменклатуры);
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьТаблицуВХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.СписокНоменклатуры.Выгрузить());
	
КонецФункции // ВыгрузитьТаблицуВХранилище()

&НаКлиенте
Процедура СписокНоменклатурыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ЗагрузитьТабличнуюЧасть(ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТабличнуюЧасть(АдресТаблицы)
	
	ТЗ = ПолучитьИзВременногоХранилища(АдресТаблицы);
	Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") Тогда
		Объект.СписокНоменклатуры.Загрузить(ТЗ);
	КонецЕсли;
	
КонецПроцедуры // ЗагрузитьТабличнуюЧасть()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Материалы.ТекущиеДанные;
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");
	УправлениеФормами.ПриИзмененииРеквизитовВТЧКлиент(ТекущаяСтрока, СтруктураДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Материалы.ТекущиеДанные;
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьЦену");
	УправлениеФормами.ПриИзмененииРеквизитовВТЧКлиент(ТекущаяСтрока, СтруктураДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыЦенаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Материалы.ТекущиеДанные;
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");
	УправлениеФормами.ПриИзмененииРеквизитовВТЧКлиент(ТекущаяСтрока, СтруктураДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыПриИзменении(Элемент)
	ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеСредстваПриИзменении(Элемент)
	ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Функция ПересчитатьСуммуДокумента()
	
	фСуммаДокумента = Объект.Материалы.Итог("Сумма") + Объект.Услуги.Итог("Сумма") + Объект.ОсновныеСредства.Итог("Стоимость");
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПересчитатьСуммуДокумента();
	
КонецПроцедуры

//&НаСервере
//Функция ПроверитьЦеныПоступления()
//	
//	ПлохаяЦена = Ложь;
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//	"ВЫБРАТЬ
//	|	ПоступлениеМатериаловУслугСписокНоменклатуры.Номенклатура,
//	|	ВЫБОР
//	|		КОГДА ПоступлениеМатериаловУслугСписокНоменклатуры.Коэффициент > 0
//	|			ТОГДА ПоступлениеМатериаловУслугСписокНоменклатуры.Цена / ПоступлениеМатериаловУслугСписокНоменклатуры.Коэффициент
//	|		ИНАЧЕ 0
//	|	КОНЕЦ КАК ЦенаПоступления,
//	|	ПоступлениеМатериаловУслугСписокНоменклатуры.НомерСтроки
//	|ПОМЕСТИТЬ тчДок
//	|ИЗ
//	|	Документ.ПоступлениеМатериаловУслуг.СписокНоменклатуры КАК ПоступлениеМатериаловУслугСписокНоменклатуры
//	|ГДЕ
//	|	ПоступлениеМатериаловУслугСписокНоменклатуры.Ссылка = &Ссылка
//	|	И (ПоступлениеМатериаловУслугСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидНоменклатуры.Материал)
//	|			ИЛИ ПоступлениеМатериаловУслугСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидНоменклатуры.Комплект))
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	тчДок.Номенклатура,
//	|	тчДок.ЦенаПоступления,
//	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК ЦенаРеализации,
//	|	тчДок.НомерСтроки
//	|ИЗ
//	|	тчДок КАК тчДок
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
//	|				&МоментВремени,
//	|				Подразделение = &Подразделение
//	|					И Номенклатура В
//	|						(ВЫБРАТЬ
//	|							тч.Номенклатура
//	|						ИЗ
//	|							тчДок КАК тч)) КАК ЦеныНоменклатурыСрезПоследних
//	|		ПО тчДок.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
//	|ГДЕ
//	|	тчДок.ЦенаПоступления > ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)";
//	
//	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
//	Запрос.УстановитьПараметр("МоментВремени", Объект.Дата);
//	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);

//	Результат = Запрос.Выполнить();
//	
//	Если НЕ Результат.Пустой() Тогда
//		Отказ = Истина;
//		Выборка = Результат.Выбрать();
//		Пока Выборка.Следующий() Цикл
//			
//			Сообщение = Новый СообщениеПользователю;
//			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 цена реализации %2 цена оприходования %3. Обратитесь к руководителю", Выборка.Номенклатура, Выборка.ЦенаРеализации, Окр(Выборка.ЦенаПоступления, 1));
//			Сообщение.Поле = "СписокНоменклатуры["+(Выборка.НомерСтроки-1)+"].Цена";
//			Сообщение.УстановитьДанные(Объект);
//			Сообщение.Сообщить();
//			
//			ПлохаяЦена = Истина;
//		
//		КонецЦикла;
//		
//	КонецЕсли;

//	Возврат ПлохаяЦена;

//КонецФункции // ПроверитьЦеныПоступления()

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ <Наименование>

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ


