////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем
СчетКт,
СчетМатериалы,
СчетВзаиморасчетыСПоставщиками,
ПВХСклад,
ПВХКонтрагент,
ПВХОфисы,
ПВХСтатьиДР,
Запрос;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ИнициализироватьПеременныеМодуля()
	
	СчетМатериалы = ПланыСчетов.Управленческий.МатериалыНаСкладе;
	СчетВзаиморасчетыСПоставщиками = ПланыСчетов.Управленческий.ВзаиморасчетыСПоставщиками;
	СчетРасходы = ПланыСчетов.Управленческий.Расходы;
	
	ПВХСклад = ПланыВидовХарактеристик.ВидыСубконто.Склады;
	ПВХКонтрагент = ПланыВидовХарактеристик.ВидыСубконто.Контрагенты;
	ПВХОфисы = ПланыВидовХарактеристик.ВидыСубконто.Офисы;
	ПВХСтатьиДР = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
КонецФункции

Функция СформироватьДвиженияМатериалы(фСчетКт)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПоступлениеМатериаловУслугМатериалы.Номенклатура.Базовый
	|			ТОГДА ПоступлениеМатериаловУслугМатериалы.Номенклатура
	|		ИНАЧЕ ПоступлениеМатериаловУслугМатериалы.Номенклатура.БазоваяНоменклатура
	|	КОНЕЦ КАК БазоваяНоменклатура,
	|	ПоступлениеМатериаловУслугМатериалы.Номенклатура,
	|	ПоступлениеМатериаловУслугМатериалы.Количество * ПоступлениеМатериаловУслугМатериалы.Номенклатура.КоэффициентБазовых КАК КоличествоВБазовых,
	|	ПоступлениеМатериаловУслугМатериалы.Количество КАК Количество,
	|	ПоступлениеМатериаловУслугМатериалы.Сумма КАК Сумма
	|ПОМЕСТИТЬ Подг
	|ИЗ
	|	Документ.ПоступлениеМатериаловУслуг.Материалы КАК ПоступлениеМатериаловУслугМатериалы
	|ГДЕ
	|	ПоступлениеМатериаловУслугМатериалы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Подг.БазоваяНоменклатура КАК БазоваяНоменклатура,
	|	Подг.Номенклатура КАК Номенклатура,
	|	Подг.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА Подг.КоличествоВБазовых <> 0
	|			ТОГДА Подг.Сумма / Подг.КоличествоВБазовых
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЦенаВБазовых,
	|	Подг.Сумма КАК Сумма
	|ИЗ
	|	Подг КАК Подг
	|ИТОГИ
	|	СРЕДНЕЕ(ЦенаВБазовых)
	|ПО
	|	БазоваяНоменклатура";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		
		Если ВидОперации = Перечисления.ХозяйственнаяОперация.Покупка Тогда
			Проводка = Движения.ЦеныПоставщиков.Добавить();
			Проводка.Период = Дата;
			Проводка.Подразделение = Подразделение;
			Проводка.Сумма =Выборка.ЦенаВБазовых;
			Проводка.Номенклатура = Выборка.БазоваяНоменклатура;
			Проводка.Поставщик = Контрагент;
		КонецЕсли;
		
		ВыборкаПоНоменклатуре = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоНоменклатуре.Следующий() Цикл
			
			Если ВыборкаПоНоменклатуре.Номенклатура.Неноменклатурный Тогда
				
				Проводка = Движения.Управленческий.Добавить();
				
				ЛексСервер.СписатьНеноменклатурныйМатериал(Проводка, 
				                                      Подразделение, 
													           Дата, 
									    ВыборкаПоНоменклатуре.Сумма);
				
				Проводка.СчетКТ = фСчетКт;
				
				Если фСчетКт = ПланыСчетов.Управленческий.Доходы Тогда
					Проводка.СубконтоКт[ПВХСтатьиДР] = Справочники.СтатьиДоходовРасходов.ОприходованиеМатериалов;
				Иначе
					Проводка.СубконтоКт[ПВХКонтрагент] = Контрагент;
				КонецЕсли;
				
			Иначе
			
				Проводка = Движения.Управленческий.Добавить();
				Проводка.Период = Дата;
				Проводка.Подразделение = Подразделение;
				Проводка.Сумма = ВыборкаПоНоменклатуре.Сумма;
				Проводка.СчетДт = СчетМатериалы;
				Проводка.СубконтоДт[ПВХСклад] = Склад;
				Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ВыборкаПоНоменклатуре.Номенклатура;
				Проводка.КоличествоДт = ВыборкаПоНоменклатуре.Количество;
				Проводка.СчетКТ = фСчетКт;
				
				Если фСчетКт = ПланыСчетов.Управленческий.Доходы Тогда
					Проводка.СубконтоКт[ПВХСтатьиДР] = Справочники.СтатьиДоходовРасходов.ОприходованиеМатериалов;
				Иначе
					Проводка.СубконтоКт[ПВХКонтрагент] = Контрагент;
				КонецЕсли;
				
				Проводка.Содержание = "";
				
			КонецЕсли;	
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецФункции

Функция СформироватьДвиженияУслуги()
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеМатериаловУслугУслуги.Номенклатура,
	|	СУММА(ПоступлениеМатериаловУслугУслуги.Сумма) КАК Сумма,
	|	МИНИМУМ(ПоступлениеМатериаловУслугУслуги.Содержание) КАК Содержание,
	|	ПоступлениеМатериаловУслугУслуги.Офис,
	|	ПоступлениеМатериаловУслугУслуги.Номенклатура.СтатьяДоходаРасхода СтатьяДоходаРасхода
	|ИЗ
	|	Документ.ПоступлениеМатериаловУслуг.Услуги КАК ПоступлениеМатериаловУслугУслуги
	|ГДЕ
	|	ПоступлениеМатериаловУслугУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеМатериаловУслугУслуги.Номенклатура,
	|	ПоступлениеМатериаловУслугУслуги.Офис";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Проводка = Движения.Управленческий.Добавить();
		Проводка.Период = Дата;
		Проводка.Подразделение = Подразделение;
		Проводка.Сумма = Выборка.Сумма;
		Проводка.СчетДт = ПланыСчетов.Управленческий.Расходы;
		Проводка.СубконтоДт[ПВХСтатьиДР] = Выборка.СтатьяДоходаРасхода;
		
		Проводка.СчетКТ = СчетВзаиморасчетыСПоставщиками;
		Проводка.СубконтоКт[ПВХКонтрагент] = Контрагент;
		Проводка.Содержание = Выборка.Содержание;
		
	КонецЦикла;
	
КонецФункции

Функция СформироватьДвиженияОсновныеСредства(фСчетКт, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	тзОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство,
	|	тзОсновныеСредства.НомерСтроки
	|ПОМЕСТИТЬ втОсновныеСредства
	|ИЗ
	|	Документ.ПоступлениеМатериаловУслуг.ОсновныеСредства КАК тзОсновныеСредства
	|ГДЕ
	|	тзОсновныеСредства.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОсновныеСредства.ОсновноеСредство,
	|	втОсновныеСредства.НомерСтроки
	|ИЗ
	|	втОсновныеСредства КАК втОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОсновныхСредств.СрезПоследних(
	|				&МоментВремени,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						т.ОсновноеСредство
	|					ИЗ
	|						втОсновныеСредства КАК т)) КАК СостояниеОсновныхСредствСрезПоследних
	|		ПО втОсновныеСредства.ОсновноеСредство = СостояниеОсновныхСредствСрезПоследних.ОсновноеСредство
	|ГДЕ
	|	НЕ СостояниеОсновныхСредствСрезПоследних.ПринятоКУчету ЕСТЬ NULL ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Ошибки = Неопределено;
	ПолеОшибки = "Объект.ОсновныеСредства[%1].ОсновноеСредство";
	ТекстГруппыОшибок = "ОС в строке %1 уже числится на балансе предприятия";
	ТекстОшибки = "ОС уже числится на балансе предприятия";
	
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, ПолеОшибки, ТекстОшибки, 1,Выборка.НомерСтроки - 1, ТекстГруппыОшибок);
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
	Если Отказ Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для каждого СтрокаОС Из ОсновныеСредства Цикл
		
		Проводка = Движения.Управленческий.Добавить();
		Проводка.Период = Дата;
		Проводка.Подразделение = Подразделение;
		Проводка.Сумма = СтрокаОС.Стоимость;
		
		Проводка.СчетДт = ПланыСчетов.Управленческий.ПервоначальнаяСтоимостьОС;
		Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.ОсновныеСредства] = СтрокаОС.ОсновноеСредство;
		
		Проводка.СчетКТ = фСчетКт;
		Если фСчетКт = ПланыСчетов.Управленческий.Доходы Тогда
			Проводка.СубконтоКт[ПВХСтатьиДР] = Справочники.СтатьиДоходовРасходов.ОприходованиеМатериалов;
		Иначе
			Проводка.СубконтоКт[ПВХКонтрагент] = Контрагент;
		КонецЕсли;
		
		Проводка.Содержание = СтрокаОС.Содержание;
		
		Проводка = Движения.СостояниеОсновныхСредств.Добавить();
		Проводка.Период = Дата;
		Проводка.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
		Проводка.ПервоначальнаяСтоимость = СтрокаОС.Стоимость;
		Проводка.СрокАмортизации = СтрокаОС.Срок;
		Проводка.МОЛ = СтрокаОС.МОЛ;
		Проводка.НачислятьАмортизацию = СтрокаОС.НачислятьАмортизацию;
		Проводка.ПринятоКУчету = Истина;
		
	КонецЦикла;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Отказ = ЛексСервер.ДоступнаОтменаПроведения(Ссылка);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ВидОперации = Перечисления.ХозяйственнаяОперация.Покупка;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИнвентаризацияМатериалов") Тогда
		
		ВидОперации = Перечисления.ХозяйственнаяОперация.Оприходование;
		Подразделение = ДанныеЗаполнения.Подразделение;
		Склад = ДанныеЗаполнения.Склад;
		
		Для каждого Строка Из ДанныеЗаполнения.СписокНоменклатуры Цикл
			Если Строка.Отклонение > 0 Тогда
				НоваяСтрока = Материалы.Добавить();
				НоваяСтрока.Номенклатура = Строка.Номенклатура;
				НоваяСтрока.Количество = Строка.Отклонение;
				НоваяСтрока.Цена = Строка.Цена;
				НоваяСтрока.Сумма = Строка.Цена * НоваяСтрока.Количество;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("Контрагент")
		И ДанныеЗаполнения.Свойство("Ссылка") Тогда
		
		Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения.Ссылка, "Подразделение");
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Подразделение, "ОсновнойСклад");
		Контрагент = ДанныеЗаполнения.Контрагент;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Ссылка);
		Запрос.УстановитьПараметр("Подразделение", ДанныеЗаполнения.Ссылка.Подразделение);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СписокНом.Номенклатура,
		|	СписокНом.КоличествоПоставщик КАК Количество,
		|	СписокНом.Спецификация.Номер КАК СпецНомер,
		|	СписокНом.Комментарий КАК Комментарий,
		|	ВЫБОР
		|		КОГДА СписокНом.Номенклатура.Базовый
		|			ТОГДА ЕСТЬNULL(Цены.ПлановаяЗакупочная, 0)
		|		ИНАЧЕ ЕСТЬNULL(Цены.ПлановаяЗакупочная, 0) * СписокНом.Номенклатура.КоэффициентБазовых
		|	КОНЕЦ КАК ПлановаяЦена
		|ИЗ
		|	Документ.ОперативныйЗакуп.СписокНоменклатуры КАК СписокНом
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиНоменклатуры.СрезПоследних(, Подразделение = &Подразделение) КАК Цены
		|		ПО (СписокНом.Номенклатура = Цены.Номенклатура
		|				ИЛИ СписокНом.Номенклатура.БазоваяНоменклатура = Цены.Номенклатура)
		|ГДЕ
		|	СписокНом.Ссылка = &Ссылка
		|	И СписокНом.КоличествоПоставщик > 0
		|	И СписокНом.Поставщик = &Контрагент";
		
		ТЗ = Запрос.Выполнить().Выгрузить();
		
		Для Каждого Стр ИЗ ТЗ Цикл
			
			 НоваяСтрока = Материалы.Добавить();
			 НоваяСтрока.Номенклатура = Стр.Номенклатура;
			 НоваяСтрока.Количество = Стр.Количество;
			 НоваяСтрока.ПлановаяЦена = Стр.ПлановаяЦена;
			 
			 Если ЗначениеЗаполнено(Стр.СпецНомер) Тогда
				НомерСпец = ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(Стр.СпецНомер);
			 	НоваяСтрока.Содержание = " Спец: " + НомерСпец + Стр.Комментарий;
			 КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнициализироватьПеременныеМодуля();
	
	Если ВидОперации = Перечисления.ХозяйственнаяОперация.Покупка Тогда
		// оприходование бухгалтером
		// по полной программе
		
		СформироватьДвиженияМатериалы(ПланыСчетов.Управленческий.ВзаиморасчетыСПоставщиками);
		СформироватьДвиженияУслуги();
		СформироватьДвиженияОсновныеСредства(ПланыСчетов.Управленческий.ВзаиморасчетыСПоставщиками, Отказ)
		
	ИначеЕсли ВидОперации = Перечисления.ХозяйственнаяОперация.Оприходование Тогда
		// оприходование бухгалтером
		// принимаем ниоткуда (сразу прибыль)
		
		СформироватьДвиженияМатериалы(ПланыСчетов.Управленческий.Доходы);
		СформироватьДвиженияОсновныеСредства(ПланыСчетов.Управленческий.Доходы, Отказ)
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		Движения.Управленческий.Записывать = Истина;
		Движения.ЦеныПоставщиков.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	// реквизит Склад не всегда должен быть заполнен
	// Получаем только основные средства или только услуги
	Если Материалы.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Склад");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВидОперации = Перечисления.ХозяйственнаяОперация.Покупка;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДатыЗапретаИзменения.ПроверитьДатуЗапретаИзмененияПередЗаписьюДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	СуммаДокумента = Материалы.Итог("Сумма") + Услуги.Итог("Сумма") + ОсновныеСредства.Итог("Стоимость");
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		ДатаСоздания = ТекущаяДата();
		ЗаполнитьКоличествоПрогноз();
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьКоличествоПрогноз()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("ИнтервалМеждуЗаказами", 20);
	Запрос.УстановитьПараметр("тзНоменклатура", Материалы.Выгрузить());
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(тзНом.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	тзНом.Количество,
	|	тзНом.ПлановаяЦена,
	|	тзНом.Содержание,
	|	тзНом.Сумма,
	|	тзНом.Цена
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	&тзНоменклатура КАК тзНом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА Обороты.Субконто2.Базовый
	|			ТОГДА Обороты.Субконто2
	|		ИНАЧЕ Обороты.Субконто2.БазоваяНоменклатура
	|	КОНЕЦ КАК Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА Обороты.Субконто2.Базовый
	|				ТОГДА ВЫРАЗИТЬ(Обороты.КоличествоОборотКт КАК ЧИСЛО(15, 0))
	|			ИНАЧЕ ВЫРАЗИТЬ(Обороты.КоличествоОборотКт * Обороты.Субконто2.КоэффициентБазовых КАК ЧИСЛО(15, 0))
	|		КОНЕЦ) КАК Количество,
	|	НАЧАЛОПЕРИОДА(Обороты.Период, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ втОбороты2
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Обороты(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -4), &Период, Регистратор, Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.МатериалыНаСкладе), , Подразделение = &Подразделение, , ) КАК Обороты
	|ГДЕ
	|	(Обороты.Регистратор ССЫЛКА Документ.Комплектация
	|			ИЛИ Обороты.Регистратор ССЫЛКА Документ.РеализацияМатериалов
	|			ИЛИ Обороты.Регистратор ССЫЛКА Документ.ТребованиеНакладная)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Обороты.Субконто2.Базовый
	|			ТОГДА Обороты.Субконто2
	|		ИНАЧЕ Обороты.Субконто2.БазоваяНоменклатура
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(Обороты.Период, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Таб.Номенклатура,
	|	СУММА(Таб.Количество) / 4 КАК Количество
	|ПОМЕСТИТЬ втОбороты
	|ИЗ
	|	втОбороты2 КАК Таб
	|
	|СГРУППИРОВАТЬ ПО
	|	Таб.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Таб.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА Остатки.Субконто2.Базовый
	|			ТОГДА Остатки.Субконто2
	|		ИНАЧЕ Остатки.Субконто2.БазоваяНоменклатура
	|	КОНЕЦ КАК Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА Остатки.Субконто2.Базовый
	|				ТОГДА Остатки.КоличествоОстаток
	|			ИНАЧЕ Остатки.КоличествоОстаток * Остатки.Субконто2.КоэффициентБазовых
	|		КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Остатки(
	|			&Период,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.МатериалыНаСкладе),
	|			,
	|			Субконто1.ОсновнойСклад = ИСТИНА
	|				И Подразделение = &Подразделение) КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Остатки.Субконто2.Базовый
	|			ТОГДА Остатки.Субконто2
	|		ИНАЧЕ Остатки.Субконто2.БазоваяНоменклатура
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	спрНоменклатура.Ссылка КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НастройкиНоменклатуры.ПодЗаказ, ИСТИНА)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ((НастройкиНоменклатуры.Поставщик.ВремяПоставки + НастройкиНоменклатуры.Поставщик.ЗадержкаПоставки) * (втОбороты.Количество / 30) - НастройкиНоменклатуры.Поставщик.ВремяПоставки * (втОбороты.Количество / 30) + &ИнтервалМеждуЗаказами * (втОбороты.Количество / 30) КАК ЧИСЛО(15, 0))
	|	КОНЕЦ КАК МаксимальныйОстаток,
	|	ВЫБОР
	|		КОГДА втОстатки.Количество ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(втОстатки.Количество КАК ЧИСЛО(15, 0))
	|	КОНЕЦ КАК ТекущийОстаток,
	|	ЕСТЬNULL(НастройкиНоменклатуры.ПодЗаказ, ИСТИНА) КАК ПодЗаказ
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	Справочник.Номенклатура КАК спрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиНоменклатуры.СрезПоследних(&Период, Подразделение = &Подразделение) КАК НастройкиНоменклатуры
	|		ПО спрНоменклатура.Ссылка = НастройкиНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбороты КАК втОбороты
	|		ПО спрНоменклатура.Ссылка = втОбороты.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
	|		ПО спрНоменклатура.Ссылка = втОстатки.Номенклатура
	|ГДЕ
	|	спрНоменклатура.Базовый
	|	И НЕ спрНоменклатура.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втДанные.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА втДанные.ТекущийОстаток - втДанные.МаксимальныйОстаток < 0
	|				И НЕ втДанные.ПодЗаказ
	|			ТОГДА ВЫРАЗИТЬ((втДанные.ТекущийОстаток - втДанные.МаксимальныйОстаток) * -1 КАК ЧИСЛО(15, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДокупитьКоличество
	|ПОМЕСТИТЬ втДокупить
	|ИЗ
	|	втДанные КАК втДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Ном.Номенклатура,
	|	Ном.Количество,
	|	Ном.ПлановаяЦена,
	|	Ном.Содержание,
	|	Ном.Сумма,
	|	Ном.Цена,
	|	ВЫБОР
	|		КОГДА Ном.Номенклатура.Базовый
	|			ТОГДА Докупить.ДокупитьКоличество
	|		ИНАЧЕ ВЫРАЗИТЬ(Докупить.ДокупитьКоличество / Ном.Номенклатура.КоэффициентБазовых КАК ЧИСЛО(15, 0))
	|	КОНЕЦ КАК КоличествоПрогноз
	|ИЗ
	|	втНоменклатура КАК Ном
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДокупить КАК Докупить
	|		ПО (Ном.Номенклатура = Докупить.Номенклатура
	|				ИЛИ Ном.Номенклатура.БазоваяНоменклатура = Докупить.Номенклатура)";
	
	Материалы.Загрузить(Запрос.Выполнить().Выгрузить());	
	
КонецПроцедуры

Функция УстановитьВидОперацииПоРоли()
	
	
КонецФункции
