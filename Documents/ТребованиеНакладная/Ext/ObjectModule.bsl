
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Управленческий.Записать();
	Ошибки = Неопределено;
	
	// { Васильев Александр Леонидович [18.10.2013]
	// Блокировку
	// } Васильев Александр Леонидович [18.10.2013]
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТребованиеНакладнаяСписокНоменклатуры.Номенклатура,
	|	СУММА(ТребованиеНакладнаяСписокНоменклатуры.Отпущено) КАК Количество,
	|	МИНИМУМ(ТребованиеНакладнаяСписокНоменклатуры.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	Документ.ТребованиеНакладная.СписокНоменклатуры КАК ТребованиеНакладнаяСписокНоменклатуры
	|ГДЕ
	|	ТребованиеНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
	|	И ТребованиеНакладнаяСписокНоменклатуры.Отпущено <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТребованиеНакладнаяСписокНоменклатуры.Номенклатура";
	
	ТаблицаМатериалов = Запрос.Выполнить().Выгрузить();
	
	Структура = ЛексСервер.ПеремещениеМатериаловВПроизводство(ТаблицаМатериалов, Подразделение, Склад, Движения, МоментВремени());
	
	Для каждого СтрокаНехватки Из Структура.тзНехватка Цикл
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%5 На складе %1 недостаточно материала '%2'. Из требуемых %3 есть только %4", 
		Склад,
		СтрокаНехватки.Номенклатура, 
		СтрокаНехватки.КоличествоТребуется,
		СтрокаНехватки.КоличествоОстаток,
		Ссылка);
		Поле = "Объект.СписокНоменклатуры[" +Строка(СтрокаНехватки.НомерСтроки-1) + "].Отпущено";
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Поле, ТекстСообщения);
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
	Если НЕ Отказ Тогда
		Стоимости = ПолучитьСуммыДокумента();
		СуммаДокумента = Стоимости.СтоимостьРозничная;
		Себестоимость = Структура.Себестоимость;
		Движения.Управленческий.Записывать = Истина;
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.НарядЗадание") Тогда
		
		Подразделение = ДанныеЗаполнения.Подразделение;
		Склад = Подразделение.ОсновнойСклад;
		НарядЗадание = ДанныеЗаполнения;
		Комментарий = "Введено на основании " + ДанныеЗаполнения;
		
		Таблица = СформироватьТаблицуМатериалов(ДанныеЗаполнения);
		СписокНоменклатуры.Загрузить(Таблица);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСуммыДокумента()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТребованиеНакладнаяСписокНоменклатуры.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.Базовый
	|			ТОГДА ТребованиеНакладнаяСписокНоменклатуры.Отпущено * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Внутренняя, 0)
	|		ИНАЧЕ ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.КоэффициентБазовых * ТребованиеНакладнаяСписокНоменклатуры.Отпущено * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Розничная, 0)
	|	КОНЕЦ КАК СтоимостьРозничная
	|ИЗ
	|	Документ.ТребованиеНакладная.СписокНоменклатуры КАК ТребованиеНакладнаяСписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыПоПодразделениям.СрезПоследних(&Период, Подразделение = &Подразделение) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ТребованиеНакладнаяСписокНоменклатуры.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				ИЛИ ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.БазоваяНоменклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура)
	|ГДЕ
	|	ТребованиеНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
	|ИТОГИ
	|	СУММА(СтоимостьРозничная)
	|ПО
	|	ОБЩИЕ";
	
	ОбщийИтогВыборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбщийИтогВыборка.Следующий();
	
	Структура = Новый Структура;
	Структура.Вставить("СтоимостьРозничная", ОбщийИтогВыборка.СтоимостьРозничная);
	
	Возврат Структура;
	
КонецФункции

Функция СформироватьТаблицуМатериалов(НарядЗадание)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НарядЗадание", НарядЗадание);
	Запрос.УстановитьПараметр("Подразделение", НарядЗадание.Подразделение);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НарядЗаданиеСписокНоменклатуры.КоличествоТребуется КАК Количество,
	|	НарядЗаданиеСписокНоменклатуры.Номенклатура
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	Документ.НарядЗадание.СписокНоменклатуры КАК НарядЗаданиеСписокНоменклатуры
	|ГДЕ
	|	НарядЗаданиеСписокНоменклатуры.Ссылка = &НарядЗадание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураПодразделений.Номенклатура,
	|	НоменклатураПодразделений.ОсновнаяПоСкладу
	|ПОМЕСТИТЬ втНомПодразделений
	|ИЗ
	|	РегистрСведений.НоменклатураПодразделений.СрезПоследних(&Период, Подразделение = &Подразделение)  КАК НоменклатураПодразделений
	|ГДЕ
	|	НоменклатураПодразделений.Номенклатура В
	|			(ВЫБРАТЬ
	|				т.Номенклатура
	|			ИЗ
	|				втНоменклатура КАК т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втНомПодразделений.ОсновнаяПоСкладу ЕСТЬ NULL 
	|				ИЛИ втНомПодразделений.ОсновнаяПоСкладу = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА втНоменклатура.Номенклатура
	|		ИНАЧЕ втНомПодразделений.ОсновнаяПоСкладу
	|	КОНЕЦ КАК Номенклатура,
	|	втНоменклатура.Количество,
	|	ЕСТЬNULL(втНомПодразделений.ОсновнаяПоСкладу.КоэффициентБазовых, 1) КАК КоэффициентБазовых
	|ПОМЕСТИТЬ втСписокНоменклатуры
	|ИЗ
	|	втНоменклатура КАК втНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНомПодразделений КАК втНомПодразделений
	|		ПО втНоменклатура.Номенклатура = втНомПодразделений.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСписокНоменклатуры.Номенклатура,
	|	ВЫРАЗИТЬ(втСписокНоменклатуры.Количество / втСписокНоменклатуры.КоэффициентБазовых + 0.4999 КАК ЧИСЛО(15, 0)) КАК Затребовано
	|ИЗ
	|	втСписокНоменклатуры КАК втСписокНоменклатуры";
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Колонки.Добавить("Содержание");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НарядЗаданиеРаскройХлыстов.Номенклатура,
	|	НарядЗаданиеРаскройХлыстов.Количество,
	|	НарядЗаданиеРаскройХлыстов.НомерХлыста,
	|	НарядЗаданиеРаскройХлыстов.Остаток,
	|	НарядЗаданиеРаскройХлыстов.РазмерХлыста
	|ПОМЕСТИТЬ втХлысты
	|ИЗ
	|	Документ.НарядЗадание.РаскройХлыстов КАК НарядЗаданиеРаскройХлыстов
	|ГДЕ
	|	НарядЗаданиеРаскройХлыстов.Ссылка = &НарядЗадание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураПодразделений.Номенклатура,
	|	НоменклатураПодразделений.ОсновнаяПоСкладу
	|ПОМЕСТИТЬ втНомПодразделений
	|ИЗ
	|	РегистрСведений.НоменклатураПодразделений.СрезПоследних(&Период, Подразделение = &Подразделение) КАК НоменклатураПодразделений
	|ГДЕ
	|	НоменклатураПодразделений.Номенклатура В
	|			(ВЫБРАТЬ
	|				т.Номенклатура
	|			ИЗ
	|				втХлысты КАК т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втХлысты.Номенклатура КАК Номенклатура,
	|	втХлысты.Количество КАК Количество,
	|	втХлысты.НомерХлыста КАК НомерХлыста,
	|	ВЫБОР
	|		КОГДА втХлысты.Остаток
	|			ТОГДА втХлысты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РазмерОстатка,
	|	втХлысты.РазмерХлыста КАК РазмерХлыста,
	|	втНомПодразделений.ОсновнаяПоСкладу КАК ОсновнаяПоСкладу,
	|	втНомПодразделений.ОсновнаяПоСкладу.КоэффициентБазовых * 1000 КАК РазмерЦелогоХлыста
	|ИЗ
	|	втХлысты КАК втХлысты
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНомПодразделений КАК втНомПодразделений
	|		ПО втХлысты.Номенклатура = втНомПодразделений.Номенклатура
	|ИТОГИ
	|	СУММА(Количество),
	|	МАКСИМУМ(РазмерОстатка),
	|	МАКСИМУМ(РазмерХлыста),
	|	МАКСИМУМ(ОсновнаяПоСкладу),
	|	МАКСИМУМ(РазмерЦелогоХлыста)
	|ПО
	|	Номенклатура,
	|	НомерХлыста";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		КоличествоЦелыхХлыстов = 0;
		
		ВыборкаХлысты = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаХлысты.Следующий() Цикл
			
			ИзОстатка = ВыборкаХлысты.РазмерЦелогоХлыста <> ВыборкаХлысты.РазмерХлыста;
			
			Если ВыборкаХлысты.РазмерОстатка > 0 ИЛИ ИзОстатка Тогда
				
				НоваяСтрока = тз.Добавить();
				НоваяСтрока.Номенклатура = ВыборкаХлысты.Номенклатура;
				НоваяСтрока.Затребовано = (ВыборкаХлысты.Количество - ВыборкаХлысты.РазмерОстатка) / 1000 ;
				Если ИзОстатка Тогда
					Содержание = "Из остатка размером " + ВыборкаХлысты.РазмерХлыста;
				Иначе
					Содержание = "Хлыст № " + ВыборкаХлысты.НомерХлыста + " Оставить " + ВыборкаХлысты.РазмерОстатка;
				КонецЕсли;
				НоваяСтрока.Содержание = Содержание;
				
			Иначе
				
				КоличествоЦелыхХлыстов = КоличествоЦелыхХлыстов + 1;
				
			КонецЕсли;
			
		КонецЦикла; // ВыборкаХлысты.Следующий()
		
		Если КоличествоЦелыхХлыстов > 0 Тогда
			
			НоваяСтрока = тз.Добавить();
			НоваяСтрока.Номенклатура = ВыборкаНоменклатура.ОсновнаяПоСкладу;
			НоваяСтрока.Затребовано = КоличествоЦелыхХлыстов;
			
		КонецЕсли;
		
	КонецЦикла; // ВыборкаНоменклатура
	
	Возврат тз;
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДатыЗапретаИзменения.ПроверитьДатуЗапретаИзмененияПередЗаписьюДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		ДатаСоздания = ТекущаяДата();	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Ошибки = Неопределено;
	
	Для каждого Строка Из СписокНоменклатуры Цикл
		
		Если Строка.Номенклатура.МестоОбработки <> Перечисления.МестоОбработки.Цех Тогда
			СтрокаСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 передается документом Комплектация", Строка.Номенклатура);
			Поле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("СписокНоменклатуры[%1].Номенклатура", Строка.НомерСтроки - 1);
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Поле, СтрокаСообщения);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры