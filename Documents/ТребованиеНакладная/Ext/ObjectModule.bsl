
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Управленческий.Записать();
	Ошибки = Неопределено;
	
	// { Васильев Александр Леонидович [18.10.2013]
	// Блокировку
	// } Васильев Александр Леонидович [18.10.2013]
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МИНИМУМ(ТребованиеНакладнаяСписокНоменклатуры.НомерСтроки) КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.Базовый
	|			ТОГДА ТребованиеНакладнаяСписокНоменклатуры.Номенклатура
	|		ИНАЧЕ ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.БазоваяНоменклатура
	|	КОНЕЦ КАК Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.Базовый
	|				ТОГДА ТребованиеНакладнаяСписокНоменклатуры.Отпущено
	|			ИНАЧЕ ТребованиеНакладнаяСписокНоменклатуры.Отпущено * ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.КоэффициентБазовых
	|		КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ СписокНоменклатуры
	|ИЗ
	|	Документ.ТребованиеНакладная.СписокНоменклатуры КАК ТребованиеНакладнаяСписокНоменклатуры
	|ГДЕ
	|	ТребованиеНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.Базовый
	|			ТОГДА ТребованиеНакладнаяСписокНоменклатуры.Номенклатура
	|		ИНАЧЕ ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.БазоваяНоменклатура
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНоменклатуры.Номенклатура,
	|	ВЫБОР
	|		КОГДА СписокНоменклатуры.Номенклатура.Базовый
	|			ТОГДА СписокНоменклатуры.Количество + ЕСТЬNULL(ОстаткиВЦеху.КоличествоРазвернутыйОстатокДт, 0)
	|		ИНАЧЕ СписокНоменклатуры.Количество * СписокНоменклатуры.Номенклатура.КоэффициентБазовых + ЕСТЬNULL(ОстаткиВЦеху.КоличествоРазвернутыйОстатокДт, 0)
	|	КОНЕЦ КАК КоличествоТребуемых,
	|	ЕСТЬNULL(БазовыйЛимитЦехаСрезПоследних.Количество, 0) + ЕСТЬNULL(ДополнительныйЛимитЦеха.КоличествоОстаток, 0) КАК КоличествоРазрешенных,
	|	СписокНоменклатуры.НомерСтроки
	|ИЗ
	|	СписокНоменклатуры КАК СписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БазовыйЛимитЦеха.СрезПоследних(
	|				&МоментВремени,
	|				Подразделение = &Подразделение
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							СписокНоменклатуры.Номенклатура
	|						ИЗ
	|							СписокНоменклатуры КАК СписокНоменклатуры)) КАК БазовыйЛимитЦехаСрезПоследних
	|		ПО СписокНоменклатуры.Номенклатура = БазовыйЛимитЦехаСрезПоследних.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
	|				&МоментВремени,
	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ОсновноеПроизводство),
	|				,
	|				Подразделение = &Подразделение
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СписокНоменклатуры.Номенклатура
	|						ИЗ
	|							СписокНоменклатуры КАК СписокНоменклатуры)) КАК ОстаткиВЦеху
	|		ПО СписокНоменклатуры.Номенклатура = ОстаткиВЦеху.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
	|				&МоментВремени,
	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ДополнительныйЛимитЦеха),
	|				,
	|				Подразделение = &Подразделение
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СписокНоменклатуры.Номенклатура
	|						ИЗ
	|							СписокНоменклатуры КАК СписокНоменклатуры)) КАК ДополнительныйЛимитЦеха
	|		ПО СписокНоменклатуры.Номенклатура = ДополнительныйЛимитЦеха.Субконто1";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Дата > '2013.12.18' Тогда
		
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.КоличествоТребуемых > Выборка.КоличествоРазрешенных Тогда
				
				Поле = "СписокНоменклатуры[" +Строка(Выборка.НомерСтроки-1) + "].Количество";
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 превышение лимита на %2 "+ Выборка.Номенклатура.ЕдиницаИзмерения, 
				Выборка.Номенклатура, Выборка.КоличествоТребуемых - Выборка.КоличествоРазрешенных);
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Поле, ТекстСообщения);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Нехватка = ЛексСервер.ПеремещениеМатериаловСЛогистики(Ссылка, Движения);
	
	Для каждого СтрокаНехватки Из Нехватка Цикл
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%5 На складе %1 недостаточно свободного материала '%2'. Из требуемых %3 есть только %4", 
		Склад,
		СтрокаНехватки.Номенклатура, 
		СтрокаНехватки.КоличествоТребуется,
		СтрокаНехватки.КоличествоОстаток,
		Ссылка);
		Поле = "СписокНоменклатуры[" +Строка(СтрокаНехватки.НомерСтроки-1) + "].Количество";
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Поле, ТекстСообщения);
		
	КонецЦикла;
	
	Если Ошибки <> Неопределено Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
		Возврат;
		
	КонецЕсли;
	
	СебестоимостьМатериалов = Движения.Управленческий[3].Сумма; // уебанский способ :(
	
	Стоимости = ПолучитьСуммыДокумента();
	
	Если ЗначениеЗаполнено(Виновный) Тогда
		
		// удержим с сотрудника за материалы
		
		Проводка = Движения.Управленческий.Добавить();
		Проводка.Период = Дата;
		Проводка.Подразделение = Подразделение;
		Проводка.Сумма = Стоимости.СтоимостьРозничная;
		Проводка.СчетДт = ПланыСчетов.Управленческий.ВзаиморасчетыССотрудниками;
		Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.ФизическиеЛица] = Виновный;
		Проводка.СчетКт = ПланыСчетов.Управленческий.Доходы;
		Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] = Справочники.СтатьиДоходовРасходов.ПустаяСсылка() ; // удержания
		
	КонецЕсли;
	
	СуммаДокумента = Стоимости.СтоимостьВнутренняя;
	Себестоимость = СебестоимостьМатериалов;
	Движения.Управленческий.Записывать = Истина;
	Записать(РежимЗаписиДокумента.Запись);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.НарядЗадание") Тогда
		
		Подразделение = ДанныеЗаполнения.Подразделение;
		Склад = Подразделение.ОсновнойСклад;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	спрНоменклатура.БазоваяНоменклатура,
		|	спрНоменклатура.Ссылка,
		|	спрНоменклатура.ОсновнаяПоСкладу,
		|	спрНоменклатура.КоэффициентБазовых
		|ПОМЕСТИТЬ Список
		|ИЗ
		|	Справочник.Номенклатура КАК спрНоменклатура
		|ГДЕ
		|	спрНоменклатура.ОсновнаяПоСкладу
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Список.Ссылка ЕСТЬ NULL 
		|			ТОГДА табНарядЗаданиеСписокНоменклатуры.Номенклатура
		|		ИНАЧЕ Список.Ссылка
		|	КОНЕЦ КАК Номенклатура,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА Список.Ссылка ЕСТЬ NULL 
		|				ТОГДА табНарядЗаданиеСписокНоменклатуры.Затребовано
		|			ИНАЧЕ табНарядЗаданиеСписокНоменклатуры.Затребовано / ЕСТЬNULL(Список.КоэффициентБазовых, 1)
		|		КОНЕЦ + 0.4999999999999 КАК ЧИСЛО(15, 0)) КАК Затребовано,
		|	"""""""" КАК Содержание
		|ИЗ
		|	Документ.НарядЗадание.СписокНоменклатуры КАК табНарядЗаданиеСписокНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Список КАК Список
		|		ПО табНарядЗаданиеСписокНоменклатуры.Номенклатура = Список.БазоваяНоменклатура
		|ГДЕ
		|	табНарядЗаданиеСписокНоменклатуры.Ссылка = &Ссылка
		|	И табНарядЗаданиеСписокНоменклатуры.Затребовано > 0";
		
		СписокНоменклатуры.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСуммыДокумента()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Регион", Подразделение.Регион);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТребованиеНакладнаяСписокНоменклатуры.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.Базовый
	|			ТОГДА ТребованиеНакладнаяСписокНоменклатуры.Отпущено * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Внутренняя, 0)
	|		ИНАЧЕ ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.КоэффициентБазовых * ТребованиеНакладнаяСписокНоменклатуры.Отпущено * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Внутренняя, 0)
	|	КОНЕЦ КАК СтоимостьВнутренняя,
	|	ВЫБОР
	|		КОГДА ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.Базовый
	|			ТОГДА ТребованиеНакладнаяСписокНоменклатуры.Отпущено * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Внутренняя, 0)
	|		ИНАЧЕ ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.КоэффициентБазовых * ТребованиеНакладнаяСписокНоменклатуры.Отпущено * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Розничная, 0)
	|	КОНЕЦ КАК СтоимостьРозничная
	|ИЗ
	|	Документ.ТребованиеНакладная.СписокНоменклатуры КАК ТребованиеНакладнаяСписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, Регион = &Регион) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ТребованиеНакладнаяСписокНоменклатуры.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				ИЛИ ТребованиеНакладнаяСписокНоменклатуры.Номенклатура.БазоваяНоменклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура)
	|ГДЕ
	|	ТребованиеНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
	|ИТОГИ
	|	СУММА(СтоимостьВнутренняя),
	|	СУММА(СтоимостьРозничная)
	|ПО
	|	ОБЩИЕ";
	
	ОбщийИтогВыборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбщийИтогВыборка.Следующий();
	
	Структура = Новый Структура;
	Структура.Вставить("СтоимостьВнутренняя", ОбщийИтогВыборка.СтоимостьВнутренняя);
	Структура.Вставить("СтоимостьРозничная", ОбщийИтогВыборка.СтоимостьРозничная);
	
	Возврат Структура;
	
КонецФункции
