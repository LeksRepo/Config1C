
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	ПодпискиНаСобытия.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаГруппыСтатейСтатьяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.РасшифровкаГруппыСтатей.ТекущиеДанные;
	
	ПараметрыОтбора = Новый Структура("Родитель", ТекущаяСтатья);
	ПараметрыФормы = Новый Структура("Отбор", ПараметрыОтбора);
	
	ВыбраннаяСтатья = ОткрытьФормуМодально("Справочник.Статьи.ФормаВыбора", ПараметрыФормы);
	Если ЗначениеЗаполнено(ВыбраннаяСтатья) Тогда
		ТекущиеДанные.Статья = ВыбраннаяСтатья;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Объект.Дата = НачалоМесяца(Объект.Дата);
	СформироватьОтчет();
		
КонецПроцедуры

&НаКлиенте
Функция СформироватьОтчет()

	СформироватьОтчетНаСервере(Объект.Дата, Объект.Подразделение);

КонецФункции // СформироватьОтчет()()

&НаСервере
Функция СформироватьОтчетНаСервере(Дата, Подразделение)

	//Получаем схему из макета
	СхемаКомпоновкиДанных = Отчеты.ПланФактныйАнализ.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	//Из схемы возьмем настройки по умолчанию
	Настройки = СхемаКомпоновкиДанных.ВариантыНастроек.ДляПлана.Настройки;
	
	ПараметрПериодОтчета = Настройки.ПараметрыДанных.Элементы.Найти("ПериодОтчета");
	НачалоПериодаОтчета = НачалоМесяца(ДобавитьМесяц(Дата, -3));
	КонецПериодаОтчета = КонецМесяца(Дата);
	
	ПараметрПериодОтчета.Значение = Новый СтандартныйПериод(НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ОтборПодразделение = Настройки.Отбор.Элементы.Получить(0);
	ОтборПодразделение.ПравоеЗначение = Подразделение;
	ОтборПодразделение.Использование = Истина;
	
	//Помещаем в переменную данные о расшифровке данных
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки);
	
	//Выводим результат в табличный документ
	ОтчетПоСтатьям.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ОтчетПоСтатьям);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);	
	
КонецФункции // ПолучитьОтчет()

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	СформироватьОтчет();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Дата) Тогда
		ДатаОтчета = Объект.Дата;
	Иначе
		ДатаОтчета = ТекущаяДата();
	КонецЕсли;
	
	СформироватьОтчетНаСервере(ДатаОтчета, Объект.Подразделение);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Статьи.Ссылка КАК ГруппаСтатей,
	|	СУММА(ПланРуководителяСписокСтатей.Сумма) КАК Сумма
	|ИЗ
	|	Справочник.Статьи КАК Статьи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланРуководителя.СписокСтатей КАК ПланРуководителяСписокСтатей
	|		ПО (ПланРуководителяСписокСтатей.Родитель = Статьи.Ссылка)
	|			И (ПланРуководителяСписокСтатей.Ссылка = &Ссылка)
	|ГДЕ
	|	Статьи.ЭтоГруппа
	|	И Статьи.ВидСтатьи = ЗНАЧЕНИЕ(Перечисление.ВидСтатьи.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	Статьи.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Статьи.НомерКолонки";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	ГруппыСтатей.Загрузить(Запрос.Выполнить().Выгрузить());
    ИтогПоСтатьям = ГруппыСтатей.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяСтатьяПриИзменении(Элемент)
	
	УстановитьОтборПоСтатье(ТекущаяСтатья);
	
КонецПроцедуры

&НаКлиенте
Функция УстановитьОтборПоСтатье(Статья)
	
	Если ЗначениеЗаполнено(Статья) Тогда
		ОтборСтрок = Новый ФиксированнаяСтруктура("Родитель", Статья);
	Иначе
		ОтборСтрок = Новый ФиксированнаяСтруктура("Родитель", Неопределено);
	КонецЕсли;
	
	Элементы.СписокСтатей.ОтборСтрок = ОтборСтрок;

КонецФункции // УстановитьОтборПоСтатье()

&НаКлиенте
Функция ПересчитатьГруппы()

	// не нравится мне вложенный цикл
	// но придумать сейчас не могу
	// забыл как делал пару дней назад :(
	
	// хоть и не так много строк в документах,
	// всё равно не по себе от такого решения
	
	Для каждого СтрокаГруппы из ГруппыСтатей Цикл
		
		СуммаГруппы = 0;
		
		Для каждого СтрокаСтатья Из Объект.СписокСтатей Цикл
		
			Если СтрокаГруппы.ГруппаСтатей = СтрокаСтатья.Родитель Тогда
				СуммаГруппы = СтрокаСтатья.Сумма + СуммаГруппы;
			КонецЕсли;
		
		КонецЦикла;
		
		СтрокаГруппы.Сумма = СуммаГруппы;
		
	КонецЦикла;

    ИтогПоСтатьям = ГруппыСтатей.Итог("Сумма");

КонецФункции // ПересчитатьГруппы()

&НаКлиенте
Процедура СписокСтатейПриИзменении(Элемент)
	
	ПересчитатьГруппы();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыСтатейПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ГруппыСтатей.ТекущиеДанные;
	ТекущаяСтатья = ТекущиеДанные.ГруппаСтатей;
	
	УстановитьОтборПоСтатье(ТекущаяСтатья);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСтатейСтатьяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура;
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	
	Если ЗначениеЗаполнено(ТекущаяСтатья) Тогда
		Отбор.Вставить("Родитель", ТекущаяСтатья);
	КонецЕсли;
	
	ТекущиеДанные = Элементы.СписокСтатей.ТекущиеДанные;
	ВыбраннаяСтатья = ОткрытьФормуМодально("Справочник.Статьи.Форма.ФормаВыбора", ПараметрыФормы);
	
	Если ЗначениеЗаполнено(ВыбраннаяСтатья) Тогда
		ТекущиеДанные.Статья = ВыбраннаяСтатья;
		ТекущиеДанные.Родитель = ЛексСервер.ЗначениеРеквизитаОбъекта(ВыбраннаяСтатья, "Родитель");
	КонецЕсли;
	
КонецПроцедуры
