
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДатыЗапретаИзменения.ПроверитьДатуЗапретаИзмененияПередЗаписьюДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// { Васильев Александр Леонидович [24.03.2015]
	// Себестоимости нет, можно использовать "новую" методику проведения.
	// } Васильев Александр Леонидович [24.03.2015]
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходОбрезковСписокНоменклатуры.Номенклатура,
	|	РасходОбрезковСписокНоменклатуры.Ширина,
	|	РасходОбрезковСписокНоменклатуры.Высота,
	|	&Подразделение КАК  Подразделение,
	|	РасходОбрезковСписокНоменклатуры.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	Документ.РасходОбрезков.СписокНоменклатуры КАК РасходОбрезковСписокНоменклатуры
	|ГДЕ
	|	РасходОбрезковСписокНоменклатуры.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатура.Номенклатура,
	|	втНоменклатура.Ширина,
	|	втНоменклатура.Высота,
	|	втНоменклатура.НомерСтроки
	|ИЗ
	|	втНоменклатура КАК втНоменклатура";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Запись = Движения.ОбрезкиМатериалов.ДобавитьРасход();
		Запись.Период = Дата;
		Запись.Подразделение = Подразделение;
		Запись.Номенклатура = Выборка.Номенклатура;
		Запись.Ширина = Выборка.Ширина;
		Запись.Высота = Выборка.Высота;
		Запись.Количество = 1;
		
	КонецЦикла;
	
	Движения.Записать();
	
	// { Васильев Александр Леонидович [24.03.2015]
	// Создали движения, теперь проверим, ушли ли в минус.
	// } Васильев Александр Леонидович [24.03.2015]
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	втНоменклатура.Номенклатура,
	|	МИНИМУМ(втНоменклатура.НомерСтроки) КАК НомерСтроки,
	|	втНоменклатура.Ширина,
	|	втНоменклатура.Высота,
	|	втНоменклатура.Подразделение
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	втНоменклатура КАК втНоменклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	втНоменклатура.Номенклатура,
	|	втНоменклатура.Подразделение,
	|	втНоменклатура.Высота,
	|	втНоменклатура.Ширина
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатура.Номенклатура,
	|	втНоменклатура.НомерСтроки,
	|	-ОбрезкиМатериаловОстатки.КоличествоОстаток КАК Нехватка,
	|	втНоменклатура.Ширина,
	|	втНоменклатура.Высота
	|ИЗ
	|	ВТ КАК втНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбрезкиМатериалов.Остатки(, ) КАК ОбрезкиМатериаловОстатки
	|		ПО втНоменклатура.Номенклатура = ОбрезкиМатериаловОстатки.Номенклатура
	|			И втНоменклатура.Ширина = ОбрезкиМатериаловОстатки.Ширина
	|			И втНоменклатура.Высота = ОбрезкиМатериаловОстатки.Высота
	|			И втНоменклатура.Подразделение = ОбрезкиМатериаловОстатки.Подразделение
	|ГДЕ
	|	ОбрезкиМатериаловОстатки.КоличествоОстаток < 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Ошибки = Неопределено;
		ШаблонСтроки = "%1 (%2х%3) недостаточно %4 шт.";
		ИмяПоляОшибки = "Объект.СписокНоменклатуры[%1].Количество";
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСтроки,
			Выборка.Номенклатура,
			Выборка.Ширина,
			Выборка.Высота,
			Выборка.Нехватка);
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, ИмяПоляОШибки, СтрокаОшибки,, Выборка.НомерСтроки - 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
	Если Не Отказ Тогда
		Движения.ОбрезкиМатериалов.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Перем Ошибки;
	
	Для каждого Строка Из СписокНоменклатуры Цикл
		
		Если НЕ Строка.Номенклатура.НоменклатурнаяГруппа.ВидМатериала = Перечисления.ВидыМатериалов.Листовой Тогда
			
			ТекстСообщения = "" + Строка.Номенклатура + " не листовой материал";
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.СписокНоменклатуры[%1].Номенклатура", ТекстСообщения,,Строка.НомерСтроки - 1);
			
		КонецЕсли;
		
	КонецЦикла;	
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры
