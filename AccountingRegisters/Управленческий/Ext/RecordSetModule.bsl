
Процедура ПередЗаписью(Отказ, РежимЗаписи)
	
	Регистратор = Отбор.Регистратор.Значение;
	СчетДоходы = ПланыСчетов.Управленческий.Доходы;
	СчетРасходы = ПланыСчетов.Управленческий.Расходы;
	ПВХСтатьиДР = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР;
	
	Ошибки = Неопределено;
	
	Для каждого Запись Из ЭтотОбъект Цикл
		
		СчетДт = Запись.СчетДт;
		СчетКт = Запись.СчетКт;
		
		Запись.СчетДтЧтение = Запись.СчетДт;
		Запись.СчетКтЧтение = Запись.СчетКт;
		
		////////////////////////////////////////////
		// проверка на использование счетов с субсчетами
		
		Если СчетКт.ЗапретитьИспользоватьВПроводках Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Регистратор, СформироватьТекстОшибкиСчета(СчетКт));
		КонецЕсли;
		
		Если СчетДт.ЗапретитьИспользоватьВПроводках Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Регистратор, СформироватьТекстОшибкиСчета(СчетДт));
		КонецЕсли;
		
		// { Васильев Александр Леонидович [11.11.2014]
		
		Если ТипЗнч(Регистратор) <> Тип("ДокументСсылка.ЗакрытиеМесяца") Тогда
			
			// Только документ Закрытие месяца можно делать "неправильные" проводки.
			
			Если СчетДт = ПланыСчетов.Управленческий.Доходы Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Регистратор, "Запрещено использование счета Доходы по дебету");
			КонецЕсли;
			
			Если СчетКт = ПланыСчетов.Управленческий.Расходы Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Регистратор, "Запрещено использование счета Доходы по кредиту");
			КонецЕсли;
			
		КонецЕсли;
		
		// } Васильев Александр Леонидович [11.11.2014]
		
		//БалансоваяПроводка = ЗначениеЗаполнено(СчетДт) И ЗначениеЗаполнено(СчетКт);
		//
		//Если БалансоваяПроводка Тогда
		//	
		//	Если СчетДт.Забалансовый И СчетДт.ПринадлежитЭлементу(СчетРасходы) И Запись.СубконтоДт[ПВХСтатьиДР].ВидСтатьи <> Перечисления.ВидыСтатейДР.Расход Тогда
		//		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Статья '%1' не является расходной статьей", Запись.СубконтоДт[ПВХСтатьиДР]);
		//		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Регистратор, ТекстОшибки);
		//	КонецЕсли;
		//	
		//	Если СчетКт.ПринадлежитЭлементу(СчетРасходы) И Запись.СубконтоКт[ПВХСтатьиДР].ВидСтатьи <> Перечисления.ВидыСтатейДР.Доход Тогда
		//		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Статья '%1' не является доходной статьей", Запись.СубконтоДт[ПВХСтатьиДР]);
		//		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Регистратор, ТекстОшибки);
		//	КонецЕсли;
		//	
		//КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

Функция СформироватьТекстОшибкиСчета(Счет)
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Счет '%1' запрещено использовать в проводках -- используйте субсчета", Счет);
	
КонецФункции

