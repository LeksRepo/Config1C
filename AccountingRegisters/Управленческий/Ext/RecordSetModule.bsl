
Процедура ПередЗаписью(Отказ, РежимЗаписи)
	
	Регистратор = ЭтотОбъект.Отбор.Регистратор.Значение;
	СчетДоходы = ПланыСчетов.Управленческий.Доходы;
	СчетРасходы = ПланыСчетов.Управленческий.Расходы;
	ПВХСтатьиДР = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР;
	Ошибки = Неопределено;
	
	//	ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Регистратор, "Текст ошибки");
	
	Для каждого Запись Из ЭтотОбъект Цикл
		
		СчетДт = Запись.СчетДт;
		СчетКт = Запись.СчетКт;
		
		////////////////////////////////////////////
		// проверка на использование счетов с субсчетами
		
		Если СчетКт.ЗапретитьИспользоватьВПроводках Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Регистратор, СформироватьТекстОшибкиСчета(СчетКт));
		КонецЕсли;
		
		Если СчетДт.ЗапретитьИспользоватьВПроводках Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Регистратор, СформироватьТекстОшибкиСчета(СчетДт));
		КонецЕсли;
		
		БалансоваяПроводка = ЗначениеЗаполнено(СчетДт) И ЗначениеЗаполнено(СчетКт);
		
		Если БалансоваяПроводка Тогда
			Если СчетДт.Забалансовый И СчетДт.ПринадлежитЭлементу(СчетРасходы) И Запись.СубконтоДт[ПВХСтатьиДР].ВидСтатьи <> Перечисления.ВидыСтатейДР.Расход Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Статья '%1' не является расходной статьей", Запись.СубконтоДт[ПВХСтатьиДР]);
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Регистратор, ТекстОшибки);
			КонецЕсли;
			
			Если СчетКт.ПринадлежитЭлементу(СчетРасходы) И Запись.СубконтоКт[ПВХСтатьиДР].ВидСтатьи <> Перечисления.ВидыСтатейДР.Доход Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Статья '%1' не является доходной статьей", Запись.СубконтоДт[ПВХСтатьиДР]);
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Регистратор, ТекстОшибки);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Ошибки <> Неопределено Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьТекстОшибкиСчета(Счет)
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Счет '%1' запрещено использовать в проводках -- используйте субсчета", Счет);
	
КонецФункции

