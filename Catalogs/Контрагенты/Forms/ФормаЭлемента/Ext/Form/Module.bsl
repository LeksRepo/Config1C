
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьВидимостьФормы();
	
КонецПроцедуры

&НаКлиенте
Функция ОбновитьВидимостьФормы()
	
	Элементы.ГруппаЮридическоеЛицо.Видимость = Объект.ЮридическоеЛицо;
	Элементы.ГруппаФизическоеЛицо.Видимость = НЕ Объект.ЮридическоеЛицо;
	Элементы.ДилерскиеНастройки.Видимость = Объект.Дилер;
	Элементы.Наименование.Доступность = Объект.ЮридическоеЛицо;
	
КонецФункции

&НаКлиенте
Процедура ЮридическоеЛицоПриИзменении(Элемент)
	
	ОбновитьВидимостьФормы();
	
КонецПроцедуры

&НаКлиенте
Функция ПриИзмененииФИО()
	
	Объект.Наименование = Объект.Фамилия +" " +Объект.Имя + " " + Объект.Отчество;
	Объект.ПолноеНаименование = Объект.Наименование;
	
КонецФункции

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	
	Объект.Фамилия = СокрЛП(Объект.Фамилия);
	ПриИзмененииФИО();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	
	Объект.Имя = СокрЛП(Объект.Имя);
	ПриИзмененииФИО();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)
	
	Объект.Отчество = СокрЛП(Объект.Отчество);
	ПриИзмененииФИО();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.ТолькоПросмотр = Объект.Ссылка = Справочники.Контрагенты.ЧастноеЛицо;
	
КонецПроцедуры

&НаКлиенте
Процедура ДилерПриИзменении(Элемент)
	
	ОбновитьВидимостьФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Свойство("Файл ") Тогда
		Модифицированность = Истина;
		Объект.Логотип = Параметр.Файл;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	ПерезаполнитьДанныеИзВебСервиса(Объект.ИНН);
КонецПроцедуры

&НаКлиенте
Процедура ОГРНПриИзменении(Элемент)
	ПерезаполнитьДанныеИзВебСервиса(Объект.ОГРН);
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьДанныеИзВебСервиса(Код)
	
	Данные = ПолучитьДанныеИзВебСервиса(Число(Код));
	
	ТекстСообщения = Данные.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ТекстСообщения);
	ПолученныеДанные = ПрочитатьJSON(ЧтениеJSON);
	
	Если ПолученныеДанные.Свойство("suggestions") И ПолученныеДанные.suggestions.Количество() > 0 Тогда
		
		Данные = ПолученныеДанные.suggestions[0].data;
		 
		Объект.Наименование = Данные.name.full + " " + Данные.opf.short;
		Объект.ИНН = Данные.inn;
		Объект.КПП = Данные.kpp;
		Объект.ОГРН = Данные.ogrn;
	    Объект.ЮридическийАдрес = Данные.address.value;
		Объект.ПочтовыйАдрес = Данные.address.value;
		Объект.Руководитель = Данные.management.name;
		Объект.ПолноеНаименование = Данные.name.full_with_opf;
		 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьДанныеИзВебСервиса(Код)
	
	Токен = "e4b68cbc0fb7f887a245b7fc107850d1903d02bf";
	СоответствиеДанные = Новый Соответствие;
	СоответствиеДанные.Вставить("query", Код);
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить("ACTIVE");
	СоответствиеДанные.Вставить("status", МассивСтатусов);
	Сервер = "suggestions.dadata.ru";
	СтрокаЗапроса = "/suggestions/api/4_1/rs/findById/party";
	Возврат ОтправитьЗапрос(СтрокаЗапроса, СоответствиеДанные, Сервер, Токен);
	
КонецФункции

&НаКлиенте
Функция ОтправитьЗапрос(СтрокаЗапроса, СоответствиеДанные, Сервер, Токен)
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, СоответствиеДанные);
	СтрокаДанные = ЗаписьJSON.Закрыть();
	ssl1 = Новый ЗащищенноеСоединениеOpenSSL(
	Новый СертификатКлиентаWindows(СпособВыбораСертификатаWindows.Авто),
	Новый СертификатыУдостоверяющихЦентровWindows());
	HTTPСоединение = Новый HTTPСоединение(Сервер,,,,,,ssl1);
	HTTPЗапрос = Новый HTTPЗапрос(СтрокаЗапроса);
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");
	HTTPЗапрос.Заголовки.Вставить("Accept", "application/json");
	HTTPЗапрос.Заголовки.Вставить("Authorization", "Token " + Токен);
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаДанные, "UTF-8", ИспользованиеByteOrderMark.НеИспользовать);
	
	Попытка
		Результат = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	Исключение
		// исключение здесь говорит о том, что запрос не дошел до HTTP-Сервера
		Сообщить("Произошла сетевая ошибка!");
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции
