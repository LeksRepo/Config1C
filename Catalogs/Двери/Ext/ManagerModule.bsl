
Функция ПолучитьСтруктуруПрофиля(Профиль) Экспорт
	
	СтруктураПрофиля = Новый Структура;
	СтруктураПрофиля.Вставить("СтрокаПрофиля", "");
	СтруктураПрофиля.Вставить("Вертикальный", "");
	СтруктураПрофиля.Вставить("РамкаВерхняя", "");
	СтруктураПрофиля.Вставить("РамкаНижняя", "");
	СтруктураПрофиля.Вставить("РамкаСредняяБезКрепления", "");
	СтруктураПрофиля.Вставить("РамкаСредняяСКреплением", "");
	СтруктураПрофиля.Вставить("ТрекНаПоворотнуюСистему", "");
	СтруктураПрофиля.Вставить("ТрекВерхний", "");
	СтруктураПрофиля.Вставить("ТрекНижний", "");
	СтруктураПрофиля.Вставить("ТрекОднополосныйВерхний", "");
	СтруктураПрофиля.Вставить("ТрекОднополосныйНижний", "");
	СтруктураПрофиля.Вставить("Цвет", Профиль.Цвет.КодЦвета);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Цвет", Профиль.Цвет);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	спрНоменклатура.Ссылка,
	|	спрНоменклатура.ШиринаДетали,
	|	спрНоменклатура.ГлубинаПаза,
	|	спрНоменклатура.НоменклатурнаяГруппа
	|ИЗ
	|	Справочник.Номенклатура КАК спрНоменклатура
	|ГДЕ
	|	спрНоменклатура.Базовый
	|	И спрНоменклатура.Цвет = &Цвет
	|	И спрНоменклатура.НоменклатурнаяГруппа В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.АлюминиевыйПрофиль))";
	
	Массив = Новый Массив(8);
	Массив[0] = Профиль.ШиринаДетали;
	Массив[1] = Профиль.ГлубинаПаза;
	СтруктураПрофиля.Вертикальный = Профиль;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.РамкаВерхняя Тогда
			Массив[2] = Выборка.ШиринаДетали;
			Массив[3] = Выборка.ГлубинаПаза;
			СтруктураПрофиля.РамкаВерхняя = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.РамкаНижняя Тогда
			Массив[4] = Выборка.ШиринаДетали;
			Массив[5] = Выборка.ГлубинаПаза;
			СтруктураПрофиля.РамкаНижняя = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.РамкаСредняяБезКрепления Тогда
			Массив[6] = Выборка.ШиринаДетали;
			Массив[7] = Выборка.ГлубинаПаза;
			СтруктураПрофиля.РамкаСредняяБезКрепления = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.РамкаСредняяСКреплением Тогда
			Массив[6] = ?(ЗначениеЗаполнено(Массив[6]), Массив[6], Выборка.ШиринаДетали);
			Массив[7] = ?(ЗначениеЗаполнено(Массив[7]), Массив[7], Выборка.ГлубинаПаза);
			СтруктураПрофиля.РамкаСредняяСКреплением = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ТрекВерхний Тогда
			СтруктураПрофиля.ТрекВерхний = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ТрекНаПоворотнуюСистему Тогда
			СтруктураПрофиля.ТрекНаПоворотнуюСистему = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ТрекНижний Тогда
			СтруктураПрофиля.ТрекНижний = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ТрекОднополосныйВерхний Тогда
			СтруктураПрофиля.ТрекОднополосныйВерхний = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ТрекОднополосныйНижний Тогда
			СтруктураПрофиля.ТрекОднополосныйНижний = Выборка.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	СтрокаПрофиля = "";
	Ошибка = Ложь;
	Для Каждого Элемент Из Массив Цикл
		Если Элемент = Неопределено Тогда
			Ошибка = Истина;
		КонецЕсли;
		СтрокаПрофиля = СтрокаПрофиля + Строка(Элемент) + "_";
	КонецЦикла;
	
	Если НЕ Ошибка Тогда
		СтруктураПрофиля.СтрокаПрофиля = СтрокаПрофиля;
	КонецЕсли;
	
	Возврат СтруктураПрофиля;
	
КонецФункции

Функция ПолучитьТаблицуНоменклатурыНаПечать(Ссылка, ЕстьНаряд) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если ЕстьНаряд Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДвериСписокНоменклатуры.Номенклатура.Наименование КАК Наименование,
		|	ДвериСписокНоменклатуры.Длина КАК Длина,
		|	ДвериСписокНоменклатуры.Ширина КАК Ширина,
		|	ДвериСписокНоменклатуры.Количество КАК Количество
		|ИЗ
		|	Справочник.Двери.СписокНоменклатуры КАК ДвериСписокНоменклатуры
		|ГДЕ
		|	ДвериСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
		|	И ДвериСписокНоменклатуры.Ссылка = &Ссылка
		|	И ДвериСписокНоменклатуры.Длина > 0
		|	И ДвериСписокНоменклатуры.Ширина > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДвериСписокНоменклатуры.Номенклатура.Наименование КАК Наименование,
		|	ВЫБОР
		|			КОГДА ДвериСписокНоменклатуры.Длина =0 И ДвериСписокНоменклатуры.Ширина > 0
		|			ТОГДА ДвериСписокНоменклатуры.Ширина
		|		ИНАЧЕ ДвериСписокНоменклатуры.Длина
		|	КОНЕЦ КАК Длина,
		|	ВЫБОР
		|			КОГДА ДвериСписокНоменклатуры.Длина =0 И ДвериСписокНоменклатуры.Ширина > 0
		|			ТОГДА 0
		|		ИНАЧЕ ДвериСписокНоменклатуры.Ширина
		|	КОНЕЦ КАК Ширина,
		|	ДвериСписокНоменклатуры.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА ДвериСписокНоменклатуры.Длина > 0
		|				И ДвериСписокНоменклатуры.Ширина > 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДвериСписокНоменклатуры.Ширина > 0
		|						И ДвериСписокНоменклатуры.Длина = 0
		|					ТОГДА 1
		|				ИНАЧЕ 2
		|			КОНЕЦ
		|	КОНЕЦ КАК Порядок
		|ИЗ
		|	Справочник.Двери.СписокНоменклатуры КАК ДвериСписокНоменклатуры
		|ГДЕ
		|	ДвериСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
		|	И ДвериСписокНоменклатуры.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок,
		|	Наименование";
		
	КонецЕсли;
	
	Таблица =  Запрос.Выполнить().Выгрузить();
	Строка = "";
	Мас = Новый Массив();
	
	Для Каждого Стр Из Таблица Цикл
		
		Мас.Добавить(Стр.Наименование + "♥" + Стр.Количество + "♥" + Стр.Ширина + "♥" + Стр.Длина);
		
	КонецЦикла;
	
	Строка = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(Мас, "♦");
	
	Возврат Строка;
	
КонецФункции

Функция ПолучитьДанныеДляПечатиДвери(Данные, Примечание) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Наряд","");
	Результат.Вставить("ДатаИзготовления","");
	Результат.Вставить("Очередь","");
	Результат.Вставить("НомерДверь","");
	Результат.Вставить("НомерСпец","");
	Результат.Вставить("НомерДоговор","");
	Результат.Вставить("ТаблицаХлысты","");
	
	Если ЗначениеЗаполнено(Данные.ТекущаяДверь) Тогда
		Результат.Вставить("НомерДверь", ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Данные.ТекущаяДверь.Код));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Данные.Спецификация) Тогда
		Результат.Вставить("НомерСпец", ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Данные.Спецификация.Номер));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Данные.Договор) Тогда
		Результат.Вставить("НомерДоговор", ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Данные.Договор.Номер));
	КонецЕсли;
	
	Если ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
		
		Результат.Вставить("ТаблицаНоменклатуры", Справочники.Двери.ПолучитьТаблицуНоменклатурыНаПечать(Данные.ТекущаяДверь, Ложь));
		
	Иначе
		
		ЗапросНаряд = Новый Запрос;
		ЗапросНаряд.УстановитьПараметр("Спецификация", Данные.Спецификация);
		ЗапросНаряд.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Список.НомерСтроки КАК НомерСтроки,
		|	Список.Ссылка.Номер КАК НарядНомер,
		|	Список.Ссылка КАК Наряд,
		|	Список.ДатаИзготовления КАК ДатаИзготовления
		|ИЗ
		|	Документ.НарядЗадание.СписокСпецификаций КАК Список
		|ГДЕ
		|	Список.Спецификация = &Спецификация";
		
		РезультатЗапроса = ЗапросНаряд.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			Результат.Вставить("Наряд",ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Выборка.НарядНомер));
			Результат.Вставить("ДатаИзготовления", Формат(Выборка.ДатаИзготовления,"ДЛФ=D"));
			Результат.Вставить("Очередь", Выборка.НомерСтроки);
			
			Результат.Вставить("ТаблицаХлысты", Документы.НарядЗадание.ПолучитьХлыстовойМатериалНаДвери(Выборка.Наряд,Данные.ТекущаяДверь));
			Результат.Вставить("ТаблицаНоменклатуры", Справочники.Двери.ПолучитьТаблицуНоменклатурыНаПечать(Данные.ТекущаяДверь, Истина));
			
		Иначе
			
			Результат.Вставить("ТаблицаНоменклатуры", Справочники.Двери.ПолучитьТаблицуНоменклатурыНаПечать(Данные.ТекущаяДверь, Ложь));
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеДляПечати = Результат;
	
	Строка = "prtx☻" + Примечание + "☻" + "Спец:  <b>" + ДанныеДляПечати.НомерСпец + "</b>         Очередь: <b>№" + ДанныеДляПечати.Очередь + "</b>" + Символы.ПС 
	+ "Дверь: " + ДанныеДляПечати.НомерДверь + "         Наряд: " + ДанныеДляПечати.Наряд + Символы.ПС 
	+ "Договор: " + ДанныеДляПечати.НомерДоговор + "       Изготовить: <b>" + ДанныеДляПечати.ДатаИзготовления+"</b>"
	+ "☻" + ДанныеДляПечати.ТаблицаНоменклатуры
	+ "☻" + ДанныеДляПечати.ТаблицаХлысты;
	
	Возврат Строка;
	
КонецФункции