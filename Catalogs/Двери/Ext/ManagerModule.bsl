Функция ПолучитьЦенуДвери (Дверь, ДатаРасчета) Экспорт
	
	//Если (ДатаРасчета-Дверь.Дата)/86400 < 30 Тогда
	//	Возврат Дверь.ЦенаДвери;
	//КонецЕсли;
	
КонецФункции

Функция ТекущаяСтоимостьНоменклатуры(СписокНоменклатуры, ДатаРасчета, Подразделение, ЭтоДверь = Истина) Экспорт
	
	ТЗ = СписокНоменклатуры.Выгрузить();
	Массив = ТЗ.ВыгрузитьКолонку("Номенклатура");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Розничная, 0) КАК Цена,
	|	СпрНоменклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, Регион = &Регион) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ЦеныНоменклатурыСрезПоследних.Номенклатура = СпрНоменклатура.Ссылка)
	|ГДЕ
	|	СпрНоменклатура.Ссылка В (&Номенклатура)";
	
	Запрос.УстановитьПараметр("Дата", ДатаРасчета);
	Запрос.УстановитьПараметр("Регион", Подразделение.Регион);
	Запрос.УстановитьПараметр("Номенклатура", Массив);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Для Каждого Стр Из ТЗ Цикл
			Если Выборка.Номенклатура = Стр.Номенклатура Тогда
				Стр.Цена = Выборка.Цена;
				Если ЭтоДверь Тогда
					Стр.Стоимость = Стр.Цена * Стр.КоличествоСОтходом;
				Иначе
					Стр.Стоимость = Стр.Цена * Стр.Количество;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла
	КонецЦикла;
	
	Возврат ТЗ;
	
КонецФункции

Функция ПолучитьСтруктуруПрофиля(Профиль, Подразделение) Экспорт
	
	СтруктураПрофиля = Новый Структура;
	СтруктураПрофиля.Вставить("СтрокаПрофиля", "");
	СтруктураПрофиля.Вставить("Вертикальный", "");
	СтруктураПрофиля.Вставить("РамкаВерхняя", "");
	СтруктураПрофиля.Вставить("РамкаНижняя", "");
	СтруктураПрофиля.Вставить("РамкаСредняяБезКрепления", "");
	СтруктураПрофиля.Вставить("РамкаСредняяСКреплением", "");
	СтруктураПрофиля.Вставить("ТрекНаПоворотнуюСистему", "");
	СтруктураПрофиля.Вставить("ТрекВерхний", "");
	СтруктураПрофиля.Вставить("ТрекНижний", "");
	СтруктураПрофиля.Вставить("ТрекОднополосныйВерхний", "");
	СтруктураПрофиля.Вставить("ТрекОднополосныйНижний", "");
	СтруктураПрофиля.Вставить("Цвет", Профиль.Цвет.КодЦвета);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	спрНоменклатура.Ссылка,
	|	спрНоменклатура.ВидПрофиля
	|ИЗ
	|	Справочник.Номенклатура КАК спрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураПодразделений КАК НоменклатураПодразделений
	|		ПО (НоменклатураПодразделений.Номенклатура = спрНоменклатура.Ссылка)
	|ГДЕ
	|	спрНоменклатура.Базовый
	|	И спрНоменклатура.Цвет = &Цвет
	|	И (спрНоменклатура.ВидПрофиля = ЗНАЧЕНИЕ(Перечисление.ВидыПрофилей.РамкаВерхняя)
	|			ИЛИ спрНоменклатура.ВидПрофиля = ЗНАЧЕНИЕ(Перечисление.ВидыПрофилей.РамкаСредняяБезКрепления)
	|			ИЛИ спрНоменклатура.ВидПрофиля = ЗНАЧЕНИЕ(Перечисление.ВидыПрофилей.РамкаСредняяСКреплением)
	|			ИЛИ спрНоменклатура.ВидПрофиля = ЗНАЧЕНИЕ(Перечисление.ВидыПрофилей.РамкаНижняя)
	|			ИЛИ спрНоменклатура.ВидПрофиля = ЗНАЧЕНИЕ(Перечисление.ВидыПрофилей.Вертикальный)
	|			ИЛИ спрНоменклатура.ВидПрофиля = ЗНАЧЕНИЕ(Перечисление.ВидыПрофилей.ТрекВерхний)
	|			ИЛИ спрНоменклатура.ВидПрофиля = ЗНАЧЕНИЕ(Перечисление.ВидыПрофилей.ТрекНаПоворотнуюСистему)
	|			ИЛИ спрНоменклатура.ВидПрофиля = ЗНАЧЕНИЕ(Перечисление.ВидыПрофилей.ТрекНижний)
	|			ИЛИ спрНоменклатура.ВидПрофиля = ЗНАЧЕНИЕ(Перечисление.ВидыПрофилей.ТрекОднополосныйВерхний)
	|			ИЛИ спрНоменклатура.ВидПрофиля = ЗНАЧЕНИЕ(Перечисление.ВидыПрофилей.ТрекОднополосныйНижний))
	|	И НоменклатураПодразделений.Подразделение = &Подразделение
	|	И НоменклатураПодразделений.Доступность";
	
	// { Васильев Александр Леонидович [05.10.2013]
	// да запихай в массив все виды профилей и проверку на вхождение
	// } Васильев Александр Леонидович [05.10.2013]
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Цвет", Профиль.Цвет);
	
	Массив = Новый Массив(8);
	Массив[0] = Профиль.ШиринаДетали;
	Массив[1] = Профиль.ГлубинаПаза;
	СтруктураПрофиля.Вставить("Вертикальный", Профиль);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ВидПрофиля = Перечисления.ВидыПрофилей.РамкаВерхняя Тогда
			Массив[2] = Выборка.Ссылка.ШиринаДетали;
			Массив[3] = Выборка.Ссылка.ГлубинаПаза;
			СтруктураПрофиля.Вставить("РамкаВерхняя", Выборка.Ссылка);
		ИначеЕсли Выборка.ВидПрофиля = Перечисления.ВидыПрофилей.РамкаНижняя Тогда
			Массив[4] = Выборка.Ссылка.ШиринаДетали;
			Массив[5] = Выборка.Ссылка.ГлубинаПаза;
			СтруктураПрофиля.Вставить("РамкаНижняя", Выборка.Ссылка);
		ИначеЕсли Выборка.ВидПрофиля = Перечисления.ВидыПрофилей.РамкаСредняяБезКрепления Тогда
			Массив[6] = Выборка.Ссылка.ШиринаДетали;
			Массив[7] = Выборка.Ссылка.ГлубинаПаза;
			СтруктураПрофиля.Вставить("РамкаСредняяБезКрепления", Выборка.Ссылка);
		ИначеЕсли Выборка.ВидПрофиля = Перечисления.ВидыПрофилей.РамкаСредняяСКреплением Тогда
			Массив[6] = ?(ЗначениеЗаполнено(Массив[6]), Массив[6], Выборка.Ссылка.ШиринаДетали);
			Массив[7] = ?(ЗначениеЗаполнено(Массив[7]), Массив[7], Выборка.Ссылка.ГлубинаПаза);
			СтруктураПрофиля.Вставить("РамкаСредняяСКреплением", Выборка.Ссылка);
		ИначеЕсли Выборка.ВидПрофиля = Перечисления.ВидыПрофилей.ТрекВерхний Тогда
			СтруктураПрофиля.Вставить("ТрекВерхний", Выборка.Ссылка);
		ИначеЕсли Выборка.ВидПрофиля = Перечисления.ВидыПрофилей.ТрекНаПоворотнуюСистему Тогда
			СтруктураПрофиля.Вставить("ТрекНаПоворотнуюСистему", Выборка.Ссылка);
		ИначеЕсли Выборка.ВидПрофиля = Перечисления.ВидыПрофилей.ТрекНижний Тогда
			СтруктураПрофиля.Вставить("ТрекНижний", Выборка.Ссылка);
		ИначеЕсли Выборка.ВидПрофиля = Перечисления.ВидыПрофилей.ТрекОднополосныйВерхний Тогда
			СтруктураПрофиля.Вставить("ТрекОднополосныйВерхний", Выборка.Ссылка);
		ИначеЕсли Выборка.ВидПрофиля = Перечисления.ВидыПрофилей.ТрекОднополосныйНижний Тогда
			СтруктураПрофиля.Вставить("ТрекОднополосныйНижний", Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	СтрокаПрофиля = "";	
	Ошибка = Ложь;
	Для Каждого Элемент Из Массив Цикл
		Если Элемент = Неопределено Тогда
			Ошибка = Истина;
		КонецЕсли;
		СтрокаПрофиля = СтрокаПрофиля + Строка(Элемент) + "_";
	КонецЦикла;
	
	Если Не Ошибка Тогда
		СтруктураПрофиля.Вставить("СтрокаПрофиля", СтрокаПрофиля);
	КонецЕсли;
	
	Возврат СтруктураПрофиля;
	
КонецФункции

Функция ДоступностьДвери(Дверь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Двери", Дверь);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокДверей.Ссылка
	|ИЗ
	|	Документ.Спецификация.СписокДверей КАК СпецификацияСписокДверей
	|ГДЕ
	|	СпецификацияСписокДверей.Двери = &Двери
	|	И СпецификацияСписокДверей.Ссылка.Проведен";
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции