
Функция ПолучитьСтруктуруПрофиля(Профиль, Подразделение) Экспорт
	
	СтруктураПрофиля = Новый Структура;
	СтруктураПрофиля.Вставить("СтрокаПрофиля", "");
	СтруктураПрофиля.Вставить("Вертикальный", "");
	СтруктураПрофиля.Вставить("РамкаВерхняя", "");
	СтруктураПрофиля.Вставить("РамкаНижняя", "");
	СтруктураПрофиля.Вставить("РамкаСредняяБезКрепления", "");
	СтруктураПрофиля.Вставить("РамкаСредняяСКреплением", "");
	СтруктураПрофиля.Вставить("ТрекНаПоворотнуюСистему", "");
	СтруктураПрофиля.Вставить("ТрекВерхний", "");
	СтруктураПрофиля.Вставить("ТрекНижний", "");
	СтруктураПрофиля.Вставить("ТрекОднополосныйВерхний", "");
	СтруктураПрофиля.Вставить("ТрекОднополосныйНижний", "");
	СтруктураПрофиля.Вставить("Цвет", Профиль.Цвет.КодЦвета);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Цвет", Профиль.Цвет);
	//Запрос.УстановитьПараметр("ВидПрофиляПустаяСсылка", Перечисления.ВидыПрофилей.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	спрНоменклатура.Ссылка,
	|	спрНоменклатура.ШиринаДетали,
	|	спрНоменклатура.ГлубинаПаза,
	|	спрНоменклатура.НоменклатурнаяГруппа
	|ИЗ
	|	Справочник.Номенклатура КАК спрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураПодразделений КАК НоменклатураПодразделений
	|		ПО (НоменклатураПодразделений.Номенклатура = спрНоменклатура.Ссылка)
	|ГДЕ
	|	спрНоменклатура.Базовый
	|	И спрНоменклатура.Цвет = &Цвет
	|	И НоменклатураПодразделений.Подразделение = &Подразделение
	|	И НоменклатураПодразделений.Доступность
	|	И (спрНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ВертикальныйПрофиль)
	|			ИЛИ спрНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.РамкаВерхняя)
	|			ИЛИ спрНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.РамкаНижняя)
	|			ИЛИ спрНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.РамкаСредняяБезКрепления)
	|			ИЛИ спрНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.РамкаСредняяСКреплением)
	|			ИЛИ спрНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ТрекНаПоворотнуюСистему)
	|			ИЛИ спрНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ТрекВерхний)
	|			ИЛИ спрНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ТрекНижний)
	|			ИЛИ спрНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ТрекОднополосныйВерхний)
	|			ИЛИ спрНоменклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ТрекОднополосныйНижний))";
	
	Массив = Новый Массив(8);
	Массив[0] = Профиль.ШиринаДетали;
	Массив[1] = Профиль.ГлубинаПаза;
	СтруктураПрофиля.Вертикальный = Профиль;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.РамкаВерхняя Тогда
			Массив[2] = Выборка.ШиринаДетали;
			Массив[3] = Выборка.ГлубинаПаза;
			СтруктураПрофиля.РамкаВерхняя = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.РамкаНижняя Тогда
			Массив[4] = Выборка.ШиринаДетали;
			Массив[5] = Выборка.ГлубинаПаза;
			СтруктураПрофиля.РамкаНижняя = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.РамкаСредняяБезКрепления Тогда
			Массив[6] = Выборка.ШиринаДетали;
			Массив[7] = Выборка.ГлубинаПаза;
			СтруктураПрофиля.РамкаСредняяБезКрепления = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.РамкаСредняяСКреплением Тогда
			Массив[6] = ?(ЗначениеЗаполнено(Массив[6]), Массив[6], Выборка.ШиринаДетали);
			Массив[7] = ?(ЗначениеЗаполнено(Массив[7]), Массив[7], Выборка.ГлубинаПаза);
			СтруктураПрофиля.РамкаСредняяСКреплением = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ТрекВерхний Тогда
			СтруктураПрофиля.ТрекВерхний = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ТрекНаПоворотнуюСистему Тогда
			СтруктураПрофиля.ТрекНаПоворотнуюСистему = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ТрекНижний Тогда
			СтруктураПрофиля.ТрекНижний = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ТрекОднополосныйВерхний Тогда
			СтруктураПрофиля.ТрекОднополосныйВерхний = Выборка.Ссылка;
		ИначеЕсли Выборка.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ТрекОднополосныйНижний Тогда
			СтруктураПрофиля.ТрекОднополосныйНижний = Выборка.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	СтрокаПрофиля = "";
	Ошибка = Ложь;
	Для Каждого Элемент Из Массив Цикл
		Если Элемент = Неопределено Тогда
			Ошибка = Истина;
		КонецЕсли;
		СтрокаПрофиля = СтрокаПрофиля + Строка(Элемент) + "_";
	КонецЦикла;
	
	Если НЕ Ошибка Тогда
		СтруктураПрофиля.СтрокаПрофиля = СтрокаПрофиля;
	КонецЕсли;
	
	Возврат СтруктураПрофиля;
	
КонецФункции

Функция ДоступностьДвери(Дверь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Статусы = Новый Массив;
	Статусы.Добавить(Перечисления.СтатусыСпецификации.Изготовлен);
	Статусы.Добавить(Перечисления.СтатусыСпецификации.Отгружен);
	Статусы.Добавить(Перечисления.СтатусыСпецификации.ПереданВЦех);
	Статусы.Добавить(Перечисления.СтатусыСпецификации.Установлен);
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Двери", Дверь);
	Запрос.УстановитьПараметр("Статусы", Статусы);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацияСписокДверей.Ссылка
	|ИЗ
	|	Документ.Спецификация.СписокДверей КАК СпецификацияСписокДверей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусСпецификации.СрезПоследних КАК СтатусСпецификацииСрезПоследних
	|		ПО СпецификацияСписокДверей.Ссылка = СтатусСпецификацииСрезПоследних.Спецификация
	|ГДЕ
	|	СпецификацияСписокДверей.Двери = &Двери
	|	И СтатусСпецификацииСрезПоследних.Статус В(&Статусы)";
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции

