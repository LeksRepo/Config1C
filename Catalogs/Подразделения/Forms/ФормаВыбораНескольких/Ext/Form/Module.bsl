
&НаКлиенте
Процедура Все(Комана)

	Для каждого ъ Из Список Цикл
	
		ъ.Пометка = Истина;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// ограничить подразделения только доступными пользователю
	
	//ДоступныВсеПодразделения = Ложь;
	//
	//РолиВсеПодразделения = Новый Массив;
	//РолиВсеПодразделения.Добавить("ГлавныйБухгалтер");
	//РолиВсеПодразделения.Добавить("ТолькоПросмотр");
	//РолиВсеПодразделения.Добавить("Администратор");
	//
	//Для каждого ъ Из РолиВсеПодразделения Цикл
	//	
	//	ДоступныВсеПодразделения = РольДоступна(ъ) ИЛИ ДоступныВсеПодразделения;
	//
	//КонецЦикла;
	//
	////Если ДоступныВсеПодразделения Тогда
	//	
	//	
	////Иначе
	////	Список = ЛексСервер.ПолучитьСписокДоступныхПодразделений(ОбщегоНазначения.ПолучитьПараметрСеанса("ТекущийПользователь"));
	////КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Подразделения.Ссылка
	|ИЗ
	|	Справочник.Подразделения КАК Подразделения
	|ГДЕ
	|	(НЕ Подразделения.ПометкаУдаления)";
	
	Список.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	// отметим подразделения которые были выделены
	Если Параметры.Свойство("ОригинальныйСписок") Тогда
		Для каждого ъ Из Параметры.ОригинальныйСписок Цикл
			
			ЗначениеПолногоСписка = Неопределено;
			ЗначениеПолногоСписка = Список.НайтиПоЗначению(ъ.Значение);
			
			Если ЗначениеПолногоСписка <> Неопределено Тогда
				ЗначениеПолногоСписка.Пометка = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если НЕ ВладелецФормы = Неопределено Тогда
		
		СписокВыбранных = Новый СписокЗначений;
		
		Для каждого ъ Из Список Цикл
			Если ъ.Пометка Тогда
				СписокВыбранных.Добавить(ъ.Значение);
			КонецЕсли;
		КонецЦикла;
		
		ОповеститьОВыборе(СписокВыбранных);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Розничные(Команда)
	
	РозничныеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РозничныеНаСервере()

	Для каждого ъ Из Список Цикл
		ъ.Пометка = ъ.Значение.ВидПодразделения = Перечисления.ВидыПодразделений.Розница;
	КонецЦикла;

КонецПроцедуры // РозничныеНаСервере()

&НаКлиенте
Процедура Производственные(Команда)
	
	ПроизводственныеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПроизводственныеНаСервере()

	Для каждого ъ Из Список Цикл
		ъ.Пометка = ъ.Значение.ВидПодразделения = Перечисления.ВидыПодразделений.Производство;
	КонецЦикла;

КонецПроцедуры // ПроизводственныеНаСервере()

&НаКлиенте
Процедура Инвертировать(Команда)
	
	Для каждого ъ Из Список Цикл
		ъ.Пометка = НЕ ъ.Пометка;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	Для каждого ъ Из Список Цикл
	
		ъ.Пометка = Ложь;
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура БезБрендДилеров(Команда)
	
	БезБрендДилеровНаСервере();
	
КонецПроцедуры

&НаСервере
Функция БезБрендДилеровНаСервере()
	
	Для каждого ъ Из Список Цикл
		ъ.Пометка = НЕ ъ.Значение.БрендДилер;
	КонецЦикла;
	
КонецФункции
