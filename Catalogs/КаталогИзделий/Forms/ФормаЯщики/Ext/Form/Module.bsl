
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция ПолучитьАдресХранилища()
	
	Возврат ПоместитьВоВременноеХранилище(Детали.Выгрузить());
	
КонецФункции

&НаСервере
Функция ОтборНоменклатурныхГрупп(СписокНоменклатурныхГрупп)
	
	СтруктураМассивов = Новый Структура;
	Для каждого НоменклатурнаяГруппа Из СписокНоменклатурныхГрупп Цикл
		ИмяГруппы = Справочники.НоменклатурныеГруппы.ПолучитьИмяПредопределенного(НоменклатурнаяГруппа.Значение);
		СтруктураМассивов.Вставить(ИмяГруппы, Новый Массив);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокНоменклатурныхГрупп", СписокНоменклатурныхГрупп);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.НоменклатурнаяГруппа В(&СписокНоменклатурныхГрупп)
	|	И СпрНоменклатура.Базовый
	|ИТОГИ ПО
	|	НоменклатурнаяГруппа";
	
	Результат = Запрос.Выполнить();
	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаИтоги.Следующий() Цикл
		
		Выборка = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ИмяГруппы = Справочники.НоменклатурныеГруппы.ПолучитьИмяПредопределенного(ВыборкаИтоги.НоменклатурнаяГруппа);
		
		Пока Выборка.Следующий() Цикл
			
			СтруктураМассивов[ИмяГруппы].Добавить(Выборка.Ссылка);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат СтруктураМассивов;
	
КонецФункции // ОтборНоменклатурныхГрупп()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	Детали.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресТаблицы));
	
	Если ЗначениеЗаполнено(Детали) Тогда
		Если Параметры.Свойство("Идентификатор")  Тогда
		Элементы.Детали.ТекущаяСтрока = Параметры.Идентификатор;
		КонецЕсли;
	Иначе
		Стр = Детали.Добавить();
	КонецЕсли;
	
	МассивПодразделений = Новый Массив;
	
	СписокНоменклатурныхГрупп = Новый СписокЗначений;
	
	СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ДВП);
	СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ЛДСП10);
	
	МассивыНоменклатурныхГрупп = ОтборНоменклатурныхГрупп(СписокНоменклатурныхГрупп);
	
	ДноМатериал = Новый Массив;
	Для каждого Элемент Из МассивыНоменклатурныхГрупп.ДВП Цикл
		ДноМатериал.Добавить(Элемент);
	КонецЦикла;
	Для каждого Элемент Из МассивыНоменклатурныхГрупп.ЛДСП10 Цикл
		ДноМатериал.Добавить(Элемент);
	КонецЦикла;	
	МассивыНоменклатурныхГрупп.Вставить("ДноМатериал", ДноМатериал);
	
	Элементы.ДеталиДноНоменклатура.СписокВыбора.ЗагрузитьЗначения(МассивыНоменклатурныхГрупп.ДноМатериал);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ДобавитьКДокументу(Команда)
	
	Если ПроверитьПередСохранением() Тогда
		
		Модифицированность = Ложь;
		ОповеститьОВыборе(ПолучитьАдресХранилища());
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

&НаКлиенте
Функция ПроверитьПередСохранением()
	
	Результат = Истина;	
	                                                               
	Возврат Результат;
	
КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ

&НаКлиенте
Процедура ДеталиПриАктивизацииСтроки(Элемент)
	
	ДеталиВидФасадаПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеталиВидФасадаПриИзменении(Элемент)
	
	Данные = Элементы.Детали.ТекущиеДанные;
	Если Данные <> Неопределено Тогда
		Данные.ВидФасада = ?(ЗначениеЗаполнено(Данные.ВидФасада), Данные.ВидФасада, "Нет");
		Значение = Истина;
		Если Данные.ВидФасада = "Нет" Тогда
			Значение = Ложь;
		КонецЕсли;	
	Элементы.ДеталиВысотаФасада.Доступность = Значение;
	Элементы.ДеталиШиринаФасада.Доступность = Значение;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("Формула, ИмяПеременной, Режим", Элемент.ТекстРедактирования, Элемент.Имя, "Каталог");
	Форма = ПолучитьФорму("ОбщаяФорма.РедакторФомул", ПараметрыФормы, Элемент);
	Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Форма.Открыть();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

