
&НаКлиенте
Процедура ОпределитьРабочийКаталог()
	
	Если НЕ ЗначениеЗаполнено(РабочийКаталог) Тогда
		РабочийКаталог = ФайловыеФункцииСлужебныйКлиент.ВыбратьПутьККаталогуДанныхПользователя();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьКартинку(Код)
	
	ОпределитьРабочийКаталог();
	
	АдресКартинки = "";
	
	Код = СокрЛП(Код);
	ПутьКИзображению = РабочийКаталог + "Изделие" + РасположениеКартинки + Код;
	ФайлНаДиске = Новый Файл(ПутьКИзображению);
	
	Если ФайлНаДиске.Существует() Тогда
		АдресКартинки = ПутьКИзображению;
	Иначе
		ПутьКИзображению = РабочийКаталог + "Изделие" + ПредопределенноеЗначение("Перечисление.РасположениеКартинки.Правая") + Код;
		ФайлНаДиске = Новый Файл(ПутьКИзображению);
		Если ФайлНаДиске.Существует() Тогда
			АдресКартинки  = ПутьКИзображению;
		Иначе
			ПутьКИзображению = РабочийКаталог + "Изделие" + ПредопределенноеЗначение("Перечисление.РасположениеКартинки.Левая") + Код;
			ФайлНаДиске = Новый Файл(ПутьКИзображению);
			Если ФайлНаДиске.Существует() Тогда
				АдресКартинки  = ПутьКИзображению;
			Иначе
				АдресКартинки  = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
					
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОпределитьРабочийКаталог();
					
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокДопИзделий.Параметры.УстановитьЗначениеПараметра("Базовый", Элементы.Список.ТекущиеДанные.Ссылка);
	
	ОтобразитьКартинку(Элементы.Список.ТекущиеДанные.Код);
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтборФормы = Параметры.Отбор;
	РасположениеКартинки = "";
	
	Если Параметры.Свойство("ВидИзделияПоКаталогу") И ТипЗнч(Параметры.ВидИзделияПоКаталогу) = Тип("СправочникСсылка.ВидыИзделийПоКаталогу") Тогда
		
		//Определение расположения картинки бокового элемента и смена ВидаИзделия у ПравыйБоковойЭлемент на ЛевыйБоковойЭлемент
		//т.к. в справочнике КаталогИзделий короба только ЛевыйБоковойЭлемент
		
		ВидИзделияПоКаталогу = Параметры.ВидИзделияПоКаталогу;
		
		Если ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент Тогда
			ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент;
			РасположениеКартинки = Строка(ПредопределенноеЗначение("Перечисление.РасположениеКартинки.Правая"));
		ИначеЕсли ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент Тогда
			РасположениеКартинки = Строка(ПредопределенноеЗначение("Перечисление.РасположениеКартинки.Левая"));
		КонецЕсли;
		
		//Отбор по виду изделия в иерархии
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидИзделияПоКаталогу");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
		ЭлементОтбора.ПравоеЗначение = ВидИзделияПоКаталогу;
		ЭлементОтбора.Использование = Истина;
		
	КонецЕсли;
	
	Если Параметры.Свойство("МассивИзделий") Тогда
		
		//Используется при выборе изделия из формы ШкафПоКаталогу, 
		//для уже имеющегося списка изделий, исключаем короба несовместимые с ними
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("МассивИзделий", Параметры.МассивИзделий);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НесовместимостьИзделийПоКаталогу.НесовместимостимоеИзделие КАК НесовместимостимоеИзделие
		|ИЗ
		|	РегистрСведений.НесовместимостьИзделийПоКаталогу КАК НесовместимостьИзделийПоКаталогу
		|ГДЕ
		|	НесовместимостьИзделийПоКаталогу.Изделие В(&МассивИзделий)";
		
		МассивНесовместимых = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НесовместимостимоеИзделие");
		
		//Исключаем конкретные короба
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
		ЭлементОтбора.ПравоеЗначение = МассивНесовместимых;
		ЭлементОтбора.Использование = Истина;
		
		//Исключаем группу коробов по виду изделия
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидИзделияПоКаталогу");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии;
		ЭлементОтбора.ПравоеЗначение = МассивНесовместимых;
		ЭлементОтбора.Использование = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ОповеститьОВыборе(Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДопИзделийПриАктивизацииСтроки(Элемент)
	
	Если Элементы.СписокДопИзделий.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтобразитьКартинку(Элементы.СписокДопИзделий.ТекущиеДанные.Код);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДопИзделийВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ОповеститьОВыборе(Значение);

КонецПроцедуры


