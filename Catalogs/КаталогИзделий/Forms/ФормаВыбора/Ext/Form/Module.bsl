&НаКлиенте
Перем СброситьВыделение;

&НаКлиенте
Процедура ОпределитьРабочийКаталог()
	
	Если НЕ ЗначениеЗаполнено(РабочийКаталог) Тогда
		РабочийКаталог = ФайловыеФункцииСлужебныйКлиент.ВыбратьПутьККаталогуДанныхПользователя();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьКартинку(Код)
	
	ОпределитьРабочийКаталог();
	
	АдресКартинки = "";
	
	Код = СокрЛП(Код);
	ПутьКИзображению = РабочийКаталог + РасположениеКартинки + Код;
	ФайлНаДиске = Новый Файл(ПутьКИзображению);
	
	Если ФайлНаДиске.Существует() Тогда
		АдресКартинки = ПутьКИзображению;
	Иначе
		ПутьКИзображению = РабочийКаталог + ПредопределенноеЗначение("Перечисление.ВидыПрисоединенныхФайлов.КартинкаПравая") + Код;
		ФайлНаДиске = Новый Файл(ПутьКИзображению);
		Если ФайлНаДиске.Существует() Тогда
			АдресКартинки  = ПутьКИзображению;
		Иначе
			ПутьКИзображению = РабочийКаталог + ПредопределенноеЗначение("Перечисление.ВидыПрисоединенныхФайлов.КартинкаЛевая") + Код;
			ФайлНаДиске = Новый Файл(ПутьКИзображению);
			Если ФайлНаДиске.Существует() Тогда
				АдресКартинки  = ПутьКИзображению;
			Иначе
				ПутьКИзображению = РабочийКаталог + ПредопределенноеЗначение("Перечисление.ВидыПрисоединенныхФайлов.ОсновнаяКартинка") + Код;
				ФайлНаДиске = Новый Файл(ПутьКИзображению);
				Если ФайлНаДиске.Существует() Тогда
					АдресКартинки  = ПутьКИзображению;
				Иначе
					АдресКартинки  = "";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СброситьВыделение = Ложь;
	ОпределитьРабочийКаталог();
					
КонецПроцедуры

&НаСервере
Функция СкопироватьПараметрыФормы(Параметры)

	Пар = Новый Структура();

	Если Параметры.Свойство("Изделие") И ЗначениеЗаполнено(Параметры.Изделие) Тогда
		
		Пар.Вставить("Изделие", Параметры.Изделие);
	
	КонецЕсли;
	
	Если Параметры.Свойство("Активный") Тогда
		
		Пар.Вставить("Активный", Параметры.Активный);
	
	КонецЕсли;
	
	Если Параметры.Свойство("АктивныйДляДилера") Тогда
		
		Пар.Вставить("АктивныйДляДилера", Параметры.АктивныйДляДилера);
	
	КонецЕсли;
	
	Если Параметры.Свойство("Корпусный") Тогда
		
		Пар.Вставить("Корпусный", Параметры.Корпусный);
	
	КонецЕсли;
	
	Возврат Пар;

КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	РасположениеКартинки = Перечисления.ВидыПрисоединенныхФайлов.ОсновнаяКартинка;
	
	ПараметрыФормы = СкопироватьПараметрыФормы(Параметры);
	
	
	//Если открыта из формы шкафов
	Если Параметры.Свойство("ВидИзделияПоКаталогу") И ТипЗнч(Параметры.ВидИзделияПоКаталогу) = Тип("СправочникСсылка.ВидыИзделийПоКаталогу") Тогда
		
		ВидИзделияПоКаталогу = Параметры.ВидИзделияПоКаталогу;
		Элементы.ГруппаОтбора.Видимость = ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ОсновнойЭлемент;
		
		Если Параметры.Свойство("МассивИзделий") Тогда
			
			МассивИзделий = Параметры.МассивИзделий;                         
						
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("МассивИзделий", МассивИзделий);
			Запрос.УстановитьПараметр("ВидИзделия", ВидИзделияПоКаталогу);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА Список.НесовместимостимоеИзделие = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент)
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент)
			|		КОГДА Список.НесовместимостимоеИзделие = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.БоковаяПанельСправа)
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.БоковаяПанельСлева)
			|		КОГДА Список.НесовместимостимоеИзделие = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.БоковаяПанельЧерезОтбойнуюПланкуСправа)
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.БоковаяПанельЧерезОтбойнуюПланкуСлева)
			|		КОГДА Список.НесовместимостимоеИзделие = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.КоробБоковойСправа)
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.КоробБоковойСлева)
			|		КОГДА Список.НесовместимостимоеИзделие = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ОтбойнаяПланкаСправа)
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ОтбойнаяПланкаСлева)
			|		КОГДА Список.НесовместимостимоеИзделие = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ФальшПанельСправа)
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ФальшПанельСлева)
			|		ИНАЧЕ Список.НесовместимостимоеИзделие
			|	КОНЕЦ КАК НесовместимостимоеИзделие
			|ИЗ
			|	РегистрСведений.НесовместимостьИзделийПоКаталогу КАК Список
			|ГДЕ
			|	Список.Изделие В(&МассивИзделий)
			|	И ВЫБОР
			|			КОГДА Список.НесовместимостимоеИзделие ССЫЛКА Справочник.ВидыИзделийПоКаталогу
			|				ТОГДА Список.НесовместимостимоеИзделие В ИЕРАРХИИ (&ВидИзделия)
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|		Список.Изделие
			|ИЗ
			|	РегистрСведений.НесовместимостьИзделийПоКаталогу КАК Список
			|ГДЕ
			|	Список.НесовместимостимоеИзделие В(&МассивИзделий)";
			
			МассивНесовместимых = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НесовместимостимоеИзделие");
			ПараметрыФормы.Вставить("МассивНесовместимых",МассивНесовместимых);
							
		КонецЕсли;
		
		Если ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ПравыйБоковойЭлемент Тогда
			ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент;
			РасположениеКартинки = Перечисления.ВидыПрисоединенныхФайлов.КартинкаПравая;
		ИначеЕсли ВидИзделияПоКаталогу = Справочники.ВидыИзделийПоКаталогу.ЛевыйБоковойЭлемент Тогда
			РасположениеКартинки = Перечисления.ВидыПрисоединенныхФайлов.КартинкаЛевая;
		КонецЕсли;

		ПараметрыФормы.Вставить("ВидИзделияПоКаталогу",ВидИзделияПоКаталогу);
		
	КонецЕсли;
	
	ЗаполнитьДеревоИзделий(ПараметрыФормы, Неопределено);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоИзделий(Параметры, МассивПоиска)
	
	Элем = ДеревоИзделий.ПолучитьЭлементы();
	Элем.Очистить();
	
	Элем = ДеревоДопИзделий.ПолучитьЭлементы();
	Элем.Очистить();
	
	Если МассивПоиска = Неопределено Тогда
		МассивПоиска = NULL;
	КонецЕсли;
	
	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура();	
	КонецЕсли;
	
	Если Параметры.Свойство("Изделие") И ЗначениеЗаполнено(Параметры.Изделие) Тогда
		
		ДоступныеВидыИзделий = Новый Массив;
		Изделие = Параметры.Изделие;
		
		Если Изделие.ДоступныеВидыИзделий.Количество() > 0 Тогда

			Для каждого Знч Из  Изделие.ДоступныеВидыИзделий Цикл
				ДоступныеВидыИзделий.Добавить(Знч.Вид);
			КонецЦикла;
				
		КонецЕсли;
	Иначе
		ДоступныеВидыИзделий = NULL;	
	КонецЕсли;
	
	МассивНесовместимых = ?(Параметры.Свойство("МассивНесовместимых"),Параметры.МассивНесовместимых, Новый Массив());
	ВидИзделияПоКаталогу = ?(Параметры.Свойство("ВидИзделияПоКаталогу"),Параметры.ВидИзделияПоКаталогу, NULL);
	Активный = ?(Параметры.Свойство("Активный"),Параметры.Активный, NULL);
	АктивныйДляДилера = ?(Параметры.Свойство("АктивныйДляДилера"),Параметры.АктивныйДляДилера, NULL);
	Корпусный = ?(Параметры.Свойство("Корпусный"),Параметры.Корпусный, NULL);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидИзделияПоКаталогу", ВидИзделияПоКаталогу);
	Запрос.УстановитьПараметр("МассивНесовместимых", МассивНесовместимых);
	Запрос.УстановитьПараметр("ДоступныеВидыИзделий", ДоступныеВидыИзделий);
	Запрос.УстановитьПараметр("Активный", Активный);
	Запрос.УстановитьПараметр("АктивныйДляДилера", АктивныйДляДилера);
	Запрос.УстановитьПараметр("Корпусный", Корпусный);
	Запрос.УстановитьПараметр("МассивПоиска", МассивПоиска);
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Каталог.Наименование КАК Родитель1Наименование,
	|	Каталог.Родитель.Наименование КАК Родитель2Наименование,
	|	Каталог.Родитель.Родитель.Наименование КАК Родитель3Наименование,
	|	Каталог.Ссылка КАК Родитель1,
	|	Каталог.Родитель КАК Родитель2,
	|	Каталог.Родитель.Родитель КАК Родитель3,
	|	Каталог.Базовый,
	|	ВЫБОР
	|		КОГДА Несовместимые.Изделие ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Несовместимость
	|ИЗ
	|	Справочник.КаталогИзделий КАК Каталог
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Список.Ссылка КАК Изделие
	|		ИЗ
	|			Справочник.КаталогИзделий КАК Список
	|		ГДЕ
	|			(Список.Ссылка В (&МассивНесовместимых)
	|					ИЛИ Список.ВидИзделияПоКаталогу В ИЕРАРХИИ (&МассивНесовместимых))) КАК Несовместимые
	|		ПО Каталог.Ссылка = Несовместимые.Изделие
	|ГДЕ
	|	НЕ Каталог.Предопределенный
	|	И НЕ Каталог.ПометкаУдаления
	|	И ВЫБОР
	|			КОГДА &ДоступныеВидыИзделий ЕСТЬ NULL 
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Каталог.ВидИзделияПоКаталогу В ИЕРАРХИИ (&ДоступныеВидыИзделий)
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &МассивПоиска ЕСТЬ NULL 
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Каталог.Ссылка В (&МассивПоиска)
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &Активный ЕСТЬ NULL 
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Каталог.Активный = &Активный
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &АктивныйДляДилера ЕСТЬ NULL 
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Каталог.АктивныйДляДилера = &АктивныйДляДилера
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &Корпусный ЕСТЬ NULL 
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Каталог.Корпусный = &Корпусный
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ВидИзделияПоКаталогу ЕСТЬ NULL 
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Каталог.ВидИзделияПоКаталогу В ИЕРАРХИИ (&ВидИзделияПоКаталогу)
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	Каталог.Ссылка,
	|	Каталог.Родитель,
	|	Каталог.Родитель.Родитель,
	|	Каталог.Наименование,
	|	Каталог.Родитель.Наименование,
	|	Каталог.Родитель.Родитель.Наименование,
	|	Каталог.Базовый,
	|	ВЫБОР
	|		КОГДА Несовместимые.Изделие ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Родитель3Наименование,
	|	Родитель2Наименование,
	|	Родитель1Наименование";	
	
	Данные = Запрос.Выполнить().Выгрузить();
	
	ТаблицаДопИзделий.Очистить();
	Сч = 0;
	Кол = Данные.Количество();
	
	Пока Сч < Кол Цикл
		
		Строка = Данные[Сч];
	
		Если НЕ (Строка.Базовый = Справочники.КаталогИзделий.ПустаяСсылка()) 
		   И (Строка.Родитель1.СтатусИзделияПоКаталогу = Перечисления.СтатусыИзделийПоКаталогу.Активен) Тогда
			
			Эл = ТаблицаДопИзделий.Добавить();
			Эл.Ссылка = Строка.Родитель1;
			Эл.Базовый = Строка.Базовый;
			Эл.Наименование = Строка.Родитель1Наименование;
			Эл.Код = Эл.Ссылка.Код;
			Эл.Несовместимость = Строка.Несовместимость;
			
			Данные.Удалить(Строка);
			Кол = Кол - 1;
		Иначе
			Сч = Сч + 1;
		КонецЕсли;
		
	КонецЦикла;					
	
	Если Данные.Количество() > 0 Тогда
		
		Эл = ДеревоИзделий;
		
		ОбходДереваИзделий(Данные, Эл, Неопределено, 3);
		ОбходДереваИзделий(Данные, Эл, Неопределено, 2);
		ОбходДереваИзделий(Данные, Эл, Неопределено, 1);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбходДереваИзделий(Данные, Ветка, Родитель, Уровень)
	
	Если Уровень > 0 Тогда
		
		Сч = 0;
		Кол = Данные.Количество();
		
		Пока Сч < Кол Цикл
			
			Строка = Данные[Сч];
			
			ТекущиеДанные = Строка["Родитель"+Уровень];
			
			Если ЗначениеЗаполнено(Текущиеданные) И ((НЕ ЗначениеЗаполнено(Родитель)) ИЛИ (Строка["Родитель"+(Уровень+1)]=Родитель)) Тогда
	
					Эл = Ветка.ПолучитьЭлементы().Добавить();
					Эл.Ссылка = Строка["Родитель"+Уровень];
					Эл.Наименование = Строка["Родитель"+Уровень+"Наименование"];
					Эл.Код = Эл.Ссылка.Код;
					Эл.ЭтоГруппа = Эл.Ссылка.ЭтоГруппа;
					
					Если Уровень = 1 Тогда
						
						Эл.Несовместимость = Строка.Несовместимость;
						
						Данные.Удалить(Строка);
						Сч = Сч - 1;
						Кол = Кол - 1;
					Иначе	
					    Эл.Несовместимость = Ложь;
					КонецЕсли;
					
					Если (Уровень - 1) > 0 Тогда
						ОбходДереваИзделий(Данные, Эл, ТекущиеДанные, Уровень-1);
						Кол = Данные.Количество();
					КонецЕсли;
				
			КонецЕсли;
				
			Сч = Сч + 1;	
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	
	ОчиститьФильтр();
	ПоискНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПоискНаСервере()
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЕстьПолки", Полки);	
	Запрос.УстановитьПараметр("ВидОсновногоЭлемента", ВидОсновногоЭлемента);
	Запрос.УстановитьПараметр("ЕстьГладильнаяДоска", ГладильнаяДоска);
	Запрос.УстановитьПараметр("КоличествоДверей", КоличествоДверей);
	Запрос.УстановитьПараметр("ЕстьКорзина", Корзина);
	Запрос.УстановитьПараметр("ЕстьПантограф", Пантограф);
	Запрос.УстановитьПараметр("ЕстьПылесосЧемодан", ПылесосЧемодан);
	Запрос.УстановитьПараметр("ЕстьСотоваяПолка", СотоваяПолка);
	Запрос.УстановитьПараметр("ЕстьТорцевоеВешало", ТорцевоеВешало);
	Запрос.УстановитьПараметр("ЕстьШтанга", Штанга);
	Запрос.УстановитьПараметр("ЕстьЯщики", Ящики);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КаталогИзделийСписокЯщики.Ссылка,
	|	КОЛИЧЕСТВО(КаталогИзделийСписокЯщики.ИмяЯщика) КАК КоличествоЯщиков
	|ПОМЕСТИТЬ ВТ_Ящики
	|ИЗ
	|	Справочник.КаталогИзделий.СписокЯщики КАК КаталогИзделийСписокЯщики
	|
	|СГРУППИРОВАТЬ ПО
	|	КаталогИзделийСписокЯщики.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КаталогИзделий.Ссылка,
	|	ВТ_Ящики.КоличествоЯщиков
	|ИЗ
	|	Справочник.КаталогИзделий КАК КаталогИзделий
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ящики КАК ВТ_Ящики
	|		ПО (ВТ_Ящики.Ссылка = КаталогИзделий.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КаталогИзделий.СписокХарактеристик КАК КаталогИзделийСписокХарактеристик
	|		ПО КаталогИзделий.Ссылка = КаталогИзделийСписокХарактеристик.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ЕстьЯщики
	|				ТОГДА ВТ_Ящики.КоличествоЯщиков > 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ЕстьПолки
	|				ТОГДА КаталогИзделийСписокХарактеристик.Характеристика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиШкафовКупе.Полки)
	|						И КаталогИзделийСписокХарактеристик.ЗначениеХарактеристики = ИСТИНА
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ	
	|	И ВЫБОР
	|			КОГДА &ЕстьГладильнаяДоска
	|				ТОГДА КаталогИзделийСписокХарактеристик.Характеристика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиШкафовКупе.ГладильнаяДоска)
	|						И КаталогИзделийСписокХарактеристик.ЗначениеХарактеристики = ИСТИНА
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ	
	|	И ВЫБОР
	|			КОГДА &ЕстьКорзина
	|				ТОГДА КаталогИзделийСписокХарактеристик.Характеристика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиШкафовКупе.Корзина)
	|						И КаталогИзделийСписокХарактеристик.ЗначениеХарактеристики = ИСТИНА
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ	
	|	И ВЫБОР
	|			КОГДА &ЕстьПантограф
	|				ТОГДА КаталогИзделийСписокХарактеристик.Характеристика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиШкафовКупе.Пантограф)
	|						И КаталогИзделийСписокХарактеристик.ЗначениеХарактеристики = ИСТИНА
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ	
	|	И ВЫБОР
	|			КОГДА &ЕстьПылесосЧемодан
	|				ТОГДА КаталогИзделийСписокХарактеристик.Характеристика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиШкафовКупе.ПылесосЧемодан)
	|						И КаталогИзделийСписокХарактеристик.ЗначениеХарактеристики = ИСТИНА
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ	
	|	И ВЫБОР
	|			КОГДА &ЕстьСотоваяПолка
	|				ТОГДА КаталогИзделийСписокХарактеристик.Характеристика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиШкафовКупе.СотоваяПолка)
	|						И КаталогИзделийСписокХарактеристик.ЗначениеХарактеристики = ИСТИНА
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ	
	|	И ВЫБОР
	|			КОГДА &ЕстьТорцевоеВешало
	|				ТОГДА КаталогИзделийСписокХарактеристик.Характеристика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиШкафовКупе.ТорцевоеВешало)
	|						И КаталогИзделийСписокХарактеристик.ЗначениеХарактеристики = ИСТИНА
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ	
	|	И ВЫБОР
	|			КОГДА &ЕстьШтанга
	|				ТОГДА КаталогИзделийСписокХарактеристик.Характеристика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиШкафовКупе.Штанга)
	|						И КаталогИзделийСписокХарактеристик.ЗначениеХарактеристики = ИСТИНА
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ	
	|	И ВЫБОР
	|			КОГДА &КоличествоДверей > 0
	|				ТОГДА КаталогИзделийСписокХарактеристик.Характеристика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиШкафовКупе.КоличествоДверей)
	|						И КаталогИзделийСписокХарактеристик.ЗначениеХарактеристики = &КоличествоДверей
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ВидОсновногоЭлемента <> Значение(Перечисление.ВидыШкафовКупе.ПустаяСсылка)
	|				ТОГДА КаталогИзделийСписокХарактеристик.Характеристика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ХарактеристикиШкафовКупе.ВидОсновногоЭлемента)
	|						И КаталогИзделийСписокХарактеристик.ЗначениеХарактеристики = &ВидОсновногоЭлемента
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И КаталогИзделий.ВидИзделияПоКаталогу = ЗНАЧЕНИЕ(Справочник.ВидыИзделийПоКаталогу.ОсновнойЭлемент)";
	
	МассивИзделий = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");    
	
	ЗаполнитьДеревоИзделий(ПараметрыФормы, МассивИзделий);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоиск(Команда)
	
	Полки = Ложь;	
	ВидОсновногоЭлемента = ПредопределенноеЗначение("Перечисление.ВидыШкафовКупе.ПустаяСсылка");
	ГладильнаяДоска = Ложь;
	КоличествоДверей = 0;
	Корзина = Ложь;
	Пантограф = Ложь;
	ПылесосЧемодан = Ложь;
	СотоваяПолка = Ложь;
	ТорцевоеВешало = Ложь;
	Штанга = Ложь;
	Ящики = Ложь;
	
	ОчиститьФильтр();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьФильтр()
	
	ЗаполнитьДеревоИзделий(ПараметрыФормы, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоИзделийПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ТекущиеДанные.ЭтоГруппа Тогда
		ЗаполнитьДеревоДопИзделий(ТекущиеДанные.Ссылка);
	Иначе
		Элем = ДеревоДопИзделий.ПолучитьЭлементы();
		Элем.Очистить();	
	КонецЕсли;
	
	Элементы.ДеревоДопИзделий.Доступность = НЕ ТекущиеДанные.ЭтоГруппа;
	
	Код = ?(ТекущиеДанные.ЭтоГруппа,"",ТекущиеДанные.Код);	
	ОтобразитьКартинку(Код);
	
	СброситьВыделение = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДопИзделийПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.ТекущийЭлемент = Элементы.ДеревоДопИзделий Тогда	
	     ОтобразитьКартинку(Элемент.ТекущиеДанные.Код);
		 СброситьВыделение = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДеревоДопИзделий(БазовоеИзделие)
	
	Элем = ДеревоДопИзделий.ПолучитьЭлементы();
	Элем.Очистить();
	
	Если ТаблицаДопИзделий.Количество() > 0 Тогда
		
		Для Каждого Строка ИЗ ТаблицаДопИзделий Цикл
			
			Если Строка.Базовый = БазовоеИзделие Тогда
			
				Эл = ДеревоДопИзделий.ПолучитьЭлементы().Добавить();
				Эл.Ссылка = Строка.Ссылка;
				Эл.Наименование = Строка.Наименование;
				Эл.Код = Строка.Код;
			
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоИзделийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные.ЭтоГруппа Тогда
	
		Если ТекущиеДанные.Несовместимость Тогда 
			СтандартнаяОбработка = Ложь;
			Предупреждение("Изделие несовместимо!");
		Иначе
			ОповеститьОВыборе(ТекущиеДанные.Ссылка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДопИзделийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные.Несовместимость Тогда 
		СтандартнаяОбработка = Ложь;
		Предупреждение("Изделие несовместимо!");
	Иначе
		ОповеститьОВыборе(ТекущиеДанные.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоДопИзделийПриАктивизацииЯчейки(Элемент)
	Если СброситьВыделение Тогда
		СброситьВыделение = Ложь;
		ЭтаФорма.ТекущийЭлемент = Элементы.ДеревоИзделий;
		Элементы.ДеревоДопИзделий.ТекущаяСтрока = Неопределено;
		Элементы.ДеревоДопИзделий.ВыделенныеСтроки.Очистить();
	КонецЕсли;
КонецПроцедуры
