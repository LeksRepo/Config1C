&НаКлиенте
Процедура СформироватьОтчет(Команда) Экспорт

	ТабличныйДокумент = СформироватьТабличныйДокумент();
	
КонецПроцедуры

&НаСервере
Функция СформироватьТабличныйДокумент()
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТабДок.Защита=Истина;
	ТабДок.ТолькоПросмотр=Истина;
	
	Макет = Отчеты.АктивПодразделения.ПолучитьМакет("МакетАктивОбороты");
	
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	ОблПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ОблШапка.Параметры.ПредставлениеПериода = Формат(Отчет.КонецПериода, "ДЛФ=DD");
	ОблШапка.Параметры.Подразделение = Отчет.СписокПодразделений;
	ТабДок.Вывести(ОблШапка);

	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Отчет.СписокПодразделений);
	Запрос.УстановитьПараметр("НачалоПериода", Отчет.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Отчет.КонецПериода));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправленческийОстаткиИОбороты.Счет КАК Счет,
	|	УправленческийОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	УправленческийОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	|	УправленческийОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
	|	УправленческийОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , , , Подразделение В (&Подразделение)) КАК УправленческийОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	УправленческийОстаткиИОбороты.Счет,
	|	УправленческийОстаткиИОбороты.СуммаНачальныйОстаток,
	|	УправленческийОстаткиИОбороты.СуммаКонечныйОстаток,
	|	УправленческийОстаткиИОбороты.СуммаОборотДт,
	|	УправленческийОстаткиИОбороты.СуммаОборотКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	Счет
	|ИТОГИ
	|	СУММА(СуммаНачальныйОстаток),
	|	СУММА(СуммаКонечныйОстаток),
	|	СУММА(СуммаОборотДт),
	|	СУММА(СуммаОборотКт)
	|ПО
	|	Счет ТОЛЬКО ИЕРАРХИЯ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Счет");	
	
	ТабДок.НачатьАвтоГруппировкуСтрок();
	
	ОбходИерархии(Выборка, ТабДок, ОблСтрока, 0);
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();  
	//ТабДок.ПоказатьУровеньГруппировокСтрок(0); 
	 
	Возврат ТабДок;	
	
КонецФункции

&НаСервере
Процедура ОбходИерархии(Выборка, ТабДок, Область, Знач Уровень)
	
	Пока Выборка.Следующий() Цикл
		   
			   Область.Параметры.Счет = Выборка.Счет.Наименование;
			   Область.Параметры.НачальныйОстаток = Выборка.СуммаНачальныйОстаток;
			   Область.Параметры.Приход = Выборка.СуммаОборотДт;
			   Область.Параметры.Расход = Выборка.СуммаОборотКт;
			   Область.Параметры.КонечныйОстаток = Выборка.СуммаКонечныйОстаток;
			   
			   сс="";
			   ф=0;
			   Пока ф < Уровень Цикл
				   Сообщить("_"+ф+":"+Уровень);
				   сс=сс+"__";
				   ф=ф+1;
			   КонецЦикла; 
			   Сообщить(сс+" "+Уровень+": "+Область.Параметры.Счет+": "+Выборка.ТипЗаписи());
			   
			   ТабДок.Вывести(Область,Уровень,Выборка.Счет.Наименование,Ложь);

			   Если НЕ(Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись) Тогда 
				   
				   Выборка2=Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				   ОбходИерархии(Выборка2, ТабДок, Область, Уровень+1);

			   КонецЕсли;
			   		   
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьПодразделения(Команда)
	
	ПараметрыПодбора = Новый Структура("ОригинальныйСписок", Отчет.СписокПодразделений);
	ОткрытьФорму("Справочник.Подразделения.Форма.ФормаВыбораНескольких", ПараметрыПодбора, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		Отчет.СписокПодразделений.Очистить();
		Для каждого Знч Из ВыбранноеЗначение Цикл
			Отчет.СписокПодразделений.Добавить(Знч.Значение);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Отчет.СписокПодразделений) Тогда
		Если НЕ ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
			Отчет.СписокПодразделений.Добавить(ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо.Подразделение);
		КонецЕсли;  
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Отчет.НачалоПериода)
		или НЕ ЗначениеЗаполнено(Отчет.КонецПериода) Тогда
		Отчет.НачалоПериода = НачалоМесяца(ТекущаяДата());
		Отчет.КонецПериода = КонецМесяца(ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНазад(Команда)
	
	УстановитьМесяц(-1);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМесяц(КоличествоМесяцев)

	Отчет.НачалоПериода = ДобавитьМесяц(Отчет.НачалоПериода, КоличествоМесяцев);
	Отчет.КонецПериода = КонецМесяца(Отчет.НачалоПериода);

КонецПроцедуры // УстановитьМесяц()

&НаКлиенте
Процедура МесяцВперед(Команда)
	
	УстановитьМесяц(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТабличныйДокумент = СформироватьТабличныйДокумент();
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыРасшифровкиКод = Новый Массив;
	ПараметрыРасшифровкиЗначение = Новый Массив;
	
	
	ПараметрыРасшифровки = Новый Структура();
	ПараметрыРасшифровки.Вставить("Счет",Расшифровка);
	ПараметрыРасшифровки.Вставить("Подразделение",Отчет.СписокПодразделений);
	ПараметрыРасшифровки.Вставить("НачалоПериода",Отчет.НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",КонецДня(Отчет.КонецПериода));

	
	ОткрытьФорму("Отчет.АктивПодразделения.Форма.ФормаРасшифровки", ПараметрыРасшифровки, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеРасшифровки(Счет,Подразделение,НачалоПериода,КонецПериода)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправленческийОстаткиИОбороты.СуммаНачальныйОстаток,
	|	УправленческийОстаткиИОбороты.СуммаКонечныйОстаток,
	|	УправленческийОстаткиИОбороты.СуммаОборотДт,
	|	УправленческийОстаткиИОбороты.СуммаОборотКт,
	|	УправленческийОстаткиИОбороты.Субконто1 КАК Субконто1,
	|	УправленческийОстаткиИОбороты.Субконто2 КАК Субконто2
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , , , Подразделение В (&Подразделение)) КАК УправленческийОстаткиИОбороты
	|ГДЕ
	|	УправленческийОстаткиИОбороты.Счет = &Счет
	|
	|СГРУППИРОВАТЬ ПО
	|	УправленческийОстаткиИОбороты.Субконто1,
	|	УправленческийОстаткиИОбороты.Субконто2,
	|	УправленческийОстаткиИОбороты.СуммаНачальныйОстаток,
	|	УправленческийОстаткиИОбороты.СуммаКонечныйОстаток,
	|	УправленческийОстаткиИОбороты.СуммаОборотДт,
	|	УправленческийОстаткиИОбороты.СуммаОборотКт";
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока Выборка.Следующий() Цикл
	КонецЦикла;
	
КонецПроцедуры
	


