Перем ТабДок,ОблСтрока,ОблСтрока2,ОблСтрока3;
Перем ФинПрибыль;
Перем ПриходИтог,РасходИтог,ОстатокДебетНачИтог,ОстатокКредитНачИтог,ОстатокДебетКонИтог,ОстатокКредитКонИтог;
Перем СуммаНач,СуммаКон,СуммаДт,СуммаКт;

&НаКлиенте
Процедура СформироватьОтчет(Команда) Экспорт
	
	ТабличныйДокумент = СформироватьТабличныйДокумент();
	
КонецПроцедуры

&НаСервере
Функция СформироватьТабличныйДокумент()
	
	Если РазвернутыеОстатки Тогда	
		ТабличныйДокумент = СформироватьТДРазвернутый();	
	Иначе		
		ТабличныйДокумент = СформироватьТДСвернутый();	
	КонецЕсли;
	
	Возврат ТабличныйДокумент; 
	
КонецФункции

&НаСервере
Функция СформироватьТДСвернутый()
	
	СуммаНач=0;
	СуммаКон=0;
	СуммаДт=0;
	СуммаКт=0;
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТабДок.Защита=Истина;
	
	Макет = Отчеты.АктивПодразделения.ПолучитьМакет("МакетАктивОборотыСвернутый");
	
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	ОблСтрока2 = Макет.ПолучитьОбласть("Строка2");
	ОблСтрока3 = Макет.ПолучитьОбласть("Строка3");
	ОблПодвал = Макет.ПолучитьОбласть("Подвал");
	ОблПодвалПрибыль = Макет.ПолучитьОбласть("ПодвалПрибыль");
	ОблШапкаЗабалансовые = Макет.ПолучитьОбласть("ШапкаЗабалансовые");
	ОблШапкаВзаиморасчеты = Макет.ПолучитьОбласть("ШапкаВзаиморасчеты");
	
	ОблШапка.Параметры.ПредставлениеПериода = Формат(Отчет.НачалоПериода, "ДЛФ=DD")+" - "+Формат(Отчет.КонецПериода, "ДЛФ=DD");
	ОблШапка.Параметры.Подразделение = Отчет.СписокПодразделений;
	ТабДок.Вывести(ОблШапка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Отчет.СписокПодразделений);
	Запрос.УстановитьПараметр("НачалоПериода", Отчет.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Отчет.КонецПериода));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОстаткиИОбороты.Счет КАК Счет,
	|	ОстаткиИОбороты.Счет.Код КАК Код,
	|	ОстаткиИОбороты.Счет.Порядок КАК Порядок,
	|	ОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	ОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	|	ОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
	|	ОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.ОстаткиИОбороты(&НачалоПериода, &КонецПериода,,,,, Подразделение В (&Подразделение)) КАК ОстаткиИОбороты
	|ГДЕ
	|	НЕ ОстаткиИОбороты.Счет.Забалансовый
	|	ИЛИ (ОстаткиИОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.СкладГотовойПродукции)
	|		 ИЛИ ОстаткиИОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ИзделияУКлиента))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|ИТОГИ
	|	СУММА(СуммаНачальныйОстаток),
	|	СУММА(СуммаКонечныйОстаток),
	|	СУММА(СуммаОборотДт),
	|	СУММА(СуммаОборотКт)
	|ПО
	|	Счет ИЕРАРХИЯ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТабДок.НачатьАвтоГруппировкуСтрок();
	
	ОбходИерархииСвернутый(Выборка, Ложь);
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ОблПодвал.Параметры.НачальныйОстаток = Формат(СуммаНач, "ЧДЦ=");
	ОблПодвал.Параметры.Приход = Формат(СуммаДт, "ЧДЦ=");
	ОблПодвал.Параметры.Расход = Формат(СуммаКт, "ЧДЦ=");
	ОблПодвал.Параметры.КонечныйОстаток = Формат(СуммаКон, "ЧДЦ=");
	ТабДок.Вывести(ОблПодвал);
	
	Выборка.Сбросить();
		
	ТабДок.Вывести(ОблШапкаЗабалансовые);
	
	ТабДок.НачатьАвтоГруппировкуСтрок();
	
	ОбходИерархииСвернутый(Выборка, Истина);
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	//RonEXI: Вывести взаиморассчеты
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Отчет.СписокПодразделений);
	Запрос.УстановитьПараметр("НачалоПериода", Отчет.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Отчет.КонецПериода));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОстаткиИОбороты.Счет КАК Счет,
	|	ОстаткиИОбороты.Счет.Код КАК Код,
	|	ОстаткиИОбороты.Счет.Порядок КАК Порядок,
	|	ОстаткиИОбороты.СуммаНачальныйОстаток КАК НачальныйОстаток,
	|	ОстаткиИОбороты.СуммаКонечныйОстаток КАК КонечныйОстаток,
	|	ОстаткиИОбороты.СуммаОборотДт КАК Приход,
	|	ОстаткиИОбороты.СуммаОборотКт КАК Расход,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты).Поставщик
	|				ИЛИ ВЫРАЗИТЬ(ОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты).ПрочийПоставщик
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты).Поставщик
	|						ТОГДА 0
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВЫРАЗИТЬ(ОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты).Дилер
	|					ТОГДА 2
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ВЫРАЗИТЬ(ОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты).ЮридическоеЛицо
	|							ТОГДА 3
	|						ИНАЧЕ 4
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ТипКонтрагента
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , , , Подразделение В (&Подразделение)) КАК ОстаткиИОбороты
	|ГДЕ
	|	НЕ ОстаткиИОбороты.Счет.Забалансовый
	|	И (ОстаткиИОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ВзаиморасчетыСПокупателями)
	|			ИЛИ ОстаткиИОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ВзаиморасчетыСПоставщиками))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|ИТОГИ
	|	СУММА(НачальныйОстаток),
	|	СУММА(КонечныйОстаток),
	|	СУММА(Приход),
	|	СУММА(Расход)
	|ПО
	|	Счет,
	|	ТипКонтрагента";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
	
		ТабДок.Вывести(ОблШапкаВзаиморасчеты);
		
		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока Выборка.Следующий() Цикл
			
			 ЗаполнитьЗначенияСвойств(ОблСтрока.Параметры, Выборка);
			 ОблСтрока.Параметры.РасПарам = Выборка.Счет;
			 ТабДок.Вывести(ОблСтрока);
			 
			 Выборка2 = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			 
			 Пока Выборка2.Следующий() Цикл
				 
				  ЗаполнитьЗначенияСвойств(ОблСтрока2.Параметры, Выборка2);
			 	  ОблСтрока2.Параметры.РасПарам = Выборка2.Счет;
				  
				  Если Выборка2.ТипКонтрагента = 0 Тогда
				       ОблСтрока2.Параметры.Счет = "Поставщики материалов";
				  ИначеЕсли Выборка2.ТипКонтрагента = 1 Тогда
				       ОблСтрока2.Параметры.Счет = "ПрочиеПоставщики";
				  ИначеЕсли Выборка2.ТипКонтрагента = 2 Тогда
				       ОблСтрока2.Параметры.Счет = "Дилеры";
				  ИначеЕсли Выборка2.ТипКонтрагента = 3 Тогда
				       ОблСтрока2.Параметры.Счет = "Юридические лица";
				  Иначе
				       ОблСтрока2.Параметры.Счет = "Физические лица";
				  КонецЕсли;
				  
			      ТабДок.Вывести(ОблСтрока2);
				 
			 КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	//Взаиморассчеты
			
	ОблПодвалПрибыль.Параметры.Прибыль = Формат(ФинПрибыль, "ЧДЦ=");
	ТабДок.Вывести(ОблПодвалПрибыль);
	
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Функция СформироватьТДРазвернутый()
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТабДок.Защита=Истина;
	
	Макет = Отчеты.АктивПодразделения.ПолучитьМакет("МакетАктивОборотыРазвернутый");
	
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	ОблСтрока2 = Макет.ПолучитьОбласть("Строка2");
	ОблСтрока3 = Макет.ПолучитьОбласть("Строка3");
	ОблПодвал = Макет.ПолучитьОбласть("Подвал");
	ОблПодвалПрибыль = Макет.ПолучитьОбласть("ПодвалПрибыль");
	ОблШапкаЗабалансовые = Макет.ПолучитьОбласть("ШапкаЗабалансовые");
	ОблШапкаВзаиморасчеты = Макет.ПолучитьОбласть("ШапкаВзаиморасчеты");
	
	ОблШапка.Параметры.ПредставлениеПериода = Формат(Отчет.НачалоПериода, "ДЛФ=DD")+" - "+Формат(Отчет.КонецПериода, "ДЛФ=DD");
	ОблШапка.Параметры.Подразделение = Отчет.СписокПодразделений;
	ТабДок.Вывести(ОблШапка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Отчет.СписокПодразделений);
	Запрос.УстановитьПараметр("НачалоПериода", Отчет.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Отчет.КонецПериода));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОстаткиИОбороты.Счет КАК Счет,
	|	ОстаткиИОбороты.Счет.Код КАК Код,
	|	ОстаткиИОбороты.Счет.Порядок КАК Порядок,
	|	ОстаткиИОбороты.СуммаОборотДт КАК Приход,
	|	ОстаткиИОбороты.СуммаОборотКт КАК Расход,
	|	ОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт КАК ОстатокДебетНач,
	|	ОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт КАК ОстатокКредитНач,
	|	ОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт КАК ОстатокДебетКон,
	|	ОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт КАК ОстатокКредитКон,
	|	ОстаткиИОбороты.Субконто1,
	|	ОстаткиИОбороты.Субконто2,
	|	ОстаткиИОбороты.Субконто3
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , , , Подразделение В (&Подразделение)) КАК ОстаткиИОбороты
	|ГДЕ
	|	(НЕ ОстаткиИОбороты.Счет.Забалансовый
	|			ИЛИ (ОстаткиИОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.СкладГотовойПродукции)
	|				ИЛИ ОстаткиИОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ИзделияУКлиента)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|ИТОГИ
	|	СУММА(Приход),
	|	СУММА(Расход),
	|	СУММА(ОстатокДебетНач),
	|	СУММА(ОстатокКредитНач),
	|	СУММА(ОстатокДебетКон),
	|	СУММА(ОстатокКредитКон)
	|ПО
	|	ОБЩИЕ,
	|	Счет ИЕРАРХИЯ";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
	
		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Выборка.Следующий();
		
		ПриходИтог = 0;
		РасходИтог = 0;	
		ОстатокДебетНачИтог = 0;
		ОстатокКредитНачИтог = 0;
		ОстатокДебетКонИтог = 0;
		ОстатокКредитКонИтог = 0;

		ТабДок.НачатьАвтоГруппировкуСтрок();
		
		Выборка2 = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ОбходИерархииРазвернутый(Выборка2, Ложь);
		
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
			
		ОблПодвал.Параметры.Приход = ПриходИтог;
		ОблПодвал.Параметры.Расход = РасходИтог;
		ОблПодвал.Параметры.ОстатокДебетНач = ОстатокДебетНачИтог;
		ОблПодвал.Параметры.ОстатокКредитНач = ОстатокКредитНачИтог;
		ОблПодвал.Параметры.ОстатокДебетКон = ОстатокДебетКонИтог;
		ОблПодвал.Параметры.ОстатокКредитКон = ОстатокКредитКонИтог;
		
		ТабДок.Вывести(ОблПодвал);
		
		Выборка2.Сбросить();
			
		ТабДок.Вывести(ОблШапкаЗабалансовые);
		
		ТабДок.НачатьАвтоГруппировкуСтрок();
		
		ОбходИерархииРазвернутый(Выборка2, Истина);
		
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		
		
		//RonEXI: Вывести взаиморассчеты
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Подразделение", Отчет.СписокПодразделений);
		Запрос.УстановитьПараметр("НачалоПериода", Отчет.НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(Отчет.КонецПериода));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОстаткиИОбороты.Счет КАК Счет,
		|	ОстаткиИОбороты.Счет.Код КАК Код,
		|	ОстаткиИОбороты.Счет.Порядок КАК Порядок,
		|	ОстаткиИОбороты.СуммаОборотДт КАК Приход,
		|	ОстаткиИОбороты.СуммаОборотКт КАК Расход,
		|	ОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт КАК ОстатокДебетНач,
		|	ОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт КАК ОстатокКредитНач,
		|	ОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт КАК ОстатокДебетКон,
		|	ОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт КАК ОстатокКредитКон,
		|	ОстаткиИОбороты.Субконто1 КАК Контрагент,
		|	ОстаткиИОбороты.Субконто2,
		|	ОстаткиИОбороты.Субконто3,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты).Поставщик
		|				ИЛИ ВЫРАЗИТЬ(ОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты).ПрочийПоставщик
		|			ТОГДА ВЫБОР
		|					КОГДА ВЫРАЗИТЬ(ОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты).Поставщик
		|						ТОГДА 0
		|					ИНАЧЕ 1
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВЫРАЗИТЬ(ОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты).Дилер
		|					ТОГДА 2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ВЫРАЗИТЬ(ОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты).ЮридическоеЛицо
		|							ТОГДА 3
		|						ИНАЧЕ 4
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ТипКонтрагента
		|ИЗ
		|	РегистрБухгалтерии.Управленческий.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , , , Подразделение В (&Подразделение)) КАК ОстаткиИОбороты
		|ГДЕ
		|	НЕ ОстаткиИОбороты.Счет.Забалансовый
		|	И (ОстаткиИОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ВзаиморасчетыСПокупателями)
		|			ИЛИ ОстаткиИОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ВзаиморасчетыСПоставщиками))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок
		|ИТОГИ
		|	СУММА(Приход),
		|	СУММА(Расход),
		|	СУММА(ОстатокДебетНач),
		|	СУММА(ОстатокКредитНач),
		|	СУММА(ОстатокДебетКон),
		|	СУММА(ОстатокКредитКон)
		|ПО
		|	Счет,
		|	ТипКонтрагента";
		
		Результат = Запрос.Выполнить();
		
		Если НЕ Результат.Пустой() Тогда
		
			ТабДок.Вывести(ОблШапкаВзаиморасчеты);
			
			Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока Выборка.Следующий() Цикл
				
				 ЗаполнитьЗначенияСвойств(ОблСтрока.Параметры, Выборка);
				 ОблСтрока.Параметры.РасПарам = Выборка.Счет;
				 ТабДок.Вывести(ОблСтрока);
				 
				 Выборка2 = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				 
				 Пока Выборка2.Следующий() Цикл
					 
					  ЗаполнитьЗначенияСвойств(ОблСтрока2.Параметры, Выборка2);
				 	  ОблСтрока2.Параметры.РасПарам = Выборка2.Счет;
					  
					  Если Выборка2.ТипКонтрагента = 0 Тогда
					       ОблСтрока2.Параметры.Счет = "Поставщики материалов";
					  ИначеЕсли Выборка2.ТипКонтрагента = 1 Тогда
					       ОблСтрока2.Параметры.Счет = "ПрочиеПоставщики";
					  ИначеЕсли Выборка2.ТипКонтрагента = 2 Тогда
					       ОблСтрока2.Параметры.Счет = "Дилеры";
					  ИначеЕсли Выборка2.ТипКонтрагента = 3 Тогда
					       ОблСтрока2.Параметры.Счет = "Юридические лица";
					  Иначе
					       ОблСтрока2.Параметры.Счет = "Физические лица";
					  КонецЕсли;
					  
				      ТабДок.Вывести(ОблСтрока2);
					 
				 КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		//Взаиморассчеты
				
		ОблПодвалПрибыль.Параметры.Прибыль = Формат(ФинПрибыль, "ЧДЦ=");
		ТабДок.Вывести(ОблПодвалПрибыль);
		
	КонецЕсли;
	
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Процедура ОбходИерархииРазвернутый(Выборка, Забалансовый)
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Забалансовый 
			 И (Выборка.Счет = ПланыСчетов.Управленческий.СкладГотовойПродукции ИЛИ Выборка.Счет = ПланыСчетов.Управленческий.ИзделияУКлиента) Тогда
		 	Продолжить;	
		КонецЕсли;
		
		Если Забалансовый 
			 И НЕ (Выборка.Счет = ПланыСчетов.Управленческий.СкладГотовойПродукции ИЛИ Выборка.Счет = ПланыСчетов.Управленческий.ИзделияУКлиента) Тогда
		 	Продолжить;	
		КонецЕсли;
		
		Ур=Выборка.Уровень()-1;
		
		Если Ур = 0 Тогда Область = ОблСтрока; КонецЕсли;		
		Если Ур = 1 Тогда Область = ОблСтрока2; КонецЕсли;
		Если Ур > 1 Тогда Область = ОблСтрока3; КонецЕсли;
		
		Если Ур = 0 Тогда
			
			ПриходИтог = ПриходИтог + Выборка.Приход;
			РасходИтог = РасходИтог + Выборка.Расход;	
			ОстатокДебетНачИтог = ОстатокДебетНачИтог + Выборка.ОстатокДебетНач;
			ОстатокКредитНачИтог = ОстатокКредитНачИтог + Выборка.ОстатокКредитНач;
			ОстатокДебетКонИтог = ОстатокДебетКонИтог + Выборка.ОстатокДебетКон;
			ОстатокКредитКонИтог = ОстатокКредитКонИтог + Выборка.ОстатокКредитКон;
			
		КонецЕсли;
		
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.РасПарам = Выборка.Счет;
		
		Если Выборка.ТипЗаписи() <> ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			Если ЗначениеЗаполнено(Выборка.Счет) Тогда
				
				ТабДок.Вывести(Область,Ур);
				
				Если Выборка.Счет = ПредопределенноеЗначение("ПланСчетов.Управленческий.ФинансовыйРезультат") Тогда
					ФинПрибыль = Выборка.Расход - ?(ЗначениеЗаполнено(Выборка.Приход),Выборка.Приход,0);
				КонецЕсли;
	
			КонецЕсли;
			
			Выборка2=Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ОбходИерархииРазвернутый(Выборка2,Забалансовый);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбходИерархииСвернутый(Выборка, Забалансовый)
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Забалансовый 
			 И (Выборка.Счет = ПланыСчетов.Управленческий.СкладГотовойПродукции ИЛИ Выборка.Счет = ПланыСчетов.Управленческий.ИзделияУКлиента) Тогда
		 	Продолжить;	
		КонецЕсли;
		
		Если Забалансовый 
			 И НЕ (Выборка.Счет = ПланыСчетов.Управленческий.СкладГотовойПродукции ИЛИ Выборка.Счет = ПланыСчетов.Управленческий.ИзделияУКлиента) Тогда
		 	Продолжить;	
		КонецЕсли;
		
		Ур=Выборка.Уровень();
		
		Если Ур = 0 Тогда 
			
			Область = ОблСтрока;
			
			СуммаНач = СуммаНач + Выборка.СуммаНачальныйОстаток;
			СуммаКон = СуммаКон + Выборка.СуммаКонечныйОстаток;
			СуммаДт = СуммаДт + Выборка.СуммаОборотДт;
			СуммаКт = СуммаКт + Выборка.СуммаОборотКт;
	
		КонецЕсли;
		Если Ур = 1 Тогда Область = ОблСтрока2; КонецЕсли;
		Если Ур > 1 Тогда Область = ОблСтрока3; КонецЕсли;		 
		
		Область.Параметры.Счет = Выборка.Счет;
		Область.Параметры.НачальныйОстаток = Формат(Выборка.СуммаНачальныйОстаток, "ЧДЦ=");
		Область.Параметры.Приход = Формат(Выборка.СуммаОборотДт, "ЧДЦ=");
		Область.Параметры.Расход = Формат(Выборка.СуммаОборотКт, "ЧДЦ=");
		Область.Параметры.КонечныйОстаток = Формат(Выборка.СуммаКонечныйОстаток, "ЧДЦ=");
		Область.Параметры.Код = Выборка.Код;
		Область.Параметры.РасПарам = Выборка.Счет;
			
		Если Выборка.ТипЗаписи() <> ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			Если ЗначениеЗаполнено(Выборка.Счет) Тогда
				ТабДок.Вывести(Область,Выборка.Уровень());
				
				Если Выборка.Счет = ПредопределенноеЗначение("ПланСчетов.Управленческий.ФинансовыйРезультат") Тогда
					ФинПрибыль = Выборка.СуммаОборотКт - Выборка.СуммаОборотДт;
				КонецЕсли;
	
			КонецЕсли;
			Выборка2=Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ОбходИерархииСвернутый(Выборка2,Забалансовый);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		Отчет.СписокПодразделений.Очистить();
		Для каждого Знч Из ВыбранноеЗначение Цикл
			Отчет.СписокПодразделений.Добавить(Знч.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ТабличныйДокумент = СформироватьТабличныйДокумент();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("НачалоПериода") Тогда
		 Отчет.НачалоПериода = Параметры.НачалоПериода;
		 Отчет.КонецПериода =  Параметры.КонецПериода;
	КонецЕсли;
	 
	Если Параметры.Свойство("Подразделение") Тогда
		 Отчет.СписокПодразделений = Параметры.Подразделение;
	КонецЕсли; 
	
	
	Если НЕ ЗначениеЗаполнено(Отчет.СписокПодразделений) Тогда
		Если НЕ ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
			Отчет.СписокПодразделений.Добавить(ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо.Подразделение);
		КонецЕсли;  
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Отчет.НачалоПериода)
		или НЕ ЗначениеЗаполнено(Отчет.КонецПериода) Тогда
		Отчет.НачалоПериода = НачалоМесяца(ТекущаяДата());
		Отчет.КонецПериода = КонецМесяца(ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНазад(Команда)
	
	УстановитьМесяц(-1);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцВперед(Команда)
	
	УстановитьМесяц(1);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМесяц(КоличествоМесяцев)
	
	Отчет.НачалоПериода = ДобавитьМесяц(Отчет.НачалоПериода, КоличествоМесяцев);
	Отчет.КонецПериода = КонецМесяца(Отчет.НачалоПериода);
	ТабличныйДокумент = СформироватьТабличныйДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТабличныйДокумент = СформироватьТабличныйДокумент();
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыРасшифровки = Новый Структура();
	ПараметрыРасшифровки.Вставить("Счет",Расшифровка);
	ПараметрыРасшифровки.Вставить("Подразделение",Отчет.СписокПодразделений);
	ПараметрыРасшифровки.Вставить("НачалоПериода",Отчет.НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",КонецДня(Отчет.КонецПериода));
	
	
	ОткрытьФорму("Отчет.АктивПодразделения.Форма.ФормаРасшифровки", ПараметрыРасшифровки, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Свернуть(Команда)
	ТабличныйДокумент.ПоказатьУровеньГруппировокСтрок(0);
КонецПроцедуры

&НаКлиенте
Процедура Развернуть(Команда)
	ТабличныйДокумент.ПоказатьУровеньГруппировокСтрок(10);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДаты()
	Если Отчет.НачалоПериода > Отчет.КонецПериода Тогда
		Отчет.НачалоПериода = НачалоМесяца(Отчет.КонецПериода);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	ПроверитьДаты();
	ТабличныйДокумент = СформироватьТабличныйДокумент();
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	ПроверитьДаты();
	ТабличныйДокумент = СформироватьТабличныйДокумент();
КонецПроцедуры

&НаКлиенте
Процедура СписокПодразделенийНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПодбора = Новый Структура("ОригинальныйСписок", Отчет.СписокПодразделений);
	ОткрытьФорму("Справочник.Подразделения.Форма.ФормаВыбораНескольких", ПараметрыПодбора, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутыеОстаткиПриИзменении(Элемент)
	
	ТабличныйДокумент = СформироватьТабличныйДокумент();	
	
КонецПроцедуры


