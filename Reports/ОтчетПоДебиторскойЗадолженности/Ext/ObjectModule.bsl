
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка 		= Ложь;
	СхемаКомпоновкиДанных 	= ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки 							= СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки 				= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	НастройкаДаты = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.Элементы[0].Значение;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяДата", КонецДня(НастройкаДаты.Дата));
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	УправленческийОстатки.Субконто2 КАК Договор,
	|	ВЫБОР
	|		КОГДА УправленческийОстатки.СуммаОстаток <= 0
	|			ТОГДА УправленческийОстатки.Субконто2.СуммаДокумента + УправленческийОстатки.СуммаОстаток
	|		ИНАЧЕ УправленческийОстатки.СуммаОстаток
	|	КОНЕЦ КАК Остаток
	|ПОМЕСТИТЬ СписокДоговоров
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Остатки(, Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ВзаиморасчетыСПокупателями), , ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Документ.Договор)) КАК УправленческийОстатки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА УправленческийОстатки.СуммаОстаток <= 0
	|				ТОГДА УправленческийОстатки.Субконто2.СуммаДокумента + УправленческийОстатки.СуммаОстаток
	|			ИНАЧЕ УправленческийОстатки.СуммаОстаток
	|		КОНЕЦ > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоговорРассрочка.Ссылка.Ссылка КАК Договор,
	|	ДоговорРассрочка.Ссылка.Автор КАК Автор,
	|	ДоговорРассрочка.Ссылка.СуммаДокумента КАК СуммаДоговора,
	|	ДоговорРассрочка.Ссылка.Комментарий КАК Комментарий,
	|	ДоговорРассрочка.Ссылка.Подразделение
	|ИЗ
	|	Документ.Договор.Рассрочка КАК ДоговорРассрочка
	|ГДЕ
	|	ДоговорРассрочка.Дата < &ТекущаяДата
	|	И ДоговорРассрочка.Ссылка В
	|			(ВЫБРАТЬ
	|				СписокДоговоров.Договор
	|			ИЗ
	|				СписокДоговоров КАК СписокДоговоров)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Договор");
	ТЗ.Колонки.Добавить("Автор");
	ТЗ.Колонки.Добавить("СуммаДоговора");
	ТЗ.Колонки.Добавить("Комментарий");
	ТЗ.Колонки.Добавить("Подразделение");
	ТЗ.Колонки.Добавить("СуммаПени");
	ТЗ.Колонки.Добавить("СуммаПросрочки");
	ТЗ.Колонки.Добавить("ДнейПросрочки");
	ТЗ.Колонки.Добавить("ПервыйПросроченныйПлатеж");
	
	Пока Выборка.Следующий() Цикл
		
		ПросрочкаПеня = Документы.Договор.РасчетПени(Выборка.Договор, НастройкаДаты.Дата);
		
		Если ТЗ.Найти(Выборка.Договор, "Договор") = Неопределено Тогда
			
			НоваяСтрока = ТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПросрочкаПеня);
			
			Если (Число(НоваяСтрока.СуммаПросрочки) <= 0 И Число(НоваяСтрока.СуммаПени) = 0) Тогда
				
				ТЗ.Удалить(НоваяСтрока);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
		// { Васильев Александр Леонидович [30.11.2013]
		// зачем такие сложности?
		// не выгружай в таблицу
		// результат первого запроса
		// просто обходи его
		// и если требуется --
		// - добавляй в результирующую
		// таблицу значений новую строку
		// } Васильев Александр Леонидович [30.11.2013]
			
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТЗ", ТЗ);

	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры
