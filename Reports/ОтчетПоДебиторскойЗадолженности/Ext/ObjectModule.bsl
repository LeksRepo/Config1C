
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка 		= Ложь;
	СхемаКомпоновкиДанных 	= ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки 							= СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки 				= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	НастройкаДаты = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.Элементы[0].Значение;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяДата", КонецДня(НастройкаДаты.Дата));
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УправленческийОстатки.Субконто2 КАК Договор,
	|	ВЫБОР
	|		КОГДА УправленческийОстатки.СуммаОстаток <= 0
	|			ТОГДА УправленческийОстатки.Субконто2.СуммаДокумента + УправленческийОстатки.СуммаОстаток
	|		ИНАЧЕ УправленческийОстатки.СуммаОстаток
	|	КОНЕЦ КАК Остаток
	|ПОМЕСТИТЬ СписокДоговоров
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Остатки(, Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ВзаиморасчетыСПокупателями), , ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Документ.Договор)) КАК УправленческийОстатки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА УправленческийОстатки.СуммаОстаток <= 0
	|				ТОГДА УправленческийОстатки.Субконто2.СуммаДокумента + УправленческийОстатки.СуммаОстаток
	|			ИНАЧЕ УправленческийОстатки.СуммаОстаток
	|		КОНЕЦ > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоговорРассрочка.Ссылка.Ссылка КАК Договор,
	|	ДоговорРассрочка.Ссылка.Автор КАК Автор,
	|	ДоговорРассрочка.Ссылка.СуммаДокумента КАК СуммаДоговора,
	|	ДоговорРассрочка.Ссылка.Комментарий КАК Комментарий,
	|	ДоговорРассрочка.Ссылка.Подразделение
	|ИЗ
	|	Документ.Договор.Рассрочка КАК ДоговорРассрочка
	|ГДЕ
	|	ДоговорРассрочка.Дата < &ТекущаяДата
	|	И ДоговорРассрочка.Ссылка В
	|			(ВЫБРАТЬ
	|				СписокДоговоров.Договор
	|			ИЗ
	|				СписокДоговоров КАК СписокДоговоров)";
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	ТЗ.Колонки.Добавить("СуммаПени");
	ТЗ.Колонки.Добавить("СуммаПросрочки");
	ТЗ.Колонки.Добавить("ДнейПросрочки");
	ТЗ.Колонки.Добавить("ПервыйПросроченныйПлатеж");
	
	Количество = ТЗ.Количество();
	
	Если Количество > 0 Тогда
		
		// { Васильев Александр Леонидович [30.11.2013]
		// зачем такие сложности?
		// не выгружай в таблицу
		// результат первого запроса
		// просто обходи его
		// и если требуется --
		// - добавляй в результирующую
		// таблицу значений новую строку
		// } Васильев Александр Леонидович [30.11.2013]
		
		Для Счетчик = 1 По Количество Цикл
			
			Элемент = ТЗ[Количество - Счетчик];
			
			ПросрочкаПеня = РасчетПени(Элемент.Договор, НастройкаДаты.Дата);
			
			ЗаполнитьЗначенияСвойств(Элемент, ПросрочкаПеня); // ;)
			
			//Элемент.СуммаПени 							= ПросрочкаПеня.СуммаПени;
			//Элемент.СуммаПросрочки 					= ПросрочкаПеня.СуммаПросрочки;
			//Элемент.ДнейПросрочки 						= ПросрочкаПеня.ДнейПросрочки;
			//Элемент.ПервыйПросроченныйПлатеж 	= ПросрочкаПеня.ДатаПервыйПлатеж;
			
			Если (Число(Элемент.СуммаПросрочки) <= 0 И Число(Элемент.СуммаПени) = 0) Тогда
				
				ТЗ.Удалить(Элемент);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТЗ", ТЗ);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

Функция РасчетПени(Договор, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоговорРассрочка.Дата КАК Дата,
	|	ДоговорРассрочка.Сумма КАК Рассрочка,
	|	0 КАК Платеж
	|ИЗ
	|	Документ.Договор.Рассрочка КАК ДоговорРассрочка
	|ГДЕ
	|	ДоговорРассрочка.Ссылка = &Ссылка
	|	И ДоговорРассрочка.Дата < &ТекущаяДата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УправленческийДвиженияССубконто.Регистратор.Дата,
	|	0,
	|	УправленческийДвиженияССубконто.Сумма
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.ДвиженияССубконто(
	|			КОНЕЦПЕРИОДА(&ДатаДоговора, ДЕНЬ),
	|			&ТекущаяДата,
	|			СубконтоКт2 = &Ссылка
	|				И СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ВзаиморасчетыСПокупателями),
	|			,
	|			) КАК УправленческийДвиженияССубконто";
	
	Запрос.УстановитьПараметр("Ссылка", Договор);
	Запрос.УстановитьПараметр("ДатаДоговора", Договор.Дата);
	Запрос.УстановитьПараметр("ТекущаяДата", Дата);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	СтрокаСегодня 					= ТЗ.Добавить();
	СтрокаСегодня.Дата 			= Дата;
	СтрокаСегодня.Рассрочка 	= 0;
	СтрокаСегодня.Платеж 		= 0;
	
	СуммаПени 						= 0;
	Платежи 							= 0;
	Рассрочки 							= 0;
	СуммаПросрочки 				= 0;
	ОбщееДнейПросрочки 		= 0;
	ПрошлаяДата 					= Договор.Дата;
	НачислятьПеню 					= Ложь;
	ПервыйПлатеж 					= Ложь;
	
	Для каждого Стр Из ТЗ Цикл
		
		ОбрабатываемаяДата = НачалоДня(Стр.Дата);
		
		Если НачислятьПеню Тогда
			
			ДнейПросрочки 				= ?(Цел((ОбрабатываемаяДата - ПрошлаяДата) / 86400) > 0, Цел((ОбрабатываемаяДата - ПрошлаяДата) / 86400), 0);
			ОбщееДнейПросрочки 	= ОбщееДнейПросрочки + ДнейПросрочки;
			СуммаПени 					= СуммаПени + СуммаПросрочки / 100 * ДнейПросрочки;
			НачислятьПеню 				= Ложь;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.Платеж) И НЕ ПервыйПлатеж Тогда
				
			ДатаПервыйПлатеж 	= ОбрабатываемаяДата;
			ПервыйПлатеж 			= Истина;
				
		КонецЕсли;
			
		Платежи 				= Стр.Платеж + Платежи;
		Рассрочки 				= Стр.Рассрочка + Рассрочки;
		СуммаПросрочки 	= Рассрочки - Платежи;
		
		НачислятьПеню 		= СуммаПросрочки > 0;
		ПрошлаяДата 		= ОбрабатываемаяДата + 86400;
		
	КонецЦикла;
	
	СуммаПени = Окр(СуммаПени, 2);
	
	Структура = Новый Структура;
	Структура.Вставить("СуммаПени", СуммаПени);
	Структура.Вставить("СуммаПросрочки", СуммаПросрочки);
	Структура.Вставить("ДнейПросрочки", ОбщееДнейПросрочки);
	Структура.Вставить("ДатаПервыйПлатеж", ДатаПервыйПлатеж);
	
	Возврат Структура;
	
КонецФункции
