
&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТабДокРасшифровка = ПолучитьРасшифровкуНаСервере(Расшифровка);
	
	Если ТипЗнч(ТабДокРасшифровка) = Тип("ТабличныйДокумент") Тогда
		ТабДокРасшифровка.Показать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРасшифровкуНаСервере(Расшифровка)
	
	Перем Поле, Группировка;
	
	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	ЭлементыРасшифровки = Данные.Элементы.Получить(Расшифровка);
	Поля = ЭлементыРасшифровки.ПолучитьПоля();
	
	Если Поля.Количество() = 1 Тогда
		Поле = Поля[0].Поле;
	КонецЕсли;
	
	МассивРодители = ЭлементыРасшифровки.ПолучитьРодителей();
	Если МассивРодители.Количество() = 1 Тогда
		ПолеРодителя = Данные.Элементы.Получить(МассивРодители[0].Идентификатор).ПолучитьПоля();
		Группировка = ПолеРодителя[0].Значение;
	КонецЕсли;
	НастройкаПериод = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1];
	//НастройкаПериод = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти("f23da4aa-970e-4c32-a6ee-f21da89b9ed2");
	Если НастройкаПериод <> Неопределено Тогда
		Период = НастройкаПериод.Значение;
	Иначе
		Период = Новый СтандартныйПериод(ВариантСтандартногоПериода.ЭтотМесяц);
	КонецЕсли;
	
	НастройкаРегион = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти("305b6237-40c4-40ec-bf10-b5d88c6d25a5");
	Если НастройкаРегион <> Неопределено Тогда
		Регион = НастройкаРегион.Значение;
	Иначе
		Регион = Справочники.Регионы.ПустаяСсылка();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Поле) И ЗначениеЗаполнено(Группировка) Тогда
		Ответ = СформироватьРасшифровку(ВРег(Поле), Группировка, Период, Регион);
	Иначе
		Ответ = Неопределено;
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

&НаСервере
Функция СформироватьРасшифровку(ИмяПоля, Номенклатура, Период, Регион)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Подразделение = ЛексСервер.ПолучитьПодразделениеПоРегиону(Регион, Перечисления.ВидыПодразделений.Производство);
	Если Найти(ИмяПоля, "ТРЕБ") > 0 Тогда
		Счет = ПланыСчетов.Управленческий.ДополнительныйЛимитЦеха;
		КорСчет = ПланыСчетов.Управленческий.ПустаяСсылка();
		Заголовок = "Расшифровка требуемого материала";
	Иначе
		Счет = ПланыСчетов.Управленческий.ОсновноеПроизводство;
		КорСчет = ПланыСчетов.Управленческий.МатериалыНаСкладе;
		Заголовок = "Расшифровка перемещенного в цех материала";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Регион", Регион);
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.УстановитьПараметр("КорСчет", КорСчет);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ПлановаяЗакупочная", КлючТекущегоВарианта = "ВПлановыхЦенах");
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправленческийОбороты.Регистратор КАК Документ,
	|	УправленческийОбороты.КоличествоОборотДт КАК Количество,
	|	ВЫБОР
	|		КОГДА &ПлановаяЗакупочная
	|			ТОГДА УправленческийОбороты.КоличествоОборотДт * ЦеныНоменклатурыСрезПоследних.ПлановаяЗакупочная
	|		ИНАЧЕ УправленческийОбороты.КоличествоОборотДт * ЦеныНоменклатурыСрезПоследних.Розничная
	|	КОНЕЦ КАК Стоимость
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			Счет = &Счет,
	|			,
	|			Подразделение = &Подразделение
	|				И (ВЫРАЗИТЬ(Субконто1 КАК Справочник.Номенклатура)) = &Номенклатура,
	|			ВЫБОР
	|				КОГДА &КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ КорСчет = &КорСчет
	|			КОНЕЦ,
	|			) КАК УправленческийОбороты,
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			,
	|			Регион = &Регион
	|				И Номенклатура = &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	УправленческийОбороты.Регистратор.Дата
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Стоимость)
	|ПО
	|	ОБЩИЕ";
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтоги.Следующий();
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = Отчеты.КонтрольРасходаМатериалов.ПолучитьМакет("МакетРасшифровка");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	
	ОбластьЗаголовок.Параметры.Заголовок = Заголовок;
	ОбластьИтог.Параметры.Заполнить(ВыборкаИтоги);
	ОбластьЗаголовок.Параметры.Подразделение = Подразделение;
	ОбластьЗаголовок.Параметры.Номенклатура = Номенклатура;
	ОбластьЗаголовок.Параметры.Период = Период;
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапка);
	ТабДок.Вывести(ОбластьИтог);
	
	НомерСтроки = 1;
	Выборка = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьСтрока);
		НомерСтроки = 1 + НомерСтроки;
	КонецЦикла;
	
	ТабДок.Вывести(ОбластьИтог);
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Возврат ТабДок;
	
КонецФункции
