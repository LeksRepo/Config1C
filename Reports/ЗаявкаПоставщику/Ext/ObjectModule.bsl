
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	НастройкиКомпоновщика = КомпоновщикНастроек.ПолучитьНастройки();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновщика, ДанныеРасшифровки);
	
	ТЗ = СформироватьТаблицуЗначений();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТЗ", ТЗ);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

Функция СформироватьТаблицуЗначений()
	
	УстановитьПривилегированныйРежим(Истина);
	
	СвойствоПодразделение = ПланыВидовХарактеристик.НастройкиПользователей.Подразделение;
	ВнешнийПользователь = ЛексСервер.ПолучитьВнешнегоПользователяПоКонтрагенту(Поставщик);
	
	Отбор = Новый Структура("Пользователь, Настройка", ВнешнийПользователь, СвойствоПодразделение);
	Подразделение = РегистрыСведений.НастройкиПользователей.Получить(Отбор).Значение;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОперативныйЗакупСписокНоменклатуры.Номенклатура,
	|	ОперативныйЗакупСписокНоменклатуры.ЕдиницаИзмерения,
	|	ОперативныйЗакупСписокНоменклатуры.РучнойВвод КАК Количество
	|ИЗ
	|	Документ.ОперативныйЗакуп.СписокНоменклатуры КАК ОперативныйЗакупСписокНоменклатуры
	|ГДЕ
	|	ОперативныйЗакупСписокНоменклатуры.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ОперативныйЗакупСписокНоменклатуры.Ссылка.Подразделение = &Подразделение
	|	И ОперативныйЗакупСписокНоменклатуры.Поставщик = &Поставщик
	|	И НЕ ОперативныйЗакупСписокНоменклатуры.Ссылка.ПометкаУдаления";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции


	//"ВЫБРАТЬ
	//|	ОперативныйЗакупСписокНоменклатуры.Номенклатура,
	//|	ОперативныйЗакупСписокНоменклатуры.ЕдиницаИзмерения,
	//|	ВЫБОР
	//|		КОГДА ОперативныйЗакупСписокНоменклатуры.Количество <> 0
	//|			ТОГДА (ОперативныйЗакупСписокНоменклатуры.Количество - ОперативныйЗакупСписокНоменклатуры.КоличествоСрочно) / ОперативныйЗакупСписокНоменклатуры.Количество * ОперативныйЗакупСписокНоменклатуры.Стоимость
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК Стоимость,
	//|	ОперативныйЗакупСписокНоменклатуры.Количество - ОперативныйЗакупСписокНоменклатуры.КоличествоСрочно КАК Количество,
	//|	ВЫБОР
	//|		КОГДА ОперативныйЗакупСписокНоменклатуры.Количество - ОперативныйЗакупСписокНоменклатуры.КоличествоСрочно <> 0
	//|			ТОГДА ОперативныйЗакупСписокНоменклатуры.Стоимость / (ОперативныйЗакупСписокНоменклатуры.Количество - ОперативныйЗакупСписокНоменклатуры.КоличествоСрочно)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК Цена,
	//|ИЗ
	//|	Документ.ОперативныйЗакуп.СписокНоменклатуры КАК ОперативныйЗакупСписокНоменклатуры
	//|ГДЕ
	//|	ОперативныйЗакупСписокНоменклатуры.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	//|	И ОперативныйЗакупСписокНоменклатуры.Количество - ОперативныйЗакупСписокНоменклатуры.КоличествоСрочно > 0
	//|	И ОперативныйЗакупСписокНоменклатуры.Ссылка.Подразделение = &Подразделение
	//|	И ОперативныйЗакупСписокНоменклатуры.Поставщик = &Поставщик
	//|	И НЕ ОперативныйЗакупСписокНоменклатуры.Ссылка.ПометкаУдаления";

