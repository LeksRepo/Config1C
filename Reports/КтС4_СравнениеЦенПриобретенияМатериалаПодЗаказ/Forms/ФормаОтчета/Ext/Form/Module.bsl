
&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТабДокРасшифровка = ПолучитьРасшифровкуНаСервере(Расшифровка);
	
	Если ТипЗнч(ТабДокРасшифровка) = Тип("ТабличныйДокумент") Тогда
		ТабДокРасшифровка.Показать("Расшифровка");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРасшифровкуНаСервере(Расшифровка)
	
	Перем Поле, Группировка;
	
	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	ЭлементыРасшифровки = Данные.Элементы.Получить(Расшифровка);
	Поля = ЭлементыРасшифровки.ПолучитьПоля();
	
	Если Поля.Количество() = 1 Тогда
		Поле = Поля[0].Поле;
	КонецЕсли;
	
	МассивРодители = ЭлементыРасшифровки.ПолучитьРодителей();
	Если МассивРодители.Количество() = 1 Тогда
		ПолеРодителя = Данные.Элементы.Получить(МассивРодители[0].Идентификатор).ПолучитьПоля();
		Группировка = ПолеРодителя[0].Значение;
	КонецЕсли;
	
	НастройкаПериод = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1];
	
	Если НастройкаПериод <> Неопределено Тогда
		Период = НастройкаПериод.Значение;
	Иначе
		Период = Новый СтандартныйПериод(ВариантСтандартногоПериода.ЭтотМесяц);
	КонецЕсли;
	
	НастройкаРегион = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0];
	
	Если НастройкаРегион <> Неопределено Тогда
		Регион = НастройкаРегион.Значение;
	Иначе
		Регион = Справочники.Регионы.ПустаяСсылка();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Поле) И ЗначениеЗаполнено(Группировка) Тогда
		Ответ = СформироватьРасшифровку(ВРег(Поле), Группировка, Период, Регион);
	Иначе
		Ответ = Неопределено;
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

&НаСервере
Функция СформироватьРасшифровку(ИмяПоля, Номенклатура, Период, Регион)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Подразделение = Регион;
	Формировать = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Если ИмяПоля = "КОЛИЧЕСТВОПЛАН" ИЛИ ИмяПоля = "СУММАПЛАН" Тогда
		
		Формировать = Истина;
		Заголовок = "Расшифровка материала по спецификациям";
	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СписокПодЗаказ.Ссылка КАК Документ,
		|	СписокПодЗаказ.Количество КАК Количество,
		|	СписокПодЗаказ.Сумма КАК Стоимость
		|ИЗ
		|	Документ.Спецификация.СписокМатериаловПодЗаказ КАК СписокПодЗаказ
		|ГДЕ
		|	СписокПодЗаказ.Ссылка.Проведен
		|	И СписокПодЗаказ.Номенклатура = &Номенклатура
		|	И СписокПодЗаказ.Ссылка.Подразделение = &Подразделение
		|	И СписокПодЗаказ.Ссылка.ДатаИзготовления МЕЖДУ &НачалоПериода И &КонецПериода
		|
		|УПОРЯДОЧИТЬ ПО
		|	СписокПодЗаказ.Ссылка.ДатаИзготовления
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Стоимость)
		|ПО
		|	ОБЩИЕ";
		
		ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаИтоги.Следующий();
	
	ИначеЕсли ИмяПоля = "КОЛИЧЕСТВОФАКТ" ИЛИ ИмяПоля = "СУММАФАКТ" Тогда
		
		Формировать = Истина;
		Заголовок = "Расшифровка материала по оборотам";
			
		Запрос.Текст =
		"ВЫБРАТЬ
		|	УправленческийОбороты.Регистратор,
		|	УправленческийОбороты.Субконто2 КАК Номенклатура,
		|	УправленческийОбороты.КоличествоОборотДт КАК Количество,
		|	УправленческийОбороты.СуммаОборотДт КАК Сумма
		|ПОМЕСТИТЬ втОбороты
		|ИЗ
		|	РегистрБухгалтерии.Управленческий.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.МатериалыНаСкладе),
		|			,
		|			Подразделение = &Подразделение
		|				И (Субконто2 = &Номенклатура
		|					ИЛИ Субконто2.БазоваяНоменклатура = &Номенклатура),
		|			,
		|			) КАК УправленческийОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОбороты.Регистратор КАК Документ,
		|	ВЫБОР
		|		КОГДА втОбороты.Номенклатура.Базовый
		|			ТОГДА втОбороты.Количество
		|		ИНАЧЕ втОбороты.Количество * втОбороты.Номенклатура.КоэффициентБазовых
		|	КОНЕЦ КАК Количество,
		|	втОбороты.Сумма КАК Стоимость
		|ИЗ
		|	втОбороты КАК втОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	втОбороты.Регистратор.Дата
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Стоимость)
		|ПО
		|	ОБЩИЕ";
	
	КонецЕсли;
	
	Если НЕ Формировать Тогда
		Возврат NULL;	
	КонецЕсли;
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтоги.Следующий();
		
	ТабДок = Новый ТабличныйДокумент;
	Макет = Отчеты.КонтрольРасходаМатериалов.ПолучитьМакет("МакетРасшифровка");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	
	ОбластьЗаголовок.Параметры.Заголовок = Заголовок;
	ОбластьИтог.Параметры.Заполнить(ВыборкаИтоги);
	ОбластьЗаголовок.Параметры.Подразделение = Подразделение;
	ОбластьЗаголовок.Параметры.Номенклатура = Номенклатура;
	ОбластьЗаголовок.Параметры.Период = Период;
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапка);
	ТабДок.Вывести(ОбластьИтог);
	
	НомерСтроки = 1;
	Выборка = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьСтрока);
		НомерСтроки = 1 + НомерСтроки;
	КонецЦикла;
	
	ТабДок.Вывести(ОбластьИтог);
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Возврат ТабДок;
	
КонецФункции
