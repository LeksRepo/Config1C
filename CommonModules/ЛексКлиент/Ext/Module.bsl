
Функция ПутьHTML (ИмяHTML) Экспорт
	
	ПутьHTML = "";
	
	ОбщегоНазначенияКлиент.ПредложитьУстановкуРасширенияРаботыСФайлами();
	РасширениеПодключено = ПодключитьРасширениеРаботыСФайлами();
	
	Если НЕ РасширениеПодключено Тогда
		
		ФайловыеФункцииСлужебныйКлиент.ПредупредитьОНеобходимостиРасширенияРаботыСФайлами();
		
	Иначе
		
		РабочийКаталог = ФайловыеФункцииСлужебныйКлиент.ВыбратьПутьККаталогуДанныхПользователя();
		ПутьHTML = РабочийКаталог + ИмяHTML;
		
		Файл = Новый Файл(ПутьHTML);
		
		Если НЕ Файл.Существует() Тогда
			ПутьHTML = "";
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ПутьHTML;
	
КонецФункции

Функция ОбработкаКомандыПройтиТест(СсылкаУчебноеЗанятие) Экспорт
	
	Если ТипЗнч(СсылкаУчебноеЗанятие) = Тип("СправочникСсылка.УчебныеЗанятия") Тогда
		
		Если ЛексСервер.ЗначениеРеквизитаОбъекта(СсылкаУчебноеЗанятие, "ЭтоГруппа") Тогда
			Возврат Ложь; // Позднее нужно сделать
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура("Тема", СсылкаУчебноеЗанятие);
		ОткрытьФорму("Документ.ТестированиеПользователей.Форма.ФормаДокумента", ПараметрыФормы);
		
	КонецЕсли;
	
КонецФункции

Процедура ПечатьДоговора(ПараметрКоманды, ПараметрыВыполненияКоманды, ДоговорДилера) Экспорт
	
	МассивДоговоров = ЛексСервер.ВыборМакетов(ПараметрКоманды, ДоговорДилера);
	Для Каждого Договор Из МассивДоговоров Цикл
		
		МассивДокумент = Новый Массив;
		МассивДокумент.Вставить(0, Договор.Договор);
		
		//RonEXI: Тут какаято лажа с запятыми при формировании строки, иногда запрос выдаёт пустые значения с запятой, делал не я, ставлю костыль.
		//МакетЭскиза = ?(ЗначениеЗаполнено(Договор.ЭскизнаяЗаявка), Договор.Инструкция + Договор.ПоКаталогу + Договор.ЭскизнаяЗаявка + Договор.ЧертежДвери, Строка(Договор.ПоКаталогу) + Строка(Договор.ЧертежДвери));
		
		МакетЭскиза = ?(ЗначениеЗаполнено(Договор.ЭскизнаяЗаявка), Строка(Договор.ПоКаталогу) + Строка(Договор.ЭскизнаяЗаявка) + Строка(Договор.ЧертежДвери), Строка(Договор.ПоКаталогу) + Строка(Договор.ЧертежДвери));
		
		МассивМакетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МакетЭскиза, ",");
		НовыйМассивМакетов = Новый Массив;
		
		Для Каждого Эл Из МассивМакетов Цикл
			Если НЕ ((Эл = "") ИЛИ (Эл = " ")) Тогда
				НовыйМассивМакетов.Добавить(Эл);	
			КонецЕсли;
		КонецЦикла;
		
		Если НовыйМассивМакетов.Количество()>0 Тогда
			МакетЭскиза = ","+СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(НовыйМассивМакетов, ",");
		Иначе
			МакетЭскиза = "";
		КонецЕсли;
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		Если ЗначениеЗаполнено(Договор.ЧертежДвери) Тогда
			Документ = Новый Структура;
			Документ.Вставить("МассивОбъектов", МассивДокумент);
			Документ.Вставить("Двери", Новый Массив);
			
			Сч = 0;
			
			Пока Сч < Договор.ДвериФлэш.Количество() Цикл
				
				ДвериФлэш = Новый Массив;
				ДвериФлэш.Добавить(Договор.ДвериФлэш[Сч]);
				
				ДвериСсылка = Новый Массив;
				ДвериСсылка.Добавить(Договор.ДвериСсылка[Сч]);
				
				ПараметрыФормыФлэш = Новый Структура;
				ПараметрыФормыФлэш.Вставить("ХранимыйФайл", "ЧертежДвери");
				ПараметрыФормыФлэш.Вставить("МассивДверейФлэш", ДвериФлэш);
				ПараметрыФормыФлэш.Вставить("МассивДверейСсылки", ДвериСсылка);
				ПараметрыФормыФлэш.Вставить("Договор", Договор.Договор);
				Значение = ОткрытьФормуМодально("Документ.Спецификация.Форма.ФормаФлэш", ПараметрыФормыФлэш);
				Документ.Двери.Добавить(Значение);
				
				Сч = Сч + 1;
				
			КонецЦикла;
			
		Иначе
			
			Документ = МассивДокумент;
			
		КонецЕсли;
		
		Если УправлениеПечатьюКлиент.ПроверитьДокументыПроведены(МассивДокумент, ПараметрыВыполненияКоманды.Источник) Тогда
			
			ПараметрыПечати = Новый Структура;
			ПараметрыПечати.Вставить("ФиксированныйКомплект", Ложь);
			ПараметрыПечати.Вставить("ПереопределитьПользовательскиеНастройкиКоличества", Истина);
			
			Если ДоговорДилера Тогда
				
				УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.Договор",
				"ДоговорДилера,УсловияДоставкиВыписка,ТитульныйЛистТПМК"
				+ МакетЭскиза,
				Документ,
				ПараметрыВыполненияКоманды,
				ПараметрыПечати);
				
			Иначе
				
				УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.Договор",
				"Договор,УсловияДоставкиВыписка,ТитульныйЛистТПМК"
				+ МакетЭскиза,
				Документ,
				ПараметрыВыполненияКоманды,
				ПараметрыПечати);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ПечатьДоговора()

Функция ПолучитьЛоготип(Спецификация) Экспорт
	
	Логотип = "";
	
	Если ТипЗнч(Спецификация) = Тип("ДокументСсылка.Спецификация") Тогда
		
		Дилерский = ЛексСервер.ЗначениеРеквизитаОбъекта(Спецификация, "Дилерский");
		
		Если Дилерский Тогда
			Логотип = ЛексСервер.ПолучитьЛоготипДилера(Спецификация);
		Иначе
			Логотип = ЛексСервер.ПолучитьЛоготипОфиса(Спецификация);
		КонецЕсли;
		
		Если Логотип = "" Тогда
			
			Логотип = ЛексСервер.ПолучитьЛоготипПодразделения(Спецификация);
			
		КонецЕсли;
		
		Если НЕ (Логотип = "") Тогда
			
			РабочийКаталог = ФайловыеФункцииСлужебныйКлиент.ВыбратьПутьККаталогуДанныхПользователя();
			ПутьКИзображению = РабочийКаталог + Логотип;
			
			ФайлНаДиске = Новый Файл(ПутьКИзображению);
			
			Если ФайлНаДиске.Существует() Тогда
				Логотип = ПутьКИзображению;
			Иначе
				Логотип = "";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Логотип;
	
КонецФункции

Функция ВыборСчетаКассы(ИмяПоляСубконто, фнОбъект) Экспорт
	
	ТипСубконто = ТипЗнч(фнОбъект[ИмяПоляСубконто]);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПринадлежитПодразделению", фнОбъект.Подразделение);
	ПараметрыФормы.Вставить("Активность", Истина);
	
	ЗначениеСправочника = Неопределено;
	
	Если ТипСубконто = Тип("СправочникСсылка.Счета") Тогда
		ИмяФормыВыбора = "Справочник.Счета.ФормаВыбора";
	Иначе
		ИмяФормыВыбора = "Справочник.Кассы.ФормаВыбора";
	КонецЕсли;
	
	ЗначениеСправочника = ОткрытьФормуМодально(ИмяФормыВыбора, Новый Структура("Отбор", ПараметрыФормы));
	
	Если ЗначениеСправочника <> Неопределено Тогда
		фнОбъект[ИмяПоляСубконто] = ЗначениеСправочника;
	КонецЕсли;
	
КонецФункции