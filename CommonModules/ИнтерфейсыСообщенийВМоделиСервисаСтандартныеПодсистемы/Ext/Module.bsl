////////////////////////////////////////////////////////////////////////////////
// Подсистема "Интерфейсы сообщений в модели сервиса", логика, которая должна
// наследоваться из БСП конфигурациями, разворачиваемыми в модели сервиса.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Заполняет переданный массив общими модулями, которые являются обработчиками интерфейсов
//  принимаемых сообщений
//
// Параметры:
//  МассивОбработчиков - массив
//
Процедура ЗаполнитьОбработчикиПринимаемыхСообщений(МассивОбработчиков) Экспорт
	
	// Сообщения удаленного администрирования
	МассивОбработчиков.Добавить(СообщенияУдаленногоАдминистрированияИнтерфейс);
	// Конец Сообщения удаленного администрирования
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.РезервноеКопированиеОбластейДанных") Тогда
		
		// Сообщения управления резервным копированием
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияУправлениеРезервнымКопированиемИнтерфейс"));
		// Конец Сообщения управления резервным копированием
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.ОбменДаннымиВМоделиСервиса") Тогда
		
		// Сообщения контроля администрирования обмена данными
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияАдминистрированиеОбменаДаннымиКонтрольИнтерфейс"));
		// Конец Сообщения контроля администрирования обмена данными
		
		// Сообщения управления администрированием обмена данными
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияАдминистрированиеОбменаДаннымиУправлениеИнтерфейс"));
		// Конец Сообщения управления администрированием обмена данными
		
		// Сообщения контроля обмена данными
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияОбменаДаннымиКонтрольИнтерфейс"));
		// Конец Сообщения контроля обмена данными
		
		// Сообщения управления обменом данными
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияОбменаДаннымиУправлениеИнтерфейс"));
		// Конец Сообщения управления обменом данными
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.ИнформационныйЦентр") Тогда
		
		// Сообщения информационного центра
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияИнформационногоЦентраИнтерфейс"));
		// Конец Сообщения информационного центра
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.ДополнительныеОтчетыИОбработкиВМоделиСервиса") Тогда
		
		// Сообщения управления дополнительными отчетами и обработками
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияУправленияДополнительнымиОтчетамиИОбработкамиИнтерфейс"));
		// Конец Сообщения управления дополнительными отчетами и обработками
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет переданный массив общими модулями, которые являются обработчиками интерфейсов
//  отправляемых сообщений
//
// Параметры:
//  МассивОбработчиков - массив
//
Процедура ЗаполнитьОбработчикиОтправляемыхСообщений(МассивОбработчиков) Экспорт
	
	// Сообщения контроля удаленного администрирования
	МассивОбработчиков.Добавить(СообщенияКонтрольУдаленногоАдминистрированияИнтерфейс);
	// Конец Сообщения контроля удаленного администрирования
	
	// Сообщения управления приложениями
	МассивОбработчиков.Добавить(СообщенияУправленияПриложениямиИнтерфейс);
	// Конец Сообщения управления приложениями
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.РезервноеКопированиеОбластейДанных") Тогда
		
		// Сообщения контроля резервного копирования
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияКонтрольРезервногоКопированияИнтерфейс"));
		// Конец Сообщения контроля резервного копирования
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.ОбменДаннымиВМоделиСервиса") Тогда
		
		// Сообщения контроля администрирования обмена данными
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияАдминистрированиеОбменаДаннымиКонтрольИнтерфейс"));
		// Конец Сообщения контроля администрирования обмена данными
		
		// Сообщения управления администрированием обмена данными
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияАдминистрированиеОбменаДаннымиУправлениеИнтерфейс"));
		// Конец Сообщения управления администрированием обмена данными
		
		// Сообщения контроля обмена данными
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияОбменаДаннымиКонтрольИнтерфейс"));
		// Конец Сообщения контроля обмена данными
		
		// Сообщения управления обменом данными
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияОбменаДаннымиУправлениеИнтерфейс"));
		// Конец Сообщения управления обменом данными
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.ДополнительныеОтчетыИОбработкиВМоделиСервиса") Тогда
		
		// Сообщения контроля дополнительными отчетами и обработками
		МассивОбработчиков.Добавить(ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияКонтрольДополнительныхОтчетовИОбработокИнтерфейс"));
		// Конец Сообщения контроля дополнительными отчетами и обработками
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается при определении версии интерфейса сообщений, поддерживаемой как ИБ-корреспондентом,
//  так и текущей ИБ. В данной процедуре предполагается реализовывать механизмы поддержки обратной совместимости
//  со старыми версиями ИБ-корреспондентов
//
// Параметры:
//  ИнтерфейсСообщения - строка, название программного интерфейса сообщения, для которого определяется версия
//  ПараметрыПодключения - структура, параметры подключения к ИБ-корреспонденту
//  ПредставлениеПолучателя - строка, представление ИБ-корреспондента
//  Результат - строка, определяемая версия. Значение данного параметра может быть изменено в данной процедуре.
//
Процедура ПриОпределенииВерсииИнтерфейсаКорреспондента(Знач ИнтерфейсСообщения, Знач ПараметрыПодключения, Знач ПредставлениеПолучателя, Результат) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.ДополнительныеОтчетыИОбработкиВМоделиСервиса") Тогда
		
		// Совместимость с версиями МС, в которых интерфейс ApplicationExtensionsControl являлся
		// составной частью интерфейса RemoteAdministrationControl
		
		ОбщийМодульСообщенияКонтрольДополнительныхОтчетовИОбработокИнтерфейс = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("СообщенияКонтрольДополнительныхОтчетовИОбработокИнтерфейс");
		
		Если Результат = Неопределено И ИнтерфейсСообщения = ОбщийМодульСообщенияКонтрольДополнительныхОтчетовИОбработокИнтерфейс.ПрограммныйИнтерфейс() Тогда
			
			ПроверяемыйИнтерфейс = СообщенияКонтрольУдаленногоАдминистрированияИнтерфейс.ПрограммныйИнтерфейс();
			ВерсияИнтерфейсаКонтроляУдаленногоАдминистрирования = ИнтерфейсыСообщенийВМоделиСервиса.ВерсияИнтерфейсаКорреспондента(
				ПроверяемыйИнтерфейс, ПараметрыПодключения, ПредставлениеПолучателя);
			
			Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ВерсияИнтерфейсаКонтроляУдаленногоАдминистрирования, "1.0.2.4") >= 0 Тогда
				Результат = "1.0.0.1";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры