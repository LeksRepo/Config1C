
// Процедура предназначена для заполнения общих реквизитов документов,
// вызывается в обработчиках событий "ОбработкаЗаполнения" в модулях документов.
//
// Параметры:
//  ДокументОбъект   - <ДокументОбъект> - документ, реквизиты которого необходимо заполнить
//  ДанныеЗаполнения - <Структура> или <Неопределено> - одноименный параметр обработчика ОбработкаЗаполнения документа
//
Процедура Заполнить(ДокументОбъект, ДанныеЗаполнения = Неопределено, Отказ = Неопределено) Экспорт
	
	Если ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
		Пользователь = ПараметрыСеанса.ТекущийВнешнийПользователь;
	Иначе
		Пользователь = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	
	Выборка = ПланыВидовХарактеристик.НастройкиПользователей.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЕстьРеквизит = ЕстьРеквизитДокумента(Выборка.Наименование, МетаданныеДокумента);
		Если ЕстьРеквизит И НЕ ЗначениеЗаполнено(ДокументОбъект[Выборка.Наименование]) Тогда
			ДокументОбъект[Выборка.Наименование] = ПолучитьЗначение(Пользователь, Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Позволяет определить есть ли среди реквизитов шапки документа
// реквизит с переданным именем.
//
// Параметры:
//  ИмяРеквизита - строковое имя искомого реквизита,
//  МетаданныеДокумента - объект описания метаданных документа, среди реквизитов которого производится поиск.
//
// Возвращаемое значение:
//  Истина - нашли реквизит с таким именем, Ложь - не нашли.
//
Функция ЕстьРеквизитДокумента(ИмяРеквизита, МетаданныеДокумента) Экспорт

	Возврат НЕ (МетаданныеДокумента.Реквизиты.Найти(ИмяРеквизита) = Неопределено);

КонецФункции // ЕстьРеквизитДокумента()

// Функция возвращает значение по умолчанию для передаваемого пользователя и настройки.
//
// Параметры:
//  Пользователь - СПравочник.Пользователи - пользователь, значение по умолчанию для которого необходимо получить
//  Настройка    - Строка - вид настройки, значение по умолчанию которой необходимо получить
//
// Возвращаемое значение:
//  Значение по умолчанию для настройки.
//
Функция ПолучитьЗначение(Пользователь ,Настройка) Экспорт
	
	Значение = РегистрыСведений.НастройкиПользователей.Получить(Новый Структура("Пользователь, Настройка", Пользователь, Настройка)).Значение;
	
	Возврат Значение;
	
КонецФункции // ПолучитьЗначение()