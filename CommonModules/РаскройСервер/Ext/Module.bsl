
Функция СформироватьКартинку(Массив, ДокументСсылка) Экспорт
	
	Дерево = СоздатьДерево(Массив, ДокументСсылка);
	
	ТипЛисты = ФабрикаXDTO.Тип("CuttingPlans", "Листы");
	ТипЛист = ФабрикаXDTO.Тип("CuttingPlans", "Лист");
	ТипДеталь = ФабрикаXDTO.Тип("CuttingPlans", "Деталь");
	
	СписокЛистов = ФабрикаXDTO.Создать(ТипЛисты);
	Лист = ФабрикаXDTO.Создать(ТипЛист);
	
	Для каждого СтрокаСпецификация Из Дерево.Строки Цикл
		
		Для каждого СтрокаНоменклатура Из СтрокаСпецификация.Строки Цикл
			
			Для каждого СтрокаЛист Из СтрокаНоменклатура.Строки Цикл
				
				Лист.ВысотаЛиста = СтрокаЛист.ВысотаЛиста;
				Лист.ШиринаЛиста = СтрокаЛист.ШиринаЛиста;
				Лист.Номенклатура = СтрокаЛист.Номенклатура.Наименование;
				
				СписокЛистов.Лист.Добавить(Лист);
				
				Для каждого СтрокаДеталь Из СтрокаЛист.Строки Цикл
					
					Деталь = ФабрикаXDTO.Создать(ТипДеталь);
					
					ЗаполнитьЗначенияСвойств(Деталь, СтрокаДеталь);
					
					//Деталь.ВысотаДетали = СтрокаДеталь.ВысотаДетали;
					//Деталь.ШиринаДетали = СтрокаДеталь.ШиринаДетали;
					
					ОбработатьСтороны(Деталь, СтрокаДеталь);
					ОбработатьУглы(Деталь, СтрокаДеталь);
					
					Лист.Деталь.Добавить(Деталь);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку();
	Запись.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(Запись, СписокЛистов);
	Стр = Запись.Закрыть();
	
	Возврат Неопределено;
	
КонецФункции

Функция СоздатьДерево(МассивТаблиц, ДокументСсылка)
	
	Для каждого Таб Из МассивТаблиц Цикл
		Таб.Сортировать("НомерЛиста Возр");
	КонецЦикла;
	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Спецификация");
	Дерево.Колонки.Добавить("Номенклатура");
	Дерево.Колонки.Добавить("ВысотаЛиста");
	Дерево.Колонки.Добавить("ШиринаЛиста");
	Дерево.Колонки.Добавить("ВысотаДетали");
	Дерево.Колонки.Добавить("ШиринаДетали");
	Дерево.Колонки.Добавить("Название");
	
	
	
	Дерево.Колонки.Добавить("КривойПилСверху");
	Дерево.Колонки.Добавить("КривойПилСправа");
	Дерево.Колонки.Добавить("КривойПилСнизу");
	Дерево.Колонки.Добавить("КривойПилСлева");
	
	СтрокаСпецификация = Дерево.Строки.Добавить();
	СтрокаСпецификация.Спецификация = ДокументСсылка;
	
	Для каждого Таб Из МассивТаблиц Цикл
		
		СтрокаНоменклатура = СтрокаСпецификация.Строки.Добавить();
		СтрокаНоменклатура.Номенклатура = Таб[0].Номенклатура;
		
		ТекущийНомерЛиста = -1;
		
		Для каждого СтрокаТаб Из Таб Цикл
			
			Если ТекущийНомерЛиста <> СтрокаТаб.НомерЛиста Тогда
				
				СтрокаЛист = СтрокаНоменклатура.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаЛист, СтрокаТаб);
				ТекущийНомерЛиста = СтрокаТаб.НомерЛиста;
				
			КонецЕсли;
			
			СтрокаДеталь = СтрокаЛист.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДеталь, СтрокаТаб);
			СтрокаДеталь.Название = СтрокаТаб.НомерСтроки; // Формирование надписи в цетре детали
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Дерево;
	
КонецФункции

Функция ОбработатьУглы(Деталь, СтрокаДеталь)
	
	ТипУгол = ФабрикаXDTO.Тип("CuttingPlans", "Угол");
	Угол = ФабрикаXDTO.Создать(ТипУгол);
	
КонецФункции

Функция ОбработатьСтороны(Деталь, СтрокаДеталь)
	
	ТипСторона = ФабрикаXDTO.Тип("CuttingPlans", "Сторона");
	Сторона = ФабрикаXDTO.Создать(ТипСторона);
	
	СтруктураСторон = ПолучитьСтруктуруСторон(СтрокаДеталь);
	
	МассивСторон = Новый Массив;
	МассивСторон.Добавить("Верх");
	МассивСторон.Добавить("Право");
	МассивСторон.Добавить("Низ");
	МассивСторон.Добавить("Лево");
	
	Для каждого ИмяСтороны Из МассивСторон Цикл
		
		Если СтруктураСторон.Свойство(ИмяСтороны) Тогда
			
			ЗаполнитьЗначенияСвойств(Сторона, СтруктураСторон[ИмяСтороны]);
			Деталь[ИмяСтороны] = Сторона;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

Функция ПолучитьСтруктуруСторон(СтрокаДеталь)
	
	Структура = Новый Структура;
	Структура.Вставить("Верх", Новый Структура);
	Структура.Вставить("Право", Новый Структура);
	Структура.Вставить("Низ", Новый Структура);
	Структура.Вставить("Лево", Новый Структура);
	
	Если СтрокаДеталь.КривойПилСверху <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "Верх", "КривойПил", Истина);
	КонецЕсли;
	
	Если СтрокаДеталь.КривойПилСправа <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "Право", "КривойПил", Истина);
	КонецЕсли;
	
	Если СтрокаДеталь.КривойПилСнизу <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "Низ", "КривойПил", Истина);
	КонецЕсли;
	
	Если СтрокаДеталь.КривойПилСлева <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "Лево", "КривойПил", Истина);
	КонецЕсли;
	
	УдалитьПустуюСторону(Структура, "Верх");
	УдалитьПустуюСторону(Структура, "Право");
	УдалитьПустуюСторону(Структура, "Низ");
	УдалитьПустуюСторону(Структура, "Лево");
	
	Возврат Структура;
	
КонецФункции

Функция ДобавитьВСтруктуруСторон(Структура, ИмяСтруктуры, ИмяПоля, ЗначениеПоля)
	
	Структура[ИмяСтруктуры].Вставить(ИмяПоля, ЗначениеПоля);
	
КонецФункции

Функция УдалитьПустуюСторону(Структура, ИмяСвойства)
	
	Если Структура[ИмяСвойства].Количество() = 0 Тогда
		
		Структура.Удалить(ИмяСвойства);
		
	КонецЕсли;
	
КонецФункции
