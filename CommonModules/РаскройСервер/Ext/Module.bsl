
Функция СформироватьКартинку(Массив, ДокументСсылка) Экспорт
	
	Дерево = СоздатьДерево(Массив, ДокументСсылка);
	
	ТипЛисты = ФабрикаXDTO.Тип("CuttingPlans", "Листы");
	ТипЛист = ФабрикаXDTO.Тип("CuttingPlans", "Лист");
	ТипДеталь = ФабрикаXDTO.Тип("CuttingPlans", "Деталь");
	
	СписокЛистов = ФабрикаXDTO.Создать(ТипЛисты);
	Лист = ФабрикаXDTO.Создать(ТипЛист);
	
	Для каждого СтрокаСпецификация Из Дерево.Строки Цикл
		
		Для каждого СтрокаНоменклатура Из СтрокаСпецификация.Строки Цикл
			
			Для каждого СтрокаЛист Из СтрокаНоменклатура.Строки Цикл
				
				Лист.ВысотаЛиста = СтрокаЛист.ВысотаЛиста;
				Лист.ШиринаЛиста = СтрокаЛист.ШиринаЛиста;
				Лист.Номенклатура = СтрокаЛист.Номенклатура.Наименование;
				
				СписокЛистов.Лист.Добавить(Лист);
				
				Для каждого СтрокаДеталь Из СтрокаЛист.Строки Цикл
					
					Деталь = ФабрикаXDTO.Создать(ТипДеталь);
					
					ЗаполнитьЗначенияСвойств(Деталь, СтрокаДеталь);
					
					ОбработатьСтороны(Деталь, СтрокаДеталь);
					ОбработатьУглы(Деталь, СтрокаДеталь);
					
					Лист.Деталь.Добавить(Деталь);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку();
	Запись.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(Запись, СписокЛистов);
	Стр = Запись.Закрыть();
	
	Текст = Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(Стр);
	ИмяФайла = "//dmn/shared" + ДокументСсылка.Номер + ".xml";
	Текст.Записать(ИмяФайла);
	
	Возврат Неопределено;
	
КонецФункции

Функция СоздатьДерево(МассивТаблиц, ДокументСсылка)
	
	Для каждого Таб Из МассивТаблиц Цикл
		Таб.Сортировать("НомерЛиста Возр");
	КонецЦикла;
	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Спецификация");
	Дерево.Колонки.Добавить("Номенклатура");
	Дерево.Колонки.Добавить("ВысотаЛиста");
	Дерево.Колонки.Добавить("ШиринаЛиста");
	Дерево.Колонки.Добавить("ВысотаДетали");
	Дерево.Колонки.Добавить("ШиринаДетали");
	Дерево.Колонки.Добавить("Название");
	Дерево.Колонки.Добавить("Абцисса");
	Дерево.Колонки.Добавить("Ордината");
	Дерево.Колонки.Добавить("Остаток");

	Дерево.Колонки.Добавить("КривойПилСверху");
	Дерево.Колонки.Добавить("КривойПилСправа");
	Дерево.Колонки.Добавить("КривойПилСнизу");
	Дерево.Колонки.Добавить("КривойПилСлева");
	
	Дерево.Колонки.Добавить("КромкаСверху");
	Дерево.Колонки.Добавить("КромкаСправа");
	Дерево.Колонки.Добавить("КромкаСнизу");
	Дерево.Колонки.Добавить("КромкаСлева");
	
	Дерево.Колонки.Добавить("РадиусЛевоВерх");
	Дерево.Колонки.Добавить("РадиусПравоВерх");
	Дерево.Колонки.Добавить("РадиусПравоНиз");
	Дерево.Колонки.Добавить("РадиусЛевоНиз");
	
	Дерево.Колонки.Добавить("СрезЛевоВерх");
	Дерево.Колонки.Добавить("СрезПравоВерх");
	Дерево.Колонки.Добавить("СрезПравоНиз");
	Дерево.Колонки.Добавить("СрезЛевоНиз");
	
	СтрокаСпецификация = Дерево.Строки.Добавить();
	СтрокаСпецификация.Спецификация = ДокументСсылка;
	
	Для каждого Таб Из МассивТаблиц Цикл
		
		СтрокаНоменклатура = СтрокаСпецификация.Строки.Добавить();
		СтрокаНоменклатура.Номенклатура = Таб[0].Номенклатура;
		
		ТекущийНомерЛиста = -1;
		
		Для каждого СтрокаТаб Из Таб Цикл
			
			Если ТекущийНомерЛиста <> СтрокаТаб.НомерЛиста Тогда
				
				СтрокаЛист = СтрокаНоменклатура.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаЛист, СтрокаТаб);
				ТекущийНомерЛиста = СтрокаТаб.НомерЛиста;
				
			КонецЕсли;
			
			СтрокаДеталь = СтрокаЛист.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДеталь, СтрокаТаб);
			СтрокаДеталь.Название = СтрокаТаб.НомерСтроки; // Формирование надписи в цетре детали
			СтрокаДеталь.Абцисса = СтрокаТаб.КоординатаХ;
			СтрокаДеталь.Ордината = СтрокаТаб.КоординатаУ;
			
			СтрокаДеталь.КромкаСверху = СтрокаТаб.ВыборМебельнойКромкиСверху.КраткоеНаименование;
			СтрокаДеталь.КромкаСправа = СтрокаТаб.ВыборМебельнойКромкиСправа.КраткоеНаименование;
			СтрокаДеталь.КромкаСнизу = СтрокаТаб.ВыборМебельнойКромкиСнизу.КраткоеНаименование;
			СтрокаДеталь.КромкаСлева = СтрокаТаб.ВыборМебельнойКромкиСлева.КраткоеНаименование;
			
			Если СтрокаТаб.Срез Тогда
				СтрокаДеталь.СрезПравоНиз = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Дерево;
	
КонецФункции

Функция ОбработатьУглы(Деталь, СтрокаДеталь)
	
	ТипУгол = ФабрикаXDTO.Тип("CuttingPlans", "Угол");
	
	СтруктураУглов = ПолучитьСтруктуруУглов(СтрокаДеталь);
	
	МассивУглов = Новый Массив;
	МассивУглов.Добавить("ЛевоВерх");
	МассивУглов.Добавить("ПравоВерх");
	МассивУглов.Добавить("ПравоНиз");
	МассивУглов.Добавить("ЛевоНиз");
	
	Для каждого ИмяУгла Из МассивУглов Цикл
		
		Если СтруктураУглов.Свойство(ИмяУгла) Тогда
			
			Угол = ФабрикаXDTO.Создать(ТипУгол);
			ЗаполнитьЗначенияСвойств(Угол, СтруктураУглов[ИмяУгла]);
			Деталь[ИмяУгла] = Угол;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

Функция ОбработатьСтороны(Деталь, СтрокаДеталь)
	
	ТипСторона = ФабрикаXDTO.Тип("CuttingPlans", "Сторона");
	
	СтруктураСторон = ПолучитьСтруктуруСторон(СтрокаДеталь);
	
	МассивСторон = Новый Массив;
	МассивСторон.Добавить("Верх");
	МассивСторон.Добавить("Право");
	МассивСторон.Добавить("Низ");
	МассивСторон.Добавить("Лево");
	
	Для каждого ИмяСтороны Из МассивСторон Цикл
		
		Если СтруктураСторон.Свойство(ИмяСтороны) Тогда
			
			Сторона = ФабрикаXDTO.Создать(ТипСторона);
			ЗаполнитьЗначенияСвойств(Сторона, СтруктураСторон[ИмяСтороны]);
			Деталь[ИмяСтороны] = Сторона;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

Функция ПолучитьСтруктуруСторон(СтрокаДеталь)
	
	Структура = Новый Структура;
	Структура.Вставить("Верх", Новый Структура);
	Структура.Вставить("Право", Новый Структура);
	Структура.Вставить("Низ", Новый Структура);
	Структура.Вставить("Лево", Новый Структура);
	
	// Кривой пил
	
	Если СтрокаДеталь.КривойПилСверху <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "Верх", "КривойПил", Истина);
	КонецЕсли;
	
	Если СтрокаДеталь.КривойПилСправа <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "Право", "КривойПил", Истина);
	КонецЕсли;
	
	Если СтрокаДеталь.КривойПилСнизу <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "Низ", "КривойПил", Истина);
	КонецЕсли;
	
	Если СтрокаДеталь.КривойПилСлева <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "Лево", "КривойПил", Истина);
	КонецЕсли;
	
	// Кромка
	
	Если ЗначениеЗаполнено(СтрокаДеталь.КромкаСверху) Тогда
		ДобавитьВСтруктуруСторон(Структура, "Верх", "Кромка", СтрокаДеталь.КромкаСверху);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаДеталь.КромкаСправа) Тогда
		ДобавитьВСтруктуруСторон(Структура, "Право", "Кромка", СтрокаДеталь.КромкаСправа);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаДеталь.КромкаСнизу) Тогда
		ДобавитьВСтруктуруСторон(Структура, "Низ", "Кромка", СтрокаДеталь.КромкаСнизу);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаДеталь.КромкаСлева) Тогда
		ДобавитьВСтруктуруСторон(Структура, "Лево", "Кромка", СтрокаДеталь.КромкаСлева);
	КонецЕсли;
	
	УдалитьПустуюСторону(Структура, "Верх");
	УдалитьПустуюСторону(Структура, "Право");
	УдалитьПустуюСторону(Структура, "Низ");
	УдалитьПустуюСторону(Структура, "Лево");
	
	Возврат Структура;
	
КонецФункции

Функция ПолучитьСтруктуруУглов(СтрокаДеталь)
	
	Структура = Новый Структура;
	Структура.Вставить("ЛевоВерх", Новый Структура);
	Структура.Вставить("ПравоВерх", Новый Структура);
	Структура.Вставить("ПравоНиз", Новый Структура);
	Структура.Вставить("ЛевоНиз", Новый Структура);
	
	// Радиус
	
	Если СтрокаДеталь.РадиусЛевоВерх <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "ЛевоВерх", "РадиусСтрелка", СтрокаДеталь.РадиусЛевоВерх);
	КонецЕсли;
	
	Если СтрокаДеталь.РадиусПравоВерх <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "ПравоВерх", "РадиусСтрелка", СтрокаДеталь.РадиусПравоВерх);
	КонецЕсли;
	
	Если СтрокаДеталь.РадиусПравоНиз <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "ПравоНиз", "РадиусСтрелка", СтрокаДеталь.РадиусПравоНиз);
	КонецЕсли;
	
	Если СтрокаДеталь.РадиусЛевоНиз <> 0 Тогда
		ДобавитьВСтруктуруСторон(Структура, "ЛевоНиз", "РадиусСтрелка", СтрокаДеталь.РадиусЛевоНиз);
	КонецЕсли;
	
	УдалитьПустуюСторону(Структура, "ЛевоВерх");
	УдалитьПустуюСторону(Структура, "ПравоВерх");
	УдалитьПустуюСторону(Структура, "ПравоНиз");
	УдалитьПустуюСторону(Структура, "ЛевоНиз");
	
	Возврат Структура;
	
КонецФункции

Функция ДобавитьВСтруктуруСторон(Структура, ИмяСтруктуры, ИмяПоля, ЗначениеПоля)
	
	Структура[ИмяСтруктуры].Вставить(ИмяПоля, ЗначениеПоля);
	
КонецФункции

Функция УдалитьПустуюСторону(Структура, ИмяСвойства)
	
	Если Структура[ИмяСвойства].Количество() = 0 Тогда
		
		Структура.Удалить(ИмяСвойства);
		
	КонецЕсли;
	
КонецФункции

Функция СформироватьМассивСторон()
		
	Возврат Неопределено;
	
КонецФункции
