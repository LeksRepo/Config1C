
Процедура СформироватьПроводкиРеализацииСпецификаций(МассивСпецификаций, Дата, МоментВремени, Подразделение, Движения, Ошибки) Экспорт 
	
	Управление = Константы.Управление.Получить();
	ПроцентСЗаказаУправлению = ЛексСервер.ПолучитьНастройкуПодразделения(Подразделение, Перечисления.ВидыНастроекПодразделений.ПроцентСЗаказаУправлению, Дата);
	СуммаУправлению = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", МоментВремени);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("МассивСпецификаций", МассивСпецификаций);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(УправленческийОстатки.СуммаОстатокДт, 0) КАК СуммаОстатокДт,
	|	ЕСТЬNULL(УправленческийОстатки.КоличествоОстатокДт, 0) КАК КоличествоОстатокДт,
	|	СтатусСпецификацииСрезПоследних.Статус КАК СтатусСпецификации,
	|	ДокСпецификация.Ссылка КАК Спецификация,
	|	ДокСпецификация.Изделие КАК Изделие,
	|	ДокСпецификация.Контрагент,
	|	ДокСпецификация.Подразделение,
	|	ДокСпецификация.СуммаДокумента,
	|	ДокСпецификация.ВнутренняяСтоимостьСпецификации,
	|	ДокСпецификация.Автор,
	|	ДокСпецификация.Дилерский,
	|	ВЫБОР
	|		КОГДА ДокСпецификация.ПакетУслуг = ЗНАЧЕНИЕ(Перечисление.ПакетыУслуг.ДоставкаДоКлиентаИМонтаж)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УслугаМонтаж,
	|	ДокСпецификация.Подразделение.СвоиМонтажи КАК СвоиМонтажи
	|ИЗ
	|	Документ.Спецификация КАК ДокСпецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.СкладГотовойПродукции), , Подразделение = &Подразделение) КАК УправленческийОстатки
	|		ПО (ДокСпецификация.Ссылка = (ВЫРАЗИТЬ(УправленческийОстатки.Субконто1 КАК Документ.Спецификация)))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусСпецификации.СрезПоследних(, ) КАК СтатусСпецификацииСрезПоследних
	|		ПО ДокСпецификация.Ссылка = СтатусСпецификацииСрезПоследних.Спецификация
	|ГДЕ
	|	ДокСпецификация.Ссылка В(&МассивСпецификаций)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		КоличествоОстаток = Выборка.КоличествоОстатокДт;
		Себестомость = Выборка.СуммаОстатокДт;
		
		Если КоличествоОстаток <> 1 Тогда
			Текст = "" + Выборка.Спецификация + " не числится на счете 'Склад готовой продукции'";
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.СписокСпецификаций", Текст);
			Продолжить;
		КонецЕсли;
		
		Если Ошибки <> Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Управление) И ЗначениеЗаполнено(ПроцентСЗаказаУправлению) Тогда
			СуммаУправлению = СуммаУправлению + Выборка.ВнутренняяСтоимостьСпецификации * 0.01 * ПроцентСЗаказаУправлению;
		КонецЕсли;
		
		Проводка = СоздатьПроводку(Движения, Дата, Подразделение, Себестомость);
		Проводка.СчетКт = ПланыСчетов.Управленческий.СкладГотовойПродукции;
		Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СпецификацияДоговор] = Выборка.Спецификация;
		Проводка.КоличествоКт = 1;
				
		Если Выборка.УслугаМонтаж И НЕ Выборка.СвоиМонтажи  И НЕ (Выборка.Изделие = Справочники.Изделия.Переделка) Тогда
			
			// заказ с монтажем, оприходуем на временный счет
			
			Проводка = СоздатьПроводку(Движения, Дата, Подразделение, Себестомость);
			Проводка.СчетДт = ПланыСчетов.Управленческий.ИзделияУКлиента;
			Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СпецификацияДоговор] = Выборка.Спецификация;
			Проводка.КоличествоДт = 1;
					
		КонецЕсли;
		
	КонецЦикла; 
	
	СформироватьПроводкиПрибыльПроизводства(МассивСпецификаций, Движения);
	
	ЗакрытьДопСоглашенияДоговора(МассивСпецификаций, Движения, Дата);
	
	РеализацияИзделийРозничныеПроводки(МассивСпецификаций, Движения, Дата);
	
	Если СуммаУправлению > 0 Тогда
		ЛексСервер.НачислитьСуммуУправлению(Подразделение, Движения, СуммаУправлению, Дата);
	КонецЕсли;
	
КонецПроцедуры

// Добавляет к Движениям проводки по доходам подразделения.
// По отгрузке или акту установки, в разрезе статьи дохода номенклатуры спецификации
//
// Параметры
//  СпецификацияСсылка  - ДокументСсылка.Спецификация - Ссылка на спецификацию
//  Движения  - КоллекцияДвижений - Коллекция движений регистратора
//
Функция СформироватьПроводкиПрибыльПроизводства(МассивСпецификаций, Движения, ВызовИзАкта = Ложь) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСпецификаций", МассивСпецификаций);
	Запрос.УстановитьПараметр("ВызовИзАкта", ВызовИзАкта);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(СпецификацияСписокНоменклатуры.ВнутренняяСтоимость) КАК Сумма,
	|	СпецификацияСписокНоменклатуры.Номенклатура.СтатьяДохода КАК Статья,
	|	СпецификацияСписокНоменклатуры.Ссылка,
	|	СпецификацияСписокНоменклатуры.Ссылка.Дата,
	|	СпецификацияСписокНоменклатуры.Ссылка.Производство,
	|	СпецификацияСписокНоменклатуры.Ссылка.Подразделение
	|ИЗ
	|	Документ.Спецификация.СписокНоменклатуры КАК СпецификацияСписокНоменклатуры
	|ГДЕ
	|	СпецификацияСписокНоменклатуры.Ссылка В(&МассивСпецификаций)
	|	И СпецификацияСписокНоменклатуры.Ссылка.Изделие <> ЗНАЧЕНИЕ(Справочник.Изделия.Переделка)
	|	И (&ВызовИзАкта
	|				И НЕ СпецификацияСписокНоменклатуры.Ссылка.Подразделение.СвоиМонтажи
	|			ИЛИ НЕ &ВызовИзАкта
	|				И НЕ(СпецификацияСписокНоменклатуры.Ссылка.ПакетУслуг = ЗНАЧЕНИЕ(Перечисление.ПакетыУслуг.ДоставкаДоКлиентаИМонтаж)
	|						И НЕ СпецификацияСписокНоменклатуры.Ссылка.Подразделение.СвоиМонтажи))
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацияСписокНоменклатуры.Номенклатура.СтатьяДохода,
	|	СпецификацияСписокНоменклатуры.Ссылка,
	|	СпецификацияСписокНоменклатуры.Ссылка.Дата,
	|	СпецификацияСписокНоменклатуры.Ссылка.Производство,
	|	СпецификацияСписокНоменклатуры.Ссылка.Подразделение";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Проводка = СоздатьПроводку(Движения, Выборка.Дата, Выборка.Производство, Выборка.Сумма);		
		Проводка.СчетДт = ПланыСчетов.Управленческий.ВзаиморасчетыСПодразделениями;
		Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Подразделения] = Выборка.Подразделение;
		
		Проводка.СчетКт = ПланыСчетов.Управленческий.Доходы;
		Если НЕ ЗначениеЗаполнено(Выборка.Статья) Тогда
			Если Выборка.Подразделение.БрендДилер Тогда
				СтатьяДохода = Справочники.СтатьиДоходовРасходов.ДоходыПроизводстваОтБрендДилера;
			Иначе
				СтатьяДохода = Справочники.СтатьиДоходовРасходов.ДоходыПроизводстваОтРозницы;
			КонецЕсли;
			
		Иначе
			СтатьяДохода = Выборка.Статья;
		КонецЕсли;
		
		Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] = СтатьяДохода;
		Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СпецификацияДоговор] = Выборка.Ссылка;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

// Формирует проводки по закрытию доп. соглашений (вызывается из ОбработкаПроведения)
//
// Параметры
//  Движения  - КоллекцияДвижений - коллекция движений регистратора
//  ДоговорСсылка  - ДокументСсылка.Договор - ссылка на закрываемый Договор
//
Функция ЗакрытьДопСоглашенияДоговора(МассивСпецификаций, Движения, ДатаПроведения, ВызовИзАкта = Ложь) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСпецификаций", МассивСпецификаций);
	Запрос.УстановитьПараметр("ВызовИзАкта", ВызовИзАкта);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	докСпецификация.Ссылка КАК Спецификация,
	|	докДоговор.Ссылка КАК Договор,
	|	докДополнительноеСоглашение.Ссылка КАК ДопСоглашение,
	|	докДополнительноеСоглашение.СуммаДокумента КАК Сумма,
	|	докДоговор.Дата,
	|	докДоговор.Контрагент,
	|	докДоговор.Подразделение
	|ИЗ
	|	Документ.Спецификация КАК докСпецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Договор КАК докДоговор
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДополнительноеСоглашение КАК докДополнительноеСоглашение
	|			ПО докДоговор.Ссылка = докДополнительноеСоглашение.Договор
	|		ПО (докДоговор.Спецификация = докСпецификация.Ссылка)
	|ГДЕ
	|	докСпецификация.Ссылка В(&МассивСпецификаций)
	|	И докДополнительноеСоглашение.Проведен
	|	И (&ВызовИзАкта
	|			ИЛИ НЕ &ВызовИзАкта
	|				И НЕ(докСпецификация.ПакетУслуг = ЗНАЧЕНИЕ(Перечисление.ПакетыУслуг.ДоставкаДоКлиентаИМонтаж)
	|						И НЕ докСпецификация.Подразделение.СвоиМонтажи))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Сумма > 0 Тогда
			Проводка = СоздатьПроводку(Движения, ДатаПроведения, Выборка.Подразделение, Выборка.Сумма);
			Проводка.СчетДт = ПланыСчетов.Управленческий.ВзаиморасчетыСПокупателями;
			Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Выборка.Контрагент;
			Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СпецификацияДоговор] = Выборка.ДопСоглашение;
			Проводка.СчетКт = ПланыСчетов.Управленческий.Доходы;
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] = Справочники.СтатьиДоходовРасходов.ДоходыОтРозничныхКлиентов;
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СпецификацияДоговор] = Выборка.Договор;
		Иначе
			Проводка = СоздатьПроводку(Движения, ДатаПроведения, Выборка.Подразделение, -Выборка.Сумма);
			Проводка.СчетКт = ПланыСчетов.Управленческий.ВзаиморасчетыСПокупателями;
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Выборка.Контрагент;
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СпецификацияДоговор] = Выборка.ДопСоглашение;
			Проводка.СчетДт = ПланыСчетов.Управленческий.РасходыРозничнойСети;
			Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] = Справочники.СтатьиДоходовРасходов.ПрочиеХозяйственныеРасходы; // ох и сраться будем по этому поводу
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

Функция РеализацияИзделийРозничныеПроводки(МассивСпецификаций, Движения, Дата, ВызовИзАкта = Ложь) Экспорт
		
	Если МассивСпецификаций.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСпецификаций", МассивСпецификаций);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	докСпецификация.Ссылка КАК Спецификация,
	|	докДоговор.Ссылка КАК Договор,
	|	докСпецификация.Контрагент,
	|	докСпецификация.Подразделение,
	|	докСпецификация.СуммаДокумента,
	|	докСпецификация.ВнутренняяСтоимостьСпецификации,
	|	докСпецификация.Производство,
	|	докСпецификация.Дилерский,
	|	докДоговор.СуммаДокумента КАК СуммаДокументаДоговор,
	|	докСпецификация.Подразделение.СвоиМонтажи КАК СвоиМонтажи
	|ИЗ
	|	Документ.Спецификация КАК докСпецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Договор КАК докДоговор
	|		ПО (докДоговор.Спецификация = докСпецификация.Ссылка)
	|ГДЕ
	|	докСпецификация.Ссылка В(&МассивСпецификаций)
	|	И докСпецификация.Изделие <> ЗНАЧЕНИЕ(Справочник.Изделия.Переделка)
	|	И докСпецификация.Изделие <> ЗНАЧЕНИЕ(Справочник.Изделия.ДопСоглашение)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЕстьДоговор = ЗначениеЗаполнено(Выборка.Договор);
		ДокументДоговорИлиСпецификация = ?(ЕстьДоговор, Выборка.Договор, Выборка.Спецификация);
		СуммаВзаиморасчетов = ?(ЕстьДоговор, Выборка.СуммаДокументаДоговор, Выборка.СуммаДокумента);
		
		Если Выборка.Дилерский Тогда
			СтатьяДохода = Справочники.СтатьиДоходовРасходов.ДоходыОтДилеровПоСпецификациям;
			СтатьяРасхода = Справочники.СтатьиДоходовРасходов.РасходПоСпецификациямДилеров;
		ИначеЕсли ЕстьДоговор Тогда
			СтатьяДохода = Справочники.СтатьиДоходовРасходов.ДоходыОтРозничныхКлиентов;
			СтатьяРасхода = Справочники.СтатьиДоходовРасходов.РасходНаПроизводствоМебельногоКомплекта;
		Иначе
			СтатьяДохода = Справочники.СтатьиДоходовРасходов.ДоходыОтЧастныхЛицПоСпецификациям;
			СтатьяРасхода = Справочники.СтатьиДоходовРасходов.РасходПоСпецификациямЧастныхЛиц;
		КонецЕсли;
		
		Если НЕ (Выборка.СвоиМонтажи И ВызовИзАкта) Тогда // на это условие я убил 2 часа :(
			
			// Оприходование изделия от производства
			Проводка = СоздатьПроводку(Движения, Дата, Выборка.Подразделение, Выборка.ВнутренняяСтоимостьСпецификации);
			Проводка.СчетДт = ПланыСчетов.Управленческий.ГотоваяПродукция;
			Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СпецификацияДоговор] = ДокументДоговорИлиСпецификация;
			Проводка.КоличествоДт = 1;
			Проводка.СчетКт = ПланыСчетов.Управленческий.ВзаиморасчетыСПодразделениями;
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Подразделения] = Выборка.Производство;
			
		КонецЕсли;
		
		Если НЕ Выборка.СвоиМонтажи ИЛИ ВызовИзАкта Тогда
			
			// Расходы
			Проводка = СоздатьПроводку(Движения, Дата, Выборка.Подразделение, Выборка.ВнутренняяСтоимостьСпецификации);
			Проводка.СчетДт = ПланыСчетов.Управленческий.РасходыРозничнойСети;
			Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] = СтатьяРасхода;
			Проводка.СчетКт = ПланыСчетов.Управленческий.ГотоваяПродукция;
			Проводка.КоличествоКт = 1;
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СпецификацияДоговор] = ДокументДоговорИлиСпецификация;
			
			// Доходы			
			Проводка = СоздатьПроводку(Движения, Дата, Выборка.Подразделение, СуммаВзаиморасчетов);
			Проводка.СчетДт = ПланыСчетов.Управленческий.ВзаиморасчетыСПокупателями;
			Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Выборка.Контрагент;
			Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.СпецификацияДоговор] = ДокументДоговорИлиСпецификация;
			Проводка.СчетКт = ПланыСчетов.Управленческий.Доходы;
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДР] = СтатьяДохода;
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СпецификацияДоговор] = ДокументДоговорИлиСпецификация;
			
		КонецЕсли;
		
	КонецЦикла;
	 		
КонецФункции

Функция СоздатьПроводку(фДвижения, фДата, фПодразделение, фСумма)
	
	Проводка = фДвижения.Управленческий.Добавить();
	Проводка.Период = фДата;
	Проводка.Подразделение = фПодразделение;
	Проводка.Сумма = фСумма;
	
	Возврат Проводка;
	
КонецФункции
